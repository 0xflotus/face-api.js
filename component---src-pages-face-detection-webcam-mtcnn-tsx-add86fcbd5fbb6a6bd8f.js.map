{"version":3,"sources":["webpack:///./src/VideoWrap.ts","webpack:///./src/components/AdjustableInput.tsx","webpack:///./src/facc/DetectFacesMtcnn.tsx","webpack:///./src/pages/face_detection_webcam_mtcnn.tsx","webpack:///./src/styled/SideBySide.tsx"],"names":[],"mappings":"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","file":"component---src-pages-face-detection-webcam-mtcnn-tsx-add86fcbd5fbb6a6bd8f.js","sourcesContent":["export class VideoWrap {\r\n  private _video: HTMLVideoElement | undefined\r\n\r\n  constructor(video?: HTMLVideoElement | VideoWrap, srcObject?: MediaStream) {\r\n    if (!video) {\r\n      return\r\n    }\r\n\r\n    if (video instanceof VideoWrap) {\r\n      this._video = video.video\r\n      this._video.srcObject = video.video.srcObject\r\n      return\r\n    }\r\n\r\n    this._video = video\r\n    srcObject && (this._video.srcObject = srcObject)\r\n  }\r\n\r\n  public get video(): HTMLVideoElement | undefined {\r\n    return this._video\r\n  }\r\n\r\n  public get element(): HTMLVideoElement | undefined {\r\n    return this.video\r\n  }\r\n\r\n  public get isLoaded(): boolean {\r\n    return this.video instanceof HTMLVideoElement\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/VideoWrap.ts","import { Button, FormControl, Input, InputLabel } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { SideBySide } from '../styled/SideBySide';\r\n\r\nexport const StyledButton = styled(Button)`\r\n  width: 40px;\r\n  height: 40px;\r\n`\r\n\r\nexport type AdjustableInputProps = {\r\n  inputId: string\r\n  label: string\r\n  value: number\r\n  minValue: number\r\n  maxValue: number\r\n  step: number\r\n  onChange: (newValue: number) => any\r\n}\r\n\r\nexport const AdjustableInput = (props: AdjustableInputProps) =>\r\n  <FormControl>\r\n    <SideBySide>\r\n      <InputLabel htmlFor={props.inputId}>\r\n        { props.label }\r\n      </InputLabel>\r\n      <Input\r\n        id={props.inputId}\r\n        value={props.value}\r\n      />\r\n      <StyledButton\r\n        variant=\"outlined\"\r\n        onClick={\r\n          () => props.onChange(Math.max(props.value - props.step, props.minValue))\r\n        }\r\n      >\r\n        -\r\n      </StyledButton>\r\n      <StyledButton\r\n        variant=\"outlined\"\r\n        onClick={\r\n          () => props.onChange(Math.min(props.value + props.step, props.maxValue))\r\n        }\r\n      >\r\n        +\r\n      </StyledButton>\r\n    </SideBySide>\r\n  </FormControl>\n\n\n// WEBPACK FOOTER //\n// ./src/components/AdjustableInput.tsx","import * as faceapi from 'face-api.js';\nimport * as React from 'react';\n\nimport { MtcnnForwardParams, MtcnnResult } from '../../node_modules/face-api.js/build/mtcnn/types';\nimport { ImageWrap } from '../ImageWrap';\nimport { VideoWrap } from '../VideoWrap';\n\nexport interface DetectFacesMtcnnProps {\n  mtcnn: faceapi.Mtcnn\n  input: ImageWrap | VideoWrap\n  detectionParams: MtcnnForwardParams\n  children: (mtcnnResults: MtcnnResult[] | null) => React.Component | JSX.Element\n}\n\nexport interface DetectFacesMtcnnState {\n  mtcnnResults: MtcnnResult[] | null\n}\n\nexport class DetectFacesMtcnn extends React.Component<DetectFacesMtcnnProps, DetectFacesMtcnnState> {\n\n    state: DetectFacesMtcnnState = {\n      mtcnnResults: null\n    }\n\n    async detectFaces() {\n      if (!this.props.input.isLoaded) {\n        return\n      }\n\n      const mtcnnResults = await this.props.mtcnn.forward(this.props.input.element, this.props.detectionParams)\n\n      this.setState({\n        mtcnnResults\n      })\n    }\n\n    componentDidUpdate(prevProps: DetectFacesMtcnnProps) {\n      if (\n        this.props.mtcnn !== prevProps.mtcnn\n          || this.props.detectionParams !== prevProps.detectionParams\n          || this.props.input !== prevProps.input\n          || this.props.children !== prevProps.children\n      ) {\n        this.detectFaces()\n      }\n    }\n\n    componentDidMount() {\n      this.detectFaces()\n    }\n\n    render() {\n      return this.props.children(this.state.mtcnnResults)\n    }\n  }\n\n\n\n// WEBPACK FOOTER //\n// ./src/facc/DetectFacesMtcnn.tsx","import * as faceapi from 'face-api.js';\nimport { withPrefix } from 'gatsby-link';\nimport * as React from 'react';\n\nimport { MtcnnForwardParams } from '../../node_modules/face-api.js/build/mtcnn/types';\nimport { AdjustableInput } from '../components/AdjustableInput';\nimport { DetectFacesMtcnn } from '../facc/DetectFacesMtcnn';\nimport { LoadModels } from '../facc/LoadModels';\nimport { Root } from '../Root';\nimport { VideoWrap } from '../VideoWrap';\n\ntype FaceDetectionWebcamMtcnnPageState = {\n  inputVideo: VideoWrap\n  detectionParams: MtcnnForwardParams\n  isPlaying: boolean\n  overlay?: HTMLCanvasElement\n}\n\nexport default class extends React.Component<{}, FaceDetectionWebcamMtcnnPageState> {\n\n  constructor(props: {}) {\n    super(props)\n\n    this.state = {\n      inputVideo: new VideoWrap(),\n      isPlaying: false,\n      detectionParams: {\n        minFaceSize: 200\n      }\n    }\n\n    this.onVideoRef = this.onVideoRef.bind(this)\n  }\n\n  onVideoRef(videoEl: HTMLVideoElement) {\n    this.startCapturing(videoEl)\n  }\n\n  startCapturing(videoEl: HTMLVideoElement) {\n    console.log('startCapturing')\n    navigator.getUserMedia(\n      { video: {} },\n      stream => this.setState({ inputVideo: new VideoWrap(videoEl, stream) }),\n      err => console.error(err)\n    )\n  }\n\n  public render() {\n    if (!(typeof window !== 'undefined' && window.document) ){\n      return null\n    }\n\n    return(\n      <Root>\n        <video\n          muted\n          autoPlay\n          ref={this.onVideoRef}\n          onPlay={() => this.setState({ isPlaying: true })}\n        >\n        </video>\n        <AdjustableInput\n          inputId=\"minFaceSize\"\n          label=\"minFaceSize:\"\n          value={this.state.detectionParams.minFaceSize}\n          minValue={40}\n          maxValue={400}\n          step={40}\n          onChange={\n            (minFaceSize: number) => this.setState({\n              detectionParams: { ...this.state.detectionParams, minFaceSize }\n            })\n          }\n        />\n        <LoadModels mtcnnModelUrl={withPrefix('/models')}>\n        {\n          ({ mtcnn }) =>\n            <DetectFacesMtcnn\n              mtcnn={mtcnn}\n              input={this.state.inputVideo}\n              detectionParams={this.state.detectionParams}\n            >\n            {\n              (mtcnnResults) => {\n                const { overlay } = this.state\n\n                if (overlay && mtcnnResults) {\n                  const { width, height } = overlay\n                  overlay.getContext('2d').clearRect(0, 0, width, height)\n                  faceapi.drawDetection(\n                    overlay,\n                    mtcnnResults.map(res => res.faceDetection.forSize(width, height))\n                  )\n                  faceapi.drawLandmarks(\n                    overlay,\n                    mtcnnResults.map(res => res.faceLandmarks.forSize(width, height))\n                  )\n\n                  this.setState({ inputVideo: new VideoWrap(this.state.inputVideo) })\n                }\n\n                return null\n              }\n            }\n            </DetectFacesMtcnn>\n        }\n        </LoadModels>\n      </Root>\n    )\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/face_detection_webcam_mtcnn.tsx","import styled from 'styled-components';\r\n\r\nexport const SideBySide = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\n\n\n// WEBPACK FOOTER //\n// ./src/styled/SideBySide.tsx"],"sourceRoot":""}