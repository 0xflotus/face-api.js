{"version":3,"sources":["webpack:///./src/facc/DetectFaces.tsx","webpack:///./src/pages/face_detection.tsx"],"names":[],"mappings":";;;;;;;;kCAiBK,WAA6C;AAChD,aAAoB,iBAAG,MAAW,MAAiB,iBAAY,YAAM,MAAI,IAAI,KAAO,MAAe;AAEnG;AAGF;AAHS;AAGR;;;;;;;;;;AArBD,gDAA+D;AAE/D,yCAAwD;AACxD,iCAA+B;;AAoBlB,SAAW,mCAAqB,mBAChC;AACN,YAAC,oBAAC,cAAW,eAAM,OACzB;EAH0B,E;;;;;;;;;;;;;;;;ACzB3B,yCAAyC;AACzC,iCAA+B;AAE/B,4CAA8D;AAC9D,6CAAgF;AAChF,mCAA0C;AAC1C,yCAAkD;AAClD,wCAAgD;AAChD,uCAAyC;AACzC,kCAQA;;KAAqB;;;AAArB;;;;;AAEE,eAAK;AACK,uBAAE,IAAI,YAAS,UAAC,QAAc,eAAG,GAAK;AAC7B,gCAsCrB;AAxCkC;;AAwCjC;;yBAnCc;;;AACX,aAAK,EAAC,OAAa,WAAgB,eAAU,OAAU,WAAE;AACvD,oBAAW;AACZ;AAEK,oCACH,OAAI,YACH,oBAAC,kBAAe,mBACT,OAAE,QAAc,gBACN,iBAAM,KAAM,MAAS,SAAS,UACrC;AAAG,qBAAe,gBAAV;qBAAyB;wBAAK,OAAS,SAAC,EAAU,oBAAY;gBACjE,eAAK,KACL,eAAE,kBAAc,eAC7B,6BACD,aAAU,cAAsB,uBAAE,cAAU,WAAW;AAErD,iBAAwB;wCACtB,cAAW,eACM,kBAAkB,kBAC/B,KAAM,OAAM,MAAS,UACX,eAAM,OAAM,MAAkB;AAG1C,qBAAsB;wBACrB,oBAAC,iBAAc,kBACN,SAAM,OAAM,MAAQ,SACb,gBAQ9B;cAjBU;UAHJ,CARF;AA6BL;;;GA1CiC,MAAsC;;AAAxE,mBA0CC,U","file":"component---src-pages-face-detection-tsx-84223b5ad5d5705e3b90.js","sourcesContent":["import * as faceapi from 'face-api.js';\n\nimport { withAsyncRendering } from '../hoc/withAsyncRendering';\nimport { ImageWrap } from '../ImageWrap';\nimport { ModalLoader } from '../components/ModalLoader';\nimport * as React from 'react';\n\nexport interface DetectFacesProps {\n  faceDetectionNet: faceapi.FaceDetectionNet\n  img: ImageWrap\n  minConfidence: number\n}\n\nexport interface DetectFacesState {\n  faceDetections?: faceapi.FaceDetection[]\n}\n\nasync function detectFaces(props: DetectFacesProps) {\n  const faceDetections = await props.faceDetectionNet.locateFaces(props.img.img, props.minConfidence)\n\n  return {\n    faceDetections\n  }\n}\n\nexport const DetectFaces = withAsyncRendering<DetectFacesProps, DetectFacesState>(\n  detectFaces,\n  () => <ModalLoader title=\"Detecting Faces\"/>\n)\n\n\n\n// WEBPACK FOOTER //\n// ./src/facc/DetectFaces.tsx","import { withPrefix } from 'gatsby-link';\r\nimport * as React from 'react';\r\n\r\nimport { DisplayResults } from '../components/DisplayResults';\r\nimport { SelectableImage, SelectionTypes } from '../components/SelectableImage';\r\nimport { EXAMPLE_IMAGES } from '../const';\r\nimport { DetectFaces } from '../facc/DetectFaces';\r\nimport { LoadModels } from '../facc/LoadModels';\r\nimport { ImageWrap } from '../ImageWrap';\r\nimport { Root } from '../Root';\r\n\r\ntype FaceDetectionPageState = {\r\n  inputImg: ImageWrap\r\n  minDetectionScore: number\r\n  overlay?: HTMLCanvasElement\r\n}\r\n\r\nexport default class extends React.Component<{}, FaceDetectionPageState> {\r\n\r\n  state: FaceDetectionPageState = {\r\n    inputImg: new ImageWrap(EXAMPLE_IMAGES[0].url),\r\n    minDetectionScore: 0.5\r\n  }\r\n\r\n  public render() {\r\n    if (!(typeof window !== 'undefined' && window.document) ){\r\n      return null\r\n    }\r\n\r\n    return(\r\n      <Root>\r\n        <SelectableImage\r\n          items={EXAMPLE_IMAGES}\r\n          initialImageSrc={this.state.inputImg.imageSrc}\r\n          onLoaded={({ img: inputImg, overlay }) => this.setState({ inputImg, overlay })}\r\n          maxImageWidth={800}\r\n          selectionType={SelectionTypes.BOTH}\r\n        />\r\n        <LoadModels faceDetectionModelUrl={withPrefix('/models')}>\r\n        {\r\n          ({ faceDetectionNet }) =>\r\n            <DetectFaces\r\n              faceDetectionNet={faceDetectionNet}\r\n              img={this.state.inputImg}\r\n              minConfidence={this.state.minDetectionScore}\r\n            >\r\n            {\r\n              ({ faceDetections }) =>\r\n                <DisplayResults\r\n                  overlay={this.state.overlay}\r\n                  faceDetections={faceDetections}\r\n                />\r\n            }\r\n            </DetectFaces>\r\n        }\r\n        </LoadModels>\r\n      </Root>\r\n    )\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/face_detection.tsx"],"sourceRoot":""}