{"version":3,"sources":["webpack:///./src/VideoWrap.ts","webpack:///./src/components/AdjustableInput.tsx","webpack:///./src/components/WebcamVideoWithOverlay.tsx","webpack:///./src/facc/DetectFacesMtcnn.tsx","webpack:///./src/pages/face_detection_webcam_mtcnn.tsx","webpack:///./src/styled/SideBySide.tsx"],"names":[],"mappings":"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","file":"component---src-pages-face-detection-webcam-mtcnn-tsx-c3fd6ece8fc17acc62e6.js","sourcesContent":["export class VideoWrap {\r\n  private _video: HTMLVideoElement | undefined\r\n\r\n  constructor(video?: HTMLVideoElement | VideoWrap) {\r\n    if (!video) {\r\n      return\r\n    }\r\n\r\n    if (video instanceof VideoWrap) {\r\n      this._video = video.video\r\n      return\r\n    }\r\n\r\n    this._video = video\r\n  }\r\n\r\n  public get video(): HTMLVideoElement | undefined {\r\n    return this._video\r\n  }\r\n\r\n  public get element(): HTMLVideoElement | undefined {\r\n    return this.video\r\n  }\r\n\r\n  public get isLoaded(): boolean {\r\n    return this.video instanceof HTMLVideoElement\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/VideoWrap.ts","import { Button, FormControl, Input, InputLabel } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { SideBySide } from '../styled/SideBySide';\r\n\r\nexport const StyledButton = styled(Button)`\r\n  width: 40px;\r\n  height: 40px;\r\n`\r\n\r\nexport type AdjustableInputProps = {\r\n  inputId: string\r\n  label: string\r\n  value: number\r\n  minValue: number\r\n  maxValue: number\r\n  step: number\r\n  onChange: (newValue: number) => any\r\n}\r\n\r\nexport const AdjustableInput = (props: AdjustableInputProps) =>\r\n  <FormControl>\r\n    <SideBySide>\r\n      <InputLabel htmlFor={props.inputId}>\r\n        { props.label }\r\n      </InputLabel>\r\n      <Input\r\n        id={props.inputId}\r\n        value={props.value}\r\n      />\r\n      <StyledButton\r\n        variant=\"outlined\"\r\n        onClick={\r\n          () => props.onChange(Math.max(props.value - props.step, props.minValue))\r\n        }\r\n      >\r\n        -\r\n      </StyledButton>\r\n      <StyledButton\r\n        variant=\"outlined\"\r\n        onClick={\r\n          () => props.onChange(Math.min(props.value + props.step, props.maxValue))\r\n        }\r\n      >\r\n        +\r\n      </StyledButton>\r\n    </SideBySide>\r\n  </FormControl>\n\n\n// WEBPACK FOOTER //\n// ./src/components/AdjustableInput.tsx","import * as faceapi from 'face-api.js';\r\nimport * as React from 'react';\r\n\r\nimport { VideoWrap } from '../VideoWrap';\r\n\r\nexport type WebcamVideoWithOverlayProps = {\r\n  onLoaded: (refs: { video: VideoWrap, overlay: HTMLCanvasElement}) => any\r\n  maxVideoWidth?: number\r\n}\r\n\r\nexport class WebcamVideoWithOverlay extends React.Component<WebcamVideoWithOverlayProps> {\r\n  video: HTMLVideoElement | undefined\r\n  overlay: HTMLCanvasElement | undefined\r\n  isLoaded: boolean = false\r\n\r\n  constructor(props: WebcamVideoWithOverlayProps) {\r\n    super(props)\r\n\r\n    this.onChange = this.onChange.bind(this)\r\n    this.onVideoRef = this.onVideoRef.bind(this)\r\n    this.onCanvasRef = this.onCanvasRef.bind(this)\r\n    this.onPlay = this.onPlay.bind(this)\r\n  }\r\n\r\n  onChange() {\r\n    const { video, overlay, isLoaded } = this\r\n\r\n    if (video && overlay && isLoaded) {\r\n      const { width, height } = faceapi.getMediaDimensions(this.video)\r\n      this.overlay.width = width,\r\n      this.overlay.height = height\r\n      this.props.onLoaded({ video: new VideoWrap(video), overlay })\r\n    }\r\n  }\r\n\r\n  onVideoRef(el: HTMLVideoElement) {\r\n    this.video = el\r\n    this.onChange()\r\n    navigator.getUserMedia(\r\n      { video: {} },\r\n      stream => {\r\n        this.video.srcObject = stream\r\n      },\r\n      err => console.error(err)\r\n    )\r\n  }\r\n\r\n  onCanvasRef(el: HTMLCanvasElement) {\r\n    this.overlay = el\r\n    this.onChange()\r\n  }\r\n\r\n  onPlay() {\r\n    this.isLoaded = true\r\n    this.onChange()\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: WebcamVideoWithOverlayProps) {\r\n    return false\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.onChange()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onChange()\r\n  }\r\n\r\n  public render() {\r\n    return(\r\n      <div style={{ position: 'relative' }}>\r\n        <video\r\n          muted\r\n          autoPlay\r\n          style={{ maxWidth: this.props.maxVideoWidth }}\r\n          ref={this.onVideoRef}\r\n          onPlay={this.onPlay}\r\n        />\r\n        <canvas\r\n          style={{ position: 'absolute', top: 0, left: 0 }}\r\n          ref={this.onCanvasRef}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/WebcamVideoWithOverlay.tsx","import * as faceapi from 'face-api.js';\nimport * as React from 'react';\n\nimport { MtcnnForwardParams, MtcnnResult } from '../../node_modules/face-api.js/build/mtcnn/types';\nimport { ImageWrap } from '../ImageWrap';\nimport { VideoWrap } from '../VideoWrap';\n\nexport interface DetectFacesMtcnnProps {\n  mtcnn: faceapi.Mtcnn\n  input: ImageWrap | VideoWrap\n  detectionParams: MtcnnForwardParams\n  children: (mtcnnResults: MtcnnResult[] | null) => React.Component | JSX.Element\n}\n\nexport interface DetectFacesMtcnnState {\n  mtcnnResults: MtcnnResult[] | null\n}\n\nexport class DetectFacesMtcnn extends React.Component<DetectFacesMtcnnProps, DetectFacesMtcnnState> {\n\n    state: DetectFacesMtcnnState = {\n      mtcnnResults: null\n    }\n\n    async detectFaces() {\n      if (!this.props.input.isLoaded) {\n        return\n      }\n\n      const mtcnnResults = await this.props.mtcnn.forwardWithStats(this.props.input.element, this.props.detectionParams)\n      console.log(mtcnnResults.stats.pyramid, mtcnnResults.stats.scales)\n      this.setState({\n        mtcnnResults: mtcnnResults.results\n      })\n    }\n\n    componentWillReceiveProps(nextProps: DetectFacesMtcnnProps) {\n      if (\n        this.props.mtcnn !== nextProps.mtcnn\n          || this.props.detectionParams !== nextProps.detectionParams\n          || this.props.input !== nextProps.input\n          || this.props.children !== nextProps.children\n      ) {\n        this.detectFaces()\n      }\n    }\n\n    componentDidMount() {\n      this.detectFaces()\n    }\n\n    shouldComponentUpdate(_: any, nextState: DetectFacesMtcnnState) {\n      return this.state.mtcnnResults !== nextState.mtcnnResults\n    }\n\n    render() {\n      return this.props.children(this.state.mtcnnResults)\n    }\n  }\n\n\n\n// WEBPACK FOOTER //\n// ./src/facc/DetectFacesMtcnn.tsx","import * as faceapi from 'face-api.js';\nimport { withPrefix } from 'gatsby-link';\nimport * as React from 'react';\n\nimport { MtcnnForwardParams } from '../../node_modules/face-api.js/build/mtcnn/types';\nimport { AdjustableInput } from '../components/AdjustableInput';\nimport { WebcamVideoWithOverlay } from '../components/WebcamVideoWithOverlay';\nimport { DetectFacesMtcnn } from '../facc/DetectFacesMtcnn';\nimport { LoadModels } from '../facc/LoadModels';\nimport { Root } from '../Root';\nimport { VideoWrap } from '../VideoWrap';\n\ntype FaceDetectionWebcamMtcnnPageState = {\n  inputVideo: VideoWrap\n  detectionParams: MtcnnForwardParams\n  isPlaying: boolean\n  overlay?: HTMLCanvasElement\n}\n\nexport default class extends React.Component<{}, FaceDetectionWebcamMtcnnPageState> {\n  isBusy: boolean = true\n  interval: NodeJS.Timer\n\n  constructor(props: {}) {\n    super(props)\n\n    this.state = {\n      inputVideo: new VideoWrap(),\n      isPlaying: false,\n      detectionParams: {\n        minFaceSize: 200,\n        scaleFactor: 0.8\n      }\n    }\n\n    this.interval = setInterval(() => {\n      if (this.isBusy) {\n        return\n      }\n      this.isBusy = true\n      this.setState({ inputVideo: new VideoWrap(this.state.inputVideo) })\n    }, 16)\n  }\n\n  public render() {\n    if (!(typeof window !== 'undefined' && window.document) ){\n      return null\n    }\n\n    return(\n      <Root>\n        <WebcamVideoWithOverlay\n          onLoaded={({ video: inputVideo, overlay }) => this.setState({ inputVideo, overlay })}\n          maxVideoWidth={800}\n        />\n        <AdjustableInput\n          inputId=\"scaleFactor\"\n          label=\"scaleFactor:\"\n          value={this.state.detectionParams.scaleFactor}\n          minValue={0.1}\n          maxValue={0.9}\n          step={0.05}\n          onChange={\n            (scaleFactor: number) => this.setState({\n              detectionParams: { ...this.state.detectionParams, scaleFactor }\n            })\n          }\n        />\n        <AdjustableInput\n          inputId=\"minFaceSize\"\n          label=\"minFaceSize:\"\n          value={this.state.detectionParams.minFaceSize}\n          minValue={40}\n          maxValue={400}\n          step={40}\n          onChange={\n            (minFaceSize: number) => this.setState({\n              detectionParams: { ...this.state.detectionParams, minFaceSize }\n            })\n          }\n        />\n        <LoadModels mtcnnModelUrl={withPrefix('/models')}>\n        {\n          ({ mtcnn }) =>\n            <DetectFacesMtcnn\n              mtcnn={mtcnn}\n              input={this.state.inputVideo}\n              detectionParams={this.state.detectionParams}\n            >\n            {\n              (mtcnnResults) => {\n                const { overlay } = this.state\n\n                if (overlay && mtcnnResults) {\n                  const { width, height } = overlay\n                  overlay.getContext('2d').clearRect(0, 0, width, height)\n                  faceapi.drawDetection(\n                    overlay,\n                    mtcnnResults.map(res => res.faceDetection.forSize(width, height))\n                  )\n                  faceapi.drawLandmarks(\n                    overlay,\n                    mtcnnResults.map(res => res.faceLandmarks.forSize(width, height))\n                  )\n\n                  this.isBusy = false\n                }\n\n                return null\n              }\n            }\n            </DetectFacesMtcnn>\n        }\n        </LoadModels>\n      </Root>\n    )\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/face_detection_webcam_mtcnn.tsx","import styled from 'styled-components';\r\n\r\nexport const SideBySide = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\n\n\n// WEBPACK FOOTER //\n// ./src/styled/SideBySide.tsx"],"sourceRoot":""}