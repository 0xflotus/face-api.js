{"version":3,"sources":["webpack:///./src/components/FaceAndLandmarkDetection.tsx?7880*","webpack:///./src/components/TrackFaces.tsx?121c","webpack:///./src/components/VideoWithOverlay.tsx?4d4a","webpack:///./src/pages/video_face_tracking.tsx"],"names":[],"mappings":"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","file":"component---src-pages-video-face-tracking-tsx-e858e2891b3bf399629b.js","sourcesContent":["import * as Mui from '@material-ui/core';\r\nimport { FaceDetectionOptions, TinyFaceDetectorOptions } from 'face-api.js';\r\nimport { LoadModels, MediaElement } from 'face-api.js-react';\r\nimport * as React from 'react';\r\n\r\nimport { ReactElement } from '../../face-api.js-react';\r\nimport { ModalLoader } from '../components/ModalLoader';\r\nimport { getFaceDetectionModelUri, MODELS_URI } from '../const';\r\nimport { SelectFaceDetector } from '../facc/SelectFaceDetector';\r\nimport { CenterContent } from '../styled/CenterContent';\r\n\r\nexport type FaceAndLandmarkDetectionOptions = {\r\n  withLandmarks: boolean\r\n  withBoxes: boolean\r\n}\r\n\r\nexport type FaceAndLandmarkDetectionProps = {\r\n  input?: MediaElement\r\n  overlay?: HTMLCanvasElement\r\n}\r\n\r\ntype Props = FaceAndLandmarkDetectionProps & {\r\n  initialFaceDetector: string\r\n  initialTinyFaceDetectorOptions?: TinyFaceDetectorOptions\r\n  children?: (detectionOptions: FaceDetectionOptions, options: FaceAndLandmarkDetectionOptions) => ReactElement\r\n}\r\n\r\ntype FaceAndLandmarkDetectionState = FaceAndLandmarkDetectionOptions\r\n\r\nexport class FaceAndLandmarkDetection extends React.Component<Props, FaceAndLandmarkDetectionState> {\r\n\r\n  state: FaceAndLandmarkDetectionState = {\r\n    withLandmarks: false,\r\n    withBoxes: true\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <SelectFaceDetector\r\n        initialFaceDetector={this.props.initialFaceDetector}\r\n        initialTinyFaceDetectorOptions={this.props.initialTinyFaceDetectorOptions}\r\n      >\r\n      {(detectorName, detectionOptions, renderFaceDetectorSelection, renderFaceDetectorControls) =>\r\n        <LoadModels\r\n          {...getFaceDetectionModelUri(detectorName, MODELS_URI)}\r\n          faceLandmarkModelUrl={MODELS_URI}\r\n          renderBusyComponent={() => <ModalLoader title={`Loading ${detectorName} Model`} />}\r\n        >\r\n        {() =>\r\n          <div>\r\n            <CenterContent>\r\n              { renderFaceDetectorSelection() }\r\n              <CenterContent flexDirection=\"column\" alignItems=\"baseline\">\r\n                <Mui.FormControlLabel\r\n                  control={\r\n                    <Mui.Checkbox\r\n                      checked={this.state.withLandmarks}\r\n                      onChange={() => this.setState({ withLandmarks: !this.state.withLandmarks })}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Detect Face Landmarks\"\r\n                />\r\n                <Mui.FormControlLabel\r\n                  control={\r\n                    <Mui.Checkbox\r\n                      checked={!this.state.withBoxes}\r\n                      onChange={() => this.setState({ withBoxes: !this.state.withBoxes })}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Hide Bounding Boxes\"\r\n                />\r\n                </CenterContent>\r\n            </CenterContent>\r\n            { renderFaceDetectorControls() }\r\n            { this.props.children ? this.props.children(detectionOptions, this.state) : null }\r\n          </div>\r\n        }\r\n        </LoadModels>\r\n      }\r\n      </SelectFaceDetector>\r\n    )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FaceAndLandmarkDetection.tsx","import * as faceapi from 'face-api.js';\r\nimport * as React from 'react';\r\n\r\nimport { displayResults } from '../../face-api.js-react';\r\nimport { FaceAndLandmarkDetectionOptions, FaceAndLandmarkDetectionProps } from './FaceAndLandmarkDetection';\r\nimport { FaceDetectionOptions } from 'face-api.js';\r\n\r\nexport type TrackFacesProps = FaceAndLandmarkDetectionProps & {\r\n  detectionOptions: FaceDetectionOptions\r\n  options: FaceAndLandmarkDetectionOptions\r\n}\r\n\r\nexport class TrackFaces extends React.Component<TrackFacesProps> {\r\n\r\n  isActive: boolean = false\r\n\r\n  run = async () => {\r\n    if (!this.isActive) {\r\n      return\r\n    }\r\n\r\n    if (!this.props.input) {\r\n      return setTimeout(this.run, 0)\r\n    }\r\n\r\n    const { withLandmarks, withBoxes } = this.props.options\r\n    const detectionTask = faceapi.detectAllFaces(this.props.input.element, this.props.detectionOptions)\r\n    const results = await (withLandmarks ? detectionTask.withFaceLandmarks() : detectionTask)\r\n    displayResults(this.props.overlay, results, { withBoxes })\r\n\r\n    setTimeout(this.run, 0)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.isActive = true\r\n    this.run()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.isActive = false\r\n  }\r\n\r\n  public render(): any {\r\n    return null\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/TrackFaces.tsx","import { MediaElement } from 'face-api.js-react';\nimport * as React from 'react';\n\nexport type VideoWithOverlayProps = {\n  onLoaded?: (refs: { video: MediaElement, overlay: HTMLCanvasElement }) => any\n  onVideoRef?: () => any\n  maxVideoWidth?: number\n  src?: string\n  srcObject?: MediaStream | MediaSource | Blob | null\n}\n\nexport class VideoWithOverlay extends React.Component<VideoWithOverlayProps> {\n  video: HTMLVideoElement | undefined\n  overlay: HTMLCanvasElement | undefined\n  isLoaded: boolean = false\n\n  constructor(props: VideoWithOverlayProps) {\n    super(props)\n\n    this.onChange = this.onChange.bind(this)\n    this.onVideoRef = this.onVideoRef.bind(this)\n    this.onCanvasRef = this.onCanvasRef.bind(this)\n    this.onPlay = this.onPlay.bind(this)\n  }\n\n  onChange() {\n    const { video, overlay, isLoaded } = this\n\n    if (video && overlay && isLoaded) {\n      const { width, height } = this.video.getBoundingClientRect()\n      this.overlay.width = width,\n      this.overlay.height = height\n      this.props.onLoaded({ video: new MediaElement(video), overlay })\n    }\n  }\n\n  onVideoRef(el: HTMLVideoElement) {\n    this.video = el\n    this.props.onVideoRef && this.props.onVideoRef()\n    this.onChange()\n  }\n\n  onCanvasRef(el: HTMLCanvasElement) {\n    this.overlay = el\n    this.onChange()\n  }\n\n  onPlay() {\n    this.isLoaded = true\n    this.onChange()\n  }\n\n  componentWillReceiveProps(nextProps: VideoWithOverlayProps) {\n    const { srcObject } = nextProps\n    if (srcObject && this.props.srcObject !== srcObject) {\n      this.video.srcObject = srcObject\n    }\n  }\n\n  shouldComponentUpdate() {\n    return false\n  }\n\n  componentDidUpdate() {\n    this.onChange()\n  }\n\n  componentDidMount() {\n    this.onChange()\n  }\n\n  public render() {\n    return(\n      <div style={{ position: 'relative' }}>\n        <video\n          muted\n          autoPlay\n          style={{ maxWidth: this.props.maxVideoWidth }}\n          ref={this.onVideoRef}\n          onPlay={this.onPlay}\n          src={this.props.src}\n        />\n        <canvas\n          style={{ position: 'absolute', top: 0, left: 0 }}\n          ref={this.onCanvasRef}\n        />\n      </div>\n    )\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/VideoWithOverlay.tsx","import { TinyFaceDetectorOptions } from 'face-api.js';\nimport * as React from 'react';\n\nimport { FaceAndLandmarkDetection, FaceAndLandmarkDetectionProps } from '../components/FaceAndLandmarkDetection';\nimport { TrackFaces } from '../components/TrackFaces';\nimport { VideoWithOverlay } from '../components/VideoWithOverlay';\nimport { EXAMPLE_VIDEO, FACE_DETECTORS } from '../const';\nimport { Root } from '../Root';\n\ntype PageState = FaceAndLandmarkDetectionProps\n\nexport default class extends React.Component<{}, PageState> {\n\n  public render() {\n    if (!(typeof window !== 'undefined' && window.document) ){\n      return null\n    }\n\n    return(\n      <Root>\n        <VideoWithOverlay\n          onLoaded={({ video: input, overlay }) => this.setState({ input, overlay })}\n          maxVideoWidth={800}\n          src={EXAMPLE_VIDEO}\n        />\n        <FaceAndLandmarkDetection\n          {...this.state}\n          initialFaceDetector={FACE_DETECTORS[0]}\n          initialTinyFaceDetectorOptions={new TinyFaceDetectorOptions({ inputSize: 416 })}\n        >\n        {(detectionOptions, options) =>\n          <TrackFaces\n            detectionOptions={detectionOptions}\n            options={options}\n            {...this.state}\n          />\n        }\n        </FaceAndLandmarkDetection>\n      </Root>\n    )\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/video_face_tracking.tsx"],"sourceRoot":""}