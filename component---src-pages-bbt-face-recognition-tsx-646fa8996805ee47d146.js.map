{"version":3,"sources":["webpack:///./src/facc/ComputeRefDescriptors.tsx","webpack:///./src/pages/bbt_face_recognition.tsx","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_flags.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./src/components/ModalLoader.tsx","webpack:///./src/components/AdjustableInput.tsx","webpack:///./src/facc/MtcnnControls.tsx","webpack:///./src/facc/SsdMobilenetv1Controls.tsx","webpack:///./src/facc/TinyFaceDetectorControls.tsx","webpack:///./src/facc/SelectFaceDetector.tsx","webpack:///./src/components/ImageSelection.tsx","webpack:///./src/components/SelectableImage.tsx","webpack:///./face-api.js-react/facc/DetectFacesWithLandmarksWithDescriptors.tsx","webpack:///./src/components/DisplayMatches.tsx"],"names":["initRefDescriptors","props","Promise","all","refDataSources","map","label","url","faceapi","fetch","blob","bufferToImage","img","faceRecognitionNet","computeFaceDescriptor","descriptor","replace","refDescriptors","getBestMatch","queryDescriptor","ref","distance","reduce","best","curr","ComputeRefDescriptors","withAsyncRendering","REF_DATA_SOURCES","ALIGNED_FACE_IMAGES_BY_CLASS","srcsByClass","state","onTabIndexChanged","setState","inputImg","undefined","render","window","document","EXAMPLE_IMAGES","overlay","SelectionTypes","BOTH","maxWidth","MODELS_URI","FACE_DETECTORS","TinyFaceDetectorOptions","inputSize","detectorName","detectionOptions","renderFaceDetectorSelection","renderFaceDetectorControls","getFaceDetectionModelUri","fullFaceDescriptions","React","ModalLoader","title","StyledFormControl","styled","FormControl","StyledButton","Button","AdjustableInput","inputId","value","onChange","Math","max","step","minValue","min","maxValue","MtcnnParamControls","assignOptions","partial","detectionParams","scaleFactor","minFaceSize","MtcnnOptions","MtcnnControls","renderControls","children","SsdMobilenetv1ParamControls","minConfidence","SsdMobilenetv1Options","SsdMobilenetv1Controls","TinyFaceDetectorParamControls","scoreThreshold","e","target","inputSizes","size","TinyFaceDetectorControls","initialDetectionParams","defaultProps","SelectFaceDetector","renderSelection","marginRight","detector","item","initialFaceDetector","renderChildren","options","isSsdMobilenetv1","isTinyFaceDetector","initialTinyFaceDetectorOptions","isMtcnn","ImageSelection","items","selectedImage","Container","div","Margin","SelectableImage","imageSrc","initialImageSrc","onChangeSelection","bind","onLoadFromDisk","file","files","reader","FileReader","onload","loadEvent","result","readAsDataURL","selectionType","imageStyle","SELECT","FILE","imgId","display","detectFacesWithLandmarksWithDescriptors","input","element","withFaceLandmarks","withFaceDescriptors","DetectFacesWithLandmarksWithDescriptors","DisplayMatches","withScore","boxesWithText","fd","bestMatch","text","BoxWithText","detection","box"],"mappings":"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","file":"component---src-pages-bbt-face-recognition-tsx-646fa8996805ee47d146.js","sourcesContent":["import * as faceapi from 'face-api.js';\nimport { withAsyncRendering } from 'face-api.js-react';\n\nexport type RefDescriptor = {\n  label: string,\n  descriptor: Float32Array\n}\n\nexport type BestMatch = {\n  label: string,\n  distance: number\n}\n\nexport interface ComputeRefDescriptorsProps {\n  refDataSources: {\n    label: string,\n    url: string\n  }[]\n}\n\nexport interface ComputeRefDescriptorsState {\n  refDescriptors?: RefDescriptor[]\n  getBestMatch?: (queryDescriptor: Float32Array) => BestMatch\n}\n\nasync function initRefDescriptors(props: ComputeRefDescriptorsProps) {\n  const refDescriptors = await Promise.all(\n    props.refDataSources.map(async ({ label, url }) => {\n      const img = await faceapi.bufferToImage(await (await fetch(url)).blob())\n      const descriptor = await faceapi.nets.faceRecognitionNet.computeFaceDescriptor(img) as Float32Array\n      return {\n        label: label.replace('1.png', ''),\n        descriptor\n      }\n    })\n  )\n\n  const getBestMatch = (queryDescriptor: Float32Array) =>\n    refDescriptors.map(ref => ({\n      label: ref.label,\n      distance: faceapi.euclideanDistance(ref.descriptor, queryDescriptor)\n    }))\n      .reduce((best, curr) => curr.distance < best.distance ? curr : best)\n\n  return {\n    refDescriptors,\n    getBestMatch\n  }\n}\n\nexport const ComputeRefDescriptors = \n  withAsyncRendering<ComputeRefDescriptorsProps, ComputeRefDescriptorsState>(initRefDescriptors)\n","import { TinyFaceDetectorOptions } from 'face-api.js';\nimport { LoadModels, MediaElement } from 'face-api.js-react';\nimport * as React from 'react';\n\nimport {\n  DetectFacesWithLandmarksWithDescriptors,\n} from '../../face-api.js-react/facc/DetectFacesWithLandmarksWithDescriptors';\nimport { DisplayMatches } from '../components/DisplayMatches';\nimport { ModalLoader } from '../components/ModalLoader';\nimport { SelectableImage, SelectionTypes } from '../components/SelectableImage';\nimport {\n  ALIGNED_FACE_IMAGES_BY_CLASS,\n  EXAMPLE_IMAGES,\n  FACE_DETECTORS,\n  getFaceDetectionModelUri,\n  MODELS_URI,\n} from '../const';\nimport { ComputeRefDescriptors } from '../facc/ComputeRefDescriptors';\nimport { SelectFaceDetector } from '../facc/SelectFaceDetector';\nimport { Root } from '../Root';\n\nconst REF_DATA_SOURCES = ALIGNED_FACE_IMAGES_BY_CLASS.map(srcsByClass => srcsByClass[0])\n\ntype PageState = {\n  inputImg?: MediaElement\n  overlay?: HTMLCanvasElement\n}\n\nexport default class extends React.Component<{}, PageState> {\n\n  state: PageState = {\n  }\n\n  onTabIndexChanged = () => {\n    this.setState({ inputImg: undefined })\n  }\n\n  public render() {\n    if (!(typeof window !== 'undefined' && window.document) ){\n      return null\n    }\n\n    return(\n      <Root>\n        <SelectableImage\n          items={EXAMPLE_IMAGES}\n          initialImageSrc={EXAMPLE_IMAGES[0].url}\n          onLoaded={({ img: inputImg, overlay }) => this.setState({ inputImg, overlay })}\n          selectionType={SelectionTypes.BOTH}\n          imageStyle={{ maxWidth: 800 }}\n          imgId=\"img\"\n        />\n        <LoadModels\n          faceLandmarkModelUrl={MODELS_URI}\n          faceRecognitionModelUrl={MODELS_URI}\n          renderBusyComponent={() => <ModalLoader title={`Loading Models`} />}\n        >\n        {() =>\n          <ComputeRefDescriptors\n            refDataSources={REF_DATA_SOURCES}\n            renderBusyComponent={\n              () => <ModalLoader title=\"Computing Reference Descriptors\"/>\n            }\n          >\n          {({ getBestMatch }) =>\n            <SelectFaceDetector\n              initialFaceDetector={FACE_DETECTORS[0]}\n              initialTinyFaceDetectorOptions={new TinyFaceDetectorOptions({ inputSize: 512 })}\n            >\n            {(detectorName, detectionOptions, renderFaceDetectorSelection, renderFaceDetectorControls) =>\n              <LoadModels\n                {...getFaceDetectionModelUri(detectorName, MODELS_URI)}\n                renderBusyComponent={() => <ModalLoader title={`Loading ${detectorName} Model`} />}\n              >\n              {() =>\n                <div>\n                  { renderFaceDetectorSelection() }\n                  { renderFaceDetectorControls() }\n                  <DetectFacesWithLandmarksWithDescriptors\n                    input={this.state.inputImg}\n                    detectionOptions={detectionOptions}\n                  >\n                  {({ fullFaceDescriptions }) =>\n                    <DisplayMatches\n                      input={this.state.inputImg}\n                      fullFaceDescriptions={fullFaceDescriptions}\n                      overlay={this.state.overlay}\n                      getBestMatch={getBestMatch}\n                      withScore\n                    />\n                  }\n                  </DetectFacesWithLandmarksWithDescriptors>\n                </div>\n              }\n              </LoadModels>\n            }\n            </SelectFaceDetector>\n          }\n          </ComputeRefDescriptors>\n        }\n        </LoadModels>\n      </Root>\n    )\n  }\n}","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","import { Dialog, DialogContent, DialogTitle, LinearProgress } from '@material-ui/core';\nimport * as React from 'react';\n\nexport interface ModalLoaderProps {\n  title: string\n}\n\nexport const ModalLoader = (props: ModalLoaderProps) =>         \n  <Dialog\n    disableBackdropClick\n    disableEscapeKeyDown\n    open={true}\n  >\n    <DialogTitle>\n      { props.title }\n    </DialogTitle>\n    <DialogContent>\n      <LinearProgress />\n    </DialogContent>\n  </Dialog>","import { Button, FormControl, Input, InputLabel } from '@material-ui/core';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { SideBySide } from '../styled/SideBySide';\n\nexport const StyledFormControl = styled(FormControl)`\n  margin: 10px !important;\n`\n\nexport const StyledButton = styled(Button)`\n  width: 40px;\n  height: 40px;\n`\n\nexport type AdjustableInputProps = {\n  inputId: string\n  label: string\n  value: number\n  minValue: number\n  maxValue: number\n  step: number\n  onChange: (newValue: number) => any\n}\n\nexport const AdjustableInput = (props: AdjustableInputProps) =>\n  <StyledFormControl>\n    <SideBySide>\n      <InputLabel htmlFor={props.inputId}>\n        { props.label }\n      </InputLabel>\n      <Input\n        id={props.inputId}\n        value={props.value}\n      />\n      <StyledButton\n        variant=\"outlined\"\n        onClick={\n          () => props.onChange(Math.max(props.value - props.step, props.minValue))\n        }\n      >\n        -\n      </StyledButton>\n      <StyledButton\n        variant=\"outlined\"\n        onClick={\n          () => props.onChange(Math.min(props.value + props.step, props.maxValue))\n        }\n      >\n        +\n      </StyledButton>\n    </SideBySide>\n  </StyledFormControl>","import { IMtcnnOptions, MtcnnOptions } from 'face-api.js';\nimport * as React from 'react';\n\nimport { ReactElement } from '../../face-api.js-react';\nimport { AdjustableInput } from '../components/AdjustableInput';\nimport { CenterContent } from '../styled/CenterContent';\n\nexport interface MtcnnParamControlsProps {\n  detectionParams: MtcnnOptions\n  onChange: (detectionParams: MtcnnOptions) => any\n}\n\nexport const MtcnnParamControls = (props: MtcnnParamControlsProps) => {\n\n  const assignOptions = (partial: Partial<IMtcnnOptions>): MtcnnOptions => {\n    const { scaleFactor, minFaceSize } = props.detectionParams\n    return new MtcnnOptions({ scaleFactor, minFaceSize, ...partial })\n  }\n\n  return (\n    <CenterContent>\n      <AdjustableInput\n        inputId=\"scaleFactor\"\n        label=\"scaleFactor:\"\n        value={props.detectionParams.scaleFactor}\n        minValue={0.1}\n        maxValue={0.9}\n        step={0.05}\n        onChange={\n          (scaleFactor: number) => props.onChange(\n            assignOptions({ scaleFactor })\n          )\n        }\n      />\n      <AdjustableInput\n        inputId=\"minFaceSize\"\n        label=\"minFaceSize:\"\n        value={props.detectionParams.minFaceSize}\n        minValue={40}\n        maxValue={400}\n        step={40}\n        onChange={\n          (minFaceSize: number) => props.onChange(\n            assignOptions({ minFaceSize })\n          )\n        }\n      />\n    </CenterContent>\n  )\n}\n\nexport type MtcnnControlsProps = {\n  children: (detectionParams: MtcnnOptions, renderControls: () => ReactElement) => ReactElement\n}\n\nexport type MtcnnControlsState = {\n  detectionParams: MtcnnOptions\n}\n\nexport class MtcnnControls extends React.Component<MtcnnControlsProps, MtcnnControlsState> {\n\n  state: MtcnnControlsState = {\n    detectionParams: new MtcnnOptions()\n  }\n\n  renderControls = () =>\n    <MtcnnParamControls\n      detectionParams={this.state.detectionParams}\n      onChange={detectionParams => this.setState({ detectionParams })}\n    />\n\n  public render() {\n    return this.props.children(this.state.detectionParams, this.renderControls)\n  }\n}","import { ISsdMobilenetv1Options, SsdMobilenetv1Options } from 'face-api.js';\nimport * as React from 'react';\n\nimport { ReactElement } from '../../face-api.js-react';\nimport { AdjustableInput } from '../components/AdjustableInput';\nimport { CenterContent } from '../styled/CenterContent';\n\nexport interface SsdMobilenetv1ParamControlsProps {\n  detectionParams: SsdMobilenetv1Options\n  onChange: (detectionParams: SsdMobilenetv1Options) => any\n}\n\nexport const SsdMobilenetv1ParamControls = (props: SsdMobilenetv1ParamControlsProps) => {\n\n  const assignOptions = (partial: Partial<ISsdMobilenetv1Options>): SsdMobilenetv1Options => {\n    const { minConfidence } = props.detectionParams\n    return new SsdMobilenetv1Options({ minConfidence, ...partial })\n  }\n\n  return (\n    <CenterContent>\n      <AdjustableInput\n        inputId=\"minConfidence\"\n        label=\"minConfidence:\"\n        value={props.detectionParams.minConfidence}\n        minValue={0.1}\n        maxValue={0.9}\n        step={0.1}\n        onChange={\n          (minConfidence: number) => props.onChange(\n            assignOptions({ minConfidence })\n          )\n        }\n      />\n    </CenterContent>\n  )\n}\n\nexport type SsdMobilenetv1ControlsProps = {\n  children: (detectionParams: SsdMobilenetv1Options, renderControls: () => ReactElement) => ReactElement\n}\n\nexport type SsdMobilenetv1ControlsState = {\n  detectionParams: SsdMobilenetv1Options\n}\n\nexport class SsdMobilenetv1Controls extends React.Component<SsdMobilenetv1ControlsProps, SsdMobilenetv1ControlsState> {\n\n  state: SsdMobilenetv1ControlsState = {\n    detectionParams: new SsdMobilenetv1Options()\n  }\n\n  renderControls = () =>\n    <SsdMobilenetv1ParamControls\n      detectionParams={this.state.detectionParams}\n      onChange={detectionParams => this.setState({ detectionParams })}\n    />\n\n  public render() {\n    return this.props.children(this.state.detectionParams, this.renderControls)\n  }\n}","import { Input, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { ITinyFaceDetectorOptions, TinyFaceDetectorOptions } from 'face-api.js';\nimport * as React from 'react';\n\nimport { ReactElement } from '../../face-api.js-react';\nimport { AdjustableInput } from '../components/AdjustableInput';\nimport { CenterContent } from '../styled/CenterContent';\n\nexport interface TinyFaceDetectorParamControlsProps {\n  inputSizes: number[]\n  detectionParams: TinyFaceDetectorOptions\n  onChange: (detectionParams: TinyFaceDetectorOptions) => any\n}\n\nexport const TinyFaceDetectorParamControls = (props: TinyFaceDetectorParamControlsProps) => {\n\n  const assignOptions = (partial: Partial<ITinyFaceDetectorOptions>): TinyFaceDetectorOptions => {\n    const { inputSize, scoreThreshold } = props.detectionParams\n    return new TinyFaceDetectorOptions({ inputSize, scoreThreshold, ...partial })\n  }\n\n  return (\n    <CenterContent>\n      <InputLabel htmlFor=\"selectInputSize\">\n        Input Size\n      </InputLabel>\n      <Select\n        value={props.detectionParams.inputSize}\n        onChange={\n          (e: any) => props.onChange(\n            assignOptions({ inputSize: e.target.value })\n          )\n        }\n        input={<Input />}\n        id=\"selectInputSize\"\n      >\n        {\n          props.inputSizes.map((size: number) =>\n            <MenuItem\n              key={size}\n              value={size}\n            >\n              { size }\n            </MenuItem>\n          )\n        }\n      </Select>\n      <AdjustableInput\n        inputId=\"scoreThreshold\"\n        label=\"scoreThreshold:\"\n        value={props.detectionParams.scoreThreshold}\n        minValue={0.1}\n        maxValue={0.9}\n        step={0.1}\n        onChange={\n          (scoreThreshold: number) => props.onChange(\n            assignOptions({ scoreThreshold })\n          )\n        }\n      />\n    </CenterContent>\n  )\n}\n\nexport type TinyFaceDetectorControlsProps = {\n  inputSizes: number[]\n  children: (props: TinyFaceDetectorOptions, renderControls: () => ReactElement) => ReactElement\n  initialDetectionParams?: TinyFaceDetectorOptions\n}\n\nexport type TinyFaceDetectorControlsState = {\n  detectionParams: TinyFaceDetectorOptions\n}\n\nexport class TinyFaceDetectorControls extends React.Component<TinyFaceDetectorControlsProps, TinyFaceDetectorControlsState> {\n\n  static defaultProps: Partial<TinyFaceDetectorControlsProps> = {\n    initialDetectionParams: new TinyFaceDetectorOptions()\n  }\n\n  constructor(props: TinyFaceDetectorControlsProps) {\n    super(props)\n    this.state = {\n      detectionParams: this.props.initialDetectionParams\n    }\n  }\n\n  renderControls = () =>\n    <TinyFaceDetectorParamControls\n      inputSizes={this.props.inputSizes}\n      detectionParams={this.state.detectionParams}\n      onChange={detectionParams => this.setState({ detectionParams })}\n    />\n\n  public render() {\n    return this.props.children(this.state.detectionParams, this.renderControls)\n  }\n}","import { Input, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { FaceDetectionOptions, TinyFaceDetectorOptions } from 'face-api.js';\nimport * as React from 'react';\n\nimport { ReactElement } from '../../face-api.js-react/types';\nimport { FACE_DETECTORS, isMtcnn, isSsdMobilenetv1, isTinyFaceDetector } from '../const';\nimport { MtcnnControls } from './MtcnnControls';\nimport { SsdMobilenetv1Controls } from './SsdMobilenetv1Controls';\nimport { TinyFaceDetectorControls } from './TinyFaceDetectorControls';\n\nexport interface SelectFaceDetectorProps {\n  children: (\n    detectorName: string,\n    faceDetectionOptions: FaceDetectionOptions,\n    renderSelection: () => ReactElement,\n    renderFaceDetectionControls: () => ReactElement\n  ) => ReactElement,\n  initialFaceDetector: string,\n  initialTinyFaceDetectorOptions?: TinyFaceDetectorOptions\n}\n\nexport interface SelectFaceDetectorState {\n  detector: string\n}\n\nexport class SelectFaceDetector extends React.Component<SelectFaceDetectorProps, SelectFaceDetectorState> {\n  constructor(props: SelectFaceDetectorProps) {\n    super(props)\n    this.state = {\n      detector: props.initialFaceDetector\n    }\n  }\n\n  renderSelection = () =>\n    <div style={{ marginRight: 10 }}>\n      <InputLabel htmlFor=\"selectFaceDetector\">\n        Choose face detector:\n      </InputLabel>\n      <Select\n        value={this.state.detector}\n        onChange={e => this.setState({ detector: e.target.value })}\n        input={<Input />}\n        id=\"selectFaceDetector\"\n      >\n      {\n        FACE_DETECTORS.map(item =>\n          <MenuItem\n            key={item}\n            value={item}\n          >\n            { item }\n          </MenuItem>\n        )\n      }\n      </Select>\n    </div>\n\n  render() {\n    const renderChildren = (options: FaceDetectionOptions, renderControls: () => ReactElement) =>\n      this.props.children(this.state.detector, options, this.renderSelection, renderControls)\n\n    if (isSsdMobilenetv1(this.state.detector)) {\n      return (\n        <SsdMobilenetv1Controls>\n          { renderChildren }\n        </SsdMobilenetv1Controls>\n      )\n    } else if (isTinyFaceDetector(this.state.detector)) {\n      return (\n        <TinyFaceDetectorControls\n          inputSizes={[128, 160, 224, 320, 416, 512, 608]}\n          initialDetectionParams={this.props.initialTinyFaceDetectorOptions}\n        >\n          { renderChildren }\n        </TinyFaceDetectorControls>\n      )\n    } else if (isMtcnn(this.state.detector)) {\n      return (\n        <MtcnnControls>\n          { renderChildren }\n        </MtcnnControls>\n      )\n    }\n  }\n}\n","import { FormControl, FormHelperText, Input, MenuItem, Select } from '@material-ui/core';\nimport * as React from 'react';\n\nexport type ImageSelectionItem = {\n  url: string\n  label: string\n}\n\ntype ImageSelectionProps = {\n  items: ImageSelectionItem[]\n  selectedImage: string\n  onChange: (value: string) => void\n}\n\nexport const ImageSelection = ({ items, selectedImage, onChange }: ImageSelectionProps) =>\n  <FormControl>\n    <Select\n      value={selectedImage}\n      onChange={e => onChange(e.target.value)}\n      input={<Input />}\n    >\n      {\n        items.map(item =>\n          <MenuItem\n            key={item.url}\n            value={item.url}\n          >\n            { item.label }\n          </MenuItem>\n        )\n      }\n    </Select>\n    <FormHelperText>Pick an image</FormHelperText>\n  </FormControl>","import * as Mui from '@material-ui/core';\nimport { MediaElement } from 'face-api.js-react';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport { ImageWithOverlay } from '../../face-api.js-react';\nimport { SideBySide } from '../styled/SideBySide';\nimport { ImageSelection, ImageSelectionItem } from './ImageSelection';\n\nconst Container = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Margin = styled.div`\n  margin: 10px;\n`\n\n\nexport enum SelectionTypes {\n  SELECT = 'SELECT',\n  FILE = 'FILE',\n  BOTH = 'BOTH'\n}\n\nexport type SelectableImageProps = {\n  onLoaded: (refs: { img: MediaElement, overlay: HTMLCanvasElement}) => any\n  imgId: string\n  items?: ImageSelectionItem[]\n  initialImageSrc?: string\n  selectionType?: SelectionTypes\n  imageStyle?: React.CSSProperties\n}\n\nexport type SelectableImageState = {\n  imageSrc: string\n}\n\nexport class SelectableImage extends React.Component<SelectableImageProps, SelectableImageState> {\n  static defaultProps: Partial<SelectableImageProps> = {\n    selectionType: SelectionTypes.SELECT\n  }\n\n  constructor(props: SelectableImageProps) {\n    super(props)\n\n    this.state = {\n      imageSrc: props.initialImageSrc\n    }\n\n    this.onChangeSelection = this.onChangeSelection.bind(this)\n    this.onLoadFromDisk = this.onLoadFromDisk.bind(this)\n  }\n\n  onChangeSelection(imageSrc: string) {\n    this.setState({\n      imageSrc\n    })\n  }\n\n  onLoadFromDisk(e: any) {\n    const file = (e.target.files || [])[0]\n    if (!file) {\n      return\n    }\n\n    const reader = new FileReader()\n\n    reader.onload = (loadEvent: any) =>\n    this.setState({\n      imageSrc: loadEvent.target.result\n    })\n\n    reader.readAsDataURL(e.target.files[0])\n  }\n\n  render() {\n    const { selectionType } = this.props\n    return (\n      <Container>\n        <ImageWithOverlay\n          {...this.props}\n          imageSrc={this.state.imageSrc}\n          imageStyle={this.props.imageStyle}\n        />\n        <SideBySide>\n        {\n          (selectionType === SelectionTypes.SELECT || selectionType === SelectionTypes.BOTH)\n            &&\n            <Margin>\n              <ImageSelection\n                items={this.props.items}\n                selectedImage={this.state.imageSrc}\n                onChange={this.onChangeSelection}\n              />\n            </Margin>\n        }\n        {\n          (selectionType === SelectionTypes.FILE || selectionType === SelectionTypes.BOTH)\n            &&\n            <Margin>\n              <input\n                accept=\"image/*\"\n                id={this.props.imgId}\n                multiple\n                style={{ display: 'none' }}\n                onChange={this.onLoadFromDisk}\n                type=\"file\"\n              />\n              <label htmlFor={this.props.imgId}>\n                <Mui.Button variant=\"outlined\" component=\"span\">\n                  From Disk\n                </Mui.Button>\n              </label>\n            </Margin>\n        }\n        </SideBySide>\n      </Container>\n    )\n  }\n}","import * as faceapi from 'face-api.js';\n\nimport { withAsyncRendering } from '../hoc/withAsyncRendering';\nimport { MediaElement } from '../MediaElement';\nimport { FullFaceDescription, FaceDetectionOptions } from 'face-api.js';\n\nexport interface DetectFacesWithLandmarksWithDescriptorsProps {\n  detectionOptions: FaceDetectionOptions\n  input?: MediaElement\n}\n\nexport interface DetectFacesWithLandmarksWithDescriptorsState {\n  fullFaceDescriptions?: FullFaceDescription[]\n}\n\nasync function detectFacesWithLandmarksWithDescriptors(props: DetectFacesWithLandmarksWithDescriptorsProps) {\n\n  if (!props.input) {\n    return null\n  }\n\n  return {\n    fullFaceDescriptions: await faceapi.detectAllFaces(props.input.element, props.detectionOptions).withFaceLandmarks().withFaceDescriptors()\n  }\n}\n\nexport const DetectFacesWithLandmarksWithDescriptors =\n  withAsyncRendering<DetectFacesWithLandmarksWithDescriptorsProps, DetectFacesWithLandmarksWithDescriptorsState>(detectFacesWithLandmarksWithDescriptors)\n","import * as faceapi from 'face-api.js';\nimport * as React from 'react';\n\nimport { BestMatch } from '../facc/ComputeRefDescriptors';\nimport { BoxWithText } from 'face-api.js';\nimport { DisplayResults, ReactElement } from '../../face-api.js-react';\nimport { MediaElement } from '../../face-api.js-react/MediaElement';\n\n\nexport interface DisplayMatchesProps {\n  fullFaceDescriptions: faceapi.WithFaceDescriptor<faceapi.WithFaceLandmarks<faceapi.WithFaceDetection<{}>>>[]\n  input: MediaElement\n  overlay: HTMLCanvasElement\n  getBestMatch: (queryDescriptor: Float32Array) => BestMatch\n  withScore?: boolean\n  drawLandmarks?: boolean\n  children?: () => ReactElement\n}\n\nexport const DisplayMatches = (props: DisplayMatchesProps): any => {\n\n  const { input, fullFaceDescriptions, overlay, withScore, getBestMatch } = props\n\n  const boxesWithText = faceapi.resizeResults(fullFaceDescriptions, overlay)\n    .map(fd => {\n      const bestMatch = getBestMatch(fd.descriptor)\n      const text = `${bestMatch.distance < 0.6 ? bestMatch.label : 'unknown'} (${faceapi.round(bestMatch.distance)})`\n      return new BoxWithText(fd.detection.box, text)\n    })\n\n  return (\n    <DisplayResults\n      input={input}\n      results={boxesWithText}\n      overlay={overlay}\n      displayResultsOptions={{ withScore }}\n    >\n      { props.children }\n    </DisplayResults>\n  )\n}"],"sourceRoot":""}