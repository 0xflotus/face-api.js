{"version":3,"sources":["webpack:///./src/facc/DetectFaceLandmarks.tsx","webpack:///./src/facc/DetectFaces.tsx?432c","webpack:///./src/facc/ExtractFaces.tsx","webpack:///./src/pages/face_landmarks.tsx","webpack:///./src/styled/MarginTop.tsx?2673"],"names":[],"mappings":"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","file":"component---src-pages-face-landmarks-tsx-4bc3deb9aa78e323362c.js","sourcesContent":["import * as faceapi from 'face-api.js';\n\nimport { ModalLoader } from '../components/ModalLoader';\nimport { withAsyncRendering } from '../hoc/withAsyncRendering';\nimport { ImageWrap } from '../ImageWrap';\nimport * as React from 'react';\n\nexport interface DetectFaceLandmarksProps {\n  faceLandmarkNet: faceapi.FaceLandmarkNet\n  imgs: ImageWrap[]\n}\n\nexport interface DetectFaceLandmarksState {\n  faceLandmarks?: faceapi.FaceLandmarks68[]\n}\n\nasync function detectFaceLandmarks(props: DetectFaceLandmarksProps) {\n  const faceLandmarks = await Promise.all(\n    props.imgs.map(({ img }) => {\n      return props.faceLandmarkNet.detectLandmarks(img) as Promise<faceapi.FaceLandmarks68>\n    })\n  )\n\n  return {\n    faceLandmarks\n  }\n}\n\nexport const DetectFaceLandmarks = withAsyncRendering<DetectFaceLandmarksProps, DetectFaceLandmarksState>(\n  detectFaceLandmarks,\n  () => <ModalLoader title=\"Detecting Landmarks\"/>\n)\n\n\n\n// WEBPACK FOOTER //\n// ./src/facc/DetectFaceLandmarks.tsx","import * as faceapi from 'face-api.js';\n\nimport { withAsyncRendering } from '../hoc/withAsyncRendering';\nimport { ImageWrap } from '../ImageWrap';\nimport { ModalLoader } from '../components/ModalLoader';\nimport * as React from 'react';\n\nexport interface DetectFacesProps {\n  faceDetectionNet: faceapi.FaceDetectionNet\n  img: ImageWrap\n  minConfidence: number\n}\n\nexport interface DetectFacesState {\n  faceDetections?: faceapi.FaceDetection[]\n}\n\nasync function detectFaces(props: DetectFacesProps) {\n  const faceDetections = await props.faceDetectionNet.locateFaces(props.img.img, props.minConfidence)\n\n  return {\n    faceDetections\n  }\n}\n\nexport const DetectFaces = withAsyncRendering<DetectFacesProps, DetectFacesState>(\n  detectFaces,\n  () => <ModalLoader title=\"Detecting Faces\"/>\n)\n\n\n\n// WEBPACK FOOTER //\n// ./src/facc/DetectFaces.tsx","import * as faceapi from 'face-api.js';\n\nimport { withAsyncRendering } from '../hoc/withAsyncRendering';\nimport { ImageWrap } from '../ImageWrap';\n\nexport interface ExtractFacesProps {\n  img: ImageWrap\n  faceDetections: faceapi.FaceDetection[]\n}\n\nexport interface ExtractFacesState {\n  canvases?: HTMLCanvasElement[]\n}\n\nasync function extractFaces(props: ExtractFacesProps) {\n  const canvases = await faceapi.extractFaces(props.img.img, props.faceDetections)\n\n  return {\n    canvases\n  }\n}\n\nexport const ExtractFaces = withAsyncRendering<ExtractFacesProps, ExtractFacesState>(extractFaces)\n\n\n\n// WEBPACK FOOTER //\n// ./src/facc/ExtractFaces.tsx","import * as Mui from '@material-ui/core';\nimport * as faceapi from 'face-api.js';\nimport * as React from 'react';\n\nimport { DisplayResults } from '../components/DisplayResults';\nimport { ModalLoader } from '../components/ModalLoader';\nimport { SelectableImage, SelectionTypes } from '../components/SelectableImage';\nimport { ALIGNED_FACE_IMAGES } from '../const';\nimport { DetectFaceLandmarks } from '../facc/DetectFaceLandmarks';\nimport { DetectFaces } from '../facc/DetectFaces';\nimport { ExtractFaces } from '../facc/ExtractFaces';\nimport { LoadModels } from '../facc/LoadModels';\nimport { ImageWrap } from '../ImageWrap';\nimport { Root } from '../Root';\nimport { MarginTop } from '../styled/MarginTop';\n\n\ninterface DetectAndDrawFaceLandmarksForFaceImageProps {\n  inputImgs: ImageWrap[]\n  overlay: HTMLCanvasElement\n  faceLandmarkNet: faceapi.FaceLandmarkNet\n  drawLines: boolean\n  faceDetections?: faceapi.FaceDetection[]\n}\n\nclass DetectAndDrawFaceLandmarksForFaceImage extends React.Component<DetectAndDrawFaceLandmarksForFaceImageProps> {\n  render() {\n    return (\n      <DetectFaceLandmarks\n        imgs={this.props.inputImgs}\n        faceLandmarkNet={this.props.faceLandmarkNet}\n      >\n      {\n        ({ faceLandmarks, isBusy }) => {\n          if (isBusy) {\n            return <ModalLoader title=\"Detecting Face Landmarks\"/>\n          }\n\n          return (\n            <DisplayResults\n              {...this.props}\n              faceLandmarks={faceLandmarks}\n            />\n          )\n        }\n      }\n      </DetectFaceLandmarks>\n    )\n  }\n}\n\ninterface DetectAndDrawFaceLandmarksProps {\n  inputImg: ImageWrap\n  overlay: HTMLCanvasElement\n  faceLandmarkNet: faceapi.FaceLandmarkNet\n  drawLines: boolean\n  faceDetections?: faceapi.FaceDetection[]\n}\n\nclass DetectAndDrawFaceLandmarks extends React.Component<DetectAndDrawFaceLandmarksProps> {\n  render() {\n    if (this.props.faceDetections) {\n      return (\n        <ExtractFaces\n          img={this.props.inputImg}\n          faceDetections={this.props.faceDetections}\n        >\n        {\n          ({ canvases, isBusy }) =>\n            !isBusy &&\n              <DetectAndDrawFaceLandmarksForFaceImage\n                {...this.props}\n                inputImgs={canvases.map((canvas) => new ImageWrap('none', canvas))}\n              />\n        }\n        </ExtractFaces>\n      )\n    }\n\n    return (\n      <DetectAndDrawFaceLandmarksForFaceImage\n        {...this.props}\n        inputImgs={[this.props.inputImg]}\n      />\n    )\n  }\n}\n\ntype FaceLandmarksPageState = {\n  tabIndex: number\n  inputImg: ImageWrap\n  drawLines: boolean\n  overlay?: HTMLCanvasElement\n}\n\nexport default class extends React.Component<{}, FaceLandmarksPageState> {\n\n  state: FaceLandmarksPageState = {\n    tabIndex: 0,\n    inputImg: new ImageWrap(ALIGNED_FACE_IMAGES[30].url),\n    drawLines: true\n  }\n\n  toggleDrawLines = () => {\n    this.setState({ drawLines: !this.state.drawLines })\n  }\n\n  onTabIndexChanged = (_: any, tabIndex: number) => {\n    this.setState({ tabIndex, inputImg: new ImageWrap('none') })\n  }\n\n  isReadyForDetection = () => {\n    return !!this.state.inputImg && !!this.state.inputImg.img && !!this.state.overlay\n  }\n\n  public render() {\n    if (!(typeof window !== 'undefined' && window.document) ){\n      return null\n    }\n\n    return(\n      <Root>\n        <LoadModels\n          faceDetectionModelUrl={'/models'}\n          faceLandmarkModelUrl={'/models'}\n        >\n        {\n          ({ faceDetectionNet, faceLandmarkNet }) =>\n            <div>\n              <Mui.Tabs\n                value={this.state.tabIndex}\n                onChange={this.onTabIndexChanged}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                fullWidth\n              >\n                <Mui.Tab label=\"Preview\" value={0}/>\n                <Mui.Tab label=\"Use Own Images\" value={1}/>\n              </Mui.Tabs>\n              {\n                this.state.tabIndex === 0\n                  ?\n                    <div>\n                      <SelectableImage\n                        items={ALIGNED_FACE_IMAGES}\n                        initialImageSrc={this.state.inputImg.imageSrc}\n                        onLoaded={({ img: inputImg, overlay }) => this.setState({ inputImg, overlay })}\n                        maxImageWidth={150}\n                        selectionType={SelectionTypes.SELECT}\n                      />\n                      {\n                        this.isReadyForDetection()\n                        &&\n                        <DetectAndDrawFaceLandmarks\n                          {...this.state}\n                          overlay={this.state.overlay}\n                          faceLandmarkNet={faceLandmarkNet}\n                        />\n                      }\n                    </div>\n                  :\n                    <div>\n                      <SelectableImage\n                        onLoaded={({ img: inputImg, overlay }) => this.setState({ inputImg, overlay })}\n                        selectionType={SelectionTypes.FILE}\n                      />\n                      {\n                        this.isReadyForDetection()\n                        &&\n                        <DetectFaces\n                          faceDetectionNet={faceDetectionNet}\n                          img={this.state.inputImg}\n                          minConfidence={0.5}\n                        >\n                        {\n                          ({ faceDetections }) =>\n                              <DetectAndDrawFaceLandmarks\n                                {...this.state}\n                                overlay={this.state.overlay}\n                                faceDetections={faceDetections}\n                                faceLandmarkNet={faceLandmarkNet}\n                              />\n                        }\n                        </DetectFaces>\n                      }\n                    </div>\n              }\n          </div>\n        }\n        </LoadModels>\n        <MarginTop>\n          <Mui.FormControlLabel\n            control={\n              <Mui.Checkbox\n                checked={this.state.drawLines}\n                onChange={this.toggleDrawLines}\n                color=\"primary\"\n              />\n            }\n            label=\"Draw Lines\"\n          />\n        </MarginTop>\n\n      </Root>\n    )\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/face_landmarks.tsx","import styled from 'styled-components';\r\n\r\nexport const MarginTop = styled.div`\r\n  margin-top: 10px;\r\n`\n\n\n// WEBPACK FOOTER //\n// ./src/styled/MarginTop.tsx"],"sourceRoot":""}