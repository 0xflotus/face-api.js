{"version":3,"sources":["webpack:///./src/components/FaceSimilarity.tsx","webpack:///./src/facc/ComputeFaceDescriptors.tsx","webpack:///./src/pages/face_similarity.tsx","webpack:///./src/styled/MarginTop.tsx"],"names":[],"mappings":";;;;;;;;AAAA,kCAAmE;AACnE,iCAA+B;AAOlB,SAAc,2BAAkC;AAA/B,YAC5B,oBAAC,OAAW,mBACV,oBAAC,OAAU,cAAQ,SAAW,cAEjB,cACb,oBAAC,OAAK,SACF,IAAW,YACR,OAAO,MAAK,MACZ,OAAE,EAAiB,iBAAO,MAAU,UAAY,YAE3C;;;;;;;;;;;kCCFX,WAAmE;AACtE,aAAqB,kBAAG,cAAiB,UAC7B,KAAI,IAAC,UAAY;AACzB,oBAAY,MAAmB,mBAAsB,sBAAQ,QAC/D;AACD,UAHM,CAD8B;AAMrC;AAGF;AAHS;AAGR;;;;;;;;;;AAxBD,gDAA+D;AAE/D,yCAAwD;AACxD,iCAA+B;;AAuBlB,SAAsB,8CAAqB,mBAChC;AACjB,YAAC,oBAAC,cAAW,eAAM,OACzB;EAHqC,E;;;;;;;;;;;;;;;;AC5BtC,mCAAuC;AACvC,iCAA+B;AAE/B,4CAA8D;AAC9D,6CAAgE;AAChE,mCAA2D;AAC3D,oDAAwE;AACxE,wCAAgD;AAChD,uCAAyC;AACzC,kCAA+B;AAC/B,uCAAgD;AAChD,wCAOA;;KAAqB;;;AAArB;;;;;AAEE,eAAK;AACM,wBAAE,IAAI,YAAS,UAAC,QAAmB,oBAAI,IAAK;AAC5C,wBAAE,IAAI,YAAS,UAAC,QAAmB,oBAAI,IAyDpD;AA3DmC;;AA2DlC;;yBAtDc;;;AACX,aAAK,EAAC,OAAa,WAAgB,eAAU,OAAU,WAAE;AACvD,oBAAW;AACZ;AAEK,oCACH,OAAI,gCACF,aAAU,sCACR,kBAAe,mBACT,OAAE,QAAmB,qBACX,iBAAM,KAAM,MAAU,UAAS,UACtC;AAAG,qBAAsB,iBAAjB;wBAAsB,OAAS,SAAC,EAAc;gBACjD,eACb,KALF,CADF,sBAOG,kBAAe,mBACT,OAAE,QAAmB,qBACX,iBAAM,KAAM,MAAU,UAAS,UACtC;AAAG,qBAAsB,kBAAjB;wBAAsB,OAAS,SAAC,EAAc;gBACjD,eAEJ,KANX,wBAOD,YAAS,qCACP,aAAU,cAAwB,yBAAE,QAAU;AAE1C,iBAA0B;wCACxB,yBAAsB,0BACjB,MAAE,CAAK,OAAM,MAAU,WAAM,OAAM,MAAW,YAChC,oBAAoB,sBAGrC;qBAAuB;;AACtB,qBAAI,CAAgB,iBAAE;AACpB,4BAAW;AACZ;AAED,qBAAc,WAAU,QAAkB,kBACzB,gBAAG,IACH,gBAChB;AACM,wBACL,oBAAC,iBAAc,kBACP,WAAU,QAAM,MAAY,WAC3B,SAAU,WAGvB;AAQhB,cA5Bc;UAHN,CADF,CAfF;AAgDL;;;GA7DiC,MAAuC;;AAAzE,mBA6DC,U;;;;;;;;;;;;;;AC/ED,+CAAuC;AAE1B,SAAS,YAAG,oBAAM,QAE9B,qB","file":"component---src-pages-face-similarity-tsx-2698a236d952fcfb121f.js","sourcesContent":["import { FormControl, Input, InputLabel } from '@material-ui/core';\r\nimport * as React from 'react';\r\n\r\nexport type FaceSimilarityProps = {\r\n  text: string\r\n  isMatch: boolean\r\n}\r\n\r\nexport const FaceSimilarity = (props: FaceSimilarityProps) =>\r\n  <FormControl>\r\n    <InputLabel htmlFor=\"distance\">\r\n      Distance:\r\n    </InputLabel>\r\n    <Input\r\n      id=\"distance\"\r\n      value={props.text}\r\n      style={{ backgroundColor: props.isMatch ? '#b2ff59' : '#ea605d' }}\r\n    />\r\n  </FormControl>\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FaceSimilarity.tsx","import * as faceapi from 'face-api.js';\n\nimport { withAsyncRendering } from '../hoc/withAsyncRendering';\nimport { ImageWrap } from '../ImageWrap';\nimport { ModalLoader } from '../components/ModalLoader';\nimport * as React from 'react';\n\nexport interface ComputeFaceDescriptorsProps {\n  faceRecognitionNet: faceapi.FaceRecognitionNet\n  imgs: ImageWrap[]\n}\n\nexport interface ComputeFaceDescriptorsState {\n  faceDescriptors?: Float32Array[]\n}\n\nasync function computeFaceDescriptors(props: ComputeFaceDescriptorsProps) {\n  const faceDescriptors = await Promise.all(\n    props.imgs.map((imgWrap) => {\n      return props.faceRecognitionNet.computeFaceDescriptor(imgWrap.img) as Promise<Float32Array>\n    })\n  )\n\n  return {\n    faceDescriptors\n  }\n}\n\nexport const ComputeFaceDescriptors = withAsyncRendering<ComputeFaceDescriptorsProps, ComputeFaceDescriptorsState>(\n  computeFaceDescriptors,\n  () => <ModalLoader title=\"Computing Face Descriptors\"/>\n)\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/facc/ComputeFaceDescriptors.tsx","import * as faceapi from 'face-api.js';\nimport * as React from 'react';\n\nimport { FaceSimilarity } from '../components/FaceSimilarity';\nimport { SelectableImage } from '../components/SelectableImage';\nimport { ALIGNED_FACE_IMAGES, MODELS_URI } from '../const';\nimport { ComputeFaceDescriptors } from '../facc/ComputeFaceDescriptors';\nimport { LoadModels } from '../facc/LoadModels';\nimport { ImageWrap } from '../ImageWrap';\nimport { Root } from '../Root';\nimport { MarginTop } from '../styled/MarginTop';\nimport { SideBySide } from '../styled/SideBySide';\n\ntype FaceSimilarityPageState = {\n  inputImg1: ImageWrap\n  inputImg2: ImageWrap\n}\n\nexport default class extends React.Component<{}, FaceSimilarityPageState> {\n\n  state: FaceSimilarityPageState = {\n    inputImg1: new ImageWrap(ALIGNED_FACE_IMAGES[30].url),\n    inputImg2: new ImageWrap(ALIGNED_FACE_IMAGES[31].url)\n  }\n\n  public render() {\n    if (!(typeof window !== 'undefined' && window.document) ){\n      return null\n    }\n\n    return(\n      <Root>\n        <SideBySide>\n          <SelectableImage\n            items={ALIGNED_FACE_IMAGES}\n            initialImageSrc={this.state.inputImg1.imageSrc}\n            onLoaded={({ img: inputImg1 }) => this.setState({ inputImg1 })}\n            maxImageWidth={150}\n          />\n          <SelectableImage\n            items={ALIGNED_FACE_IMAGES}\n            initialImageSrc={this.state.inputImg2.imageSrc}\n            onLoaded={({ img: inputImg2 }) => this.setState({ inputImg2 })}\n            maxImageWidth={150}\n          />\n        </SideBySide>\n        <MarginTop>\n          <LoadModels faceRecognitionModelUrl={MODELS_URI}>\n            {\n              ({ faceRecognitionNet }) =>\n                <ComputeFaceDescriptors\n                  imgs={[this.state.inputImg1, this.state.inputImg2]}\n                  faceRecognitionNet={faceRecognitionNet}\n                >\n                {\n                  ({ faceDescriptors }) => {\n                    if (!faceDescriptors) {\n                      return null\n                    }\n\n                    const distance = faceapi.euclideanDistance(\n                      faceDescriptors[0],\n                      faceDescriptors[1]\n                    )\n                    return (\n                      <FaceSimilarity\n                        text={`${faceapi.round(distance)}`}\n                        isMatch={distance < 0.6}\n                      />\n                    )\n                  }\n                }\n                </ComputeFaceDescriptors>\n            }\n          </LoadModels>\n        </MarginTop>\n      </Root>\n    )\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/face_similarity.tsx","import styled from 'styled-components';\r\n\r\nexport const MarginTop = styled.div`\r\n  margin-top: 10px;\r\n`\n\n\n// WEBPACK FOOTER //\n// ./src/styled/MarginTop.tsx"],"sourceRoot":""}