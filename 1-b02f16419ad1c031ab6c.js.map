{"version":3,"sources":["webpack:///../../../src/classes/FaceDetection.ts","webpack:///../../../src/classes/FaceLandmarks.ts","webpack:///../../../src/classes/FaceLandmarks5.ts","webpack:///../../../src/classes/FaceLandmarks68.ts","webpack:///../../../src/classes/FaceMatch.ts","webpack:///../../../src/classes/LabeledFaceDescriptors.ts","webpack:///../../../src/classes/index.ts","webpack:///../../../src/dom/drawContour.ts","webpack:///../../../src/dom/drawLandmarks.ts","webpack:///../../../src/dom/drawFaceExpressions.ts","webpack:///../../../src/dom/extractFaces.ts","webpack:///../../../src/dom/extractFaceTensors.ts","webpack:///../../../src/dom/index.ts","webpack:///../../../src/faceFeatureExtractor/depthwiseSeparableConv.ts","webpack:///../../../src/faceFeatureExtractor/denseBlock.ts","webpack:///../../../src/faceFeatureExtractor/extractorsFactory.ts","webpack:///../../../src/faceFeatureExtractor/extractParams.ts","webpack:///../../../src/faceFeatureExtractor/loadParamsFactory.ts","webpack:///../../../src/faceFeatureExtractor/extractParamsFromWeigthMap.ts","webpack:///../../../src/faceFeatureExtractor/FaceFeatureExtractor.ts","webpack:///../../../src/common/fullyConnectedLayer.ts","webpack:///../../../src/faceProcessor/extractParams.ts","webpack:///../../../src/faceProcessor/extractParamsFromWeigthMap.ts","webpack:///../../../src/faceProcessor/util.ts","webpack:///../../../src/faceProcessor/FaceProcessor.ts","webpack:///../../../src/faceExpressionNet/types.ts","webpack:///../../../src/faceExpressionNet/FaceExpressionNet.ts","webpack:///../../../src/faceExpressionNet/index.ts","webpack:///../../../src/faceLandmarkNet/FaceLandmark68NetBase.ts","webpack:///../../../src/faceLandmarkNet/FaceLandmark68Net.ts","webpack:///../../../src/faceFeatureExtractor/extractParamsFromWeigthMapTiny.ts","webpack:///../../../src/faceFeatureExtractor/extractParamsTiny.ts","webpack:///../../../src/faceFeatureExtractor/TinyFaceFeatureExtractor.ts","webpack:///../../../src/faceLandmarkNet/FaceLandmark68TinyNet.ts","webpack:///../../../src/faceLandmarkNet/index.ts","webpack:///../../../src/faceRecognitionNet/scaleLayer.ts","webpack:///../../../src/faceRecognitionNet/convLayer.ts","webpack:///../../../src/faceRecognitionNet/extractParams.ts","webpack:///../../../src/faceRecognitionNet/extractParamsFromWeigthMap.ts","webpack:///../../../src/faceRecognitionNet/residualLayer.ts","webpack:///../../../src/faceRecognitionNet/FaceRecognitionNet.ts","webpack:///../../../src/faceRecognitionNet/index.ts","webpack:///../../../src/factories/WithFaceDescriptor.ts","webpack:///../../../src/factories/WithFaceDetection.ts","webpack:///../../../src/factories/WithFaceExpressions.ts","webpack:///../../../src/factories/WithFaceLandmarks.ts","webpack:///../../../src/factories/index.ts","webpack:///../../../src/mtcnn/MtcnnOptions.ts","webpack:///../../../src/ssdMobilenetv1/extractParams.ts","webpack:///../../../src/ssdMobilenetv1/extractParamsFromWeigthMap.ts","webpack:///../../../src/ssdMobilenetv1/pointwiseConvLayer.ts","webpack:///../../../src/ssdMobilenetv1/mobileNetV1.ts","webpack:///../../../src/ssdMobilenetv1/nonMaxSuppression.ts","webpack:///../../../src/ssdMobilenetv1/outputLayer.ts","webpack:///../../../src/ssdMobilenetv1/boxPredictionLayer.ts","webpack:///../../../src/ssdMobilenetv1/predictionLayer.ts","webpack:///../../../src/ssdMobilenetv1/SsdMobilenetv1Options.ts","webpack:///../../../src/ssdMobilenetv1/SsdMobilenetv1.ts","webpack:///../../../src/ssdMobilenetv1/index.ts","webpack:///../../../src/tinyFaceDetector/TinyFaceDetectorOptions.ts","webpack:///../../../src/globalApi/ComposableTask.ts","webpack:///../../../src/mtcnn/bgrToRgbTensor.ts","webpack:///../../../src/mtcnn/config.ts","webpack:///../../../src/mtcnn/extractParams.ts","webpack:///../../../src/mtcnn/extractParamsFromWeigthMap.ts","webpack:///../../../src/mtcnn/getSizesForScale.ts","webpack:///../../../src/mtcnn/pyramidDown.ts","webpack:///../../../src/mtcnn/MtcnnBox.ts","webpack:///../../../src/mtcnn/normalize.ts","webpack:///../../../src/mtcnn/prelu.ts","webpack:///../../../src/mtcnn/sharedLayers.ts","webpack:///../../../src/mtcnn/PNet.ts","webpack:///../../../src/mtcnn/stage1.ts","webpack:///../../../src/mtcnn/extractImagePatches.ts","webpack:///../../../src/mtcnn/RNet.ts","webpack:///../../../src/mtcnn/stage2.ts","webpack:///../../../src/mtcnn/ONet.ts","webpack:///../../../src/mtcnn/stage3.ts","webpack:///../../../src/mtcnn/Mtcnn.ts","webpack:///../../../src/tinyFaceDetector/const.ts","webpack:///../../../src/tinyFaceDetector/TinyFaceDetector.ts","webpack:///../../../src/tinyYolov2/const.ts","webpack:///../../../src/tinyYolov2/TinyYolov2.ts","webpack:///../../../src/globalApi/nets.ts","webpack:///../../../src/globalApi/ComputeFaceDescriptorsTasks.ts","webpack:///../../../src/globalApi/DetectFaceLandmarksTasks.ts","webpack:///../../../src/globalApi/PredictFaceExpressionsTask.ts","webpack:///../../../src/globalApi/DetectFacesTasks.ts","webpack:///../../../src/globalApi/detectFaces.ts","webpack:///../../../src/globalApi/allFaces.ts","webpack:///../../src/euclideanDistance.ts","webpack:///../../../src/globalApi/FaceMatcher.ts","webpack:///../../../src/globalApi/index.ts","webpack:///../../../src/mtcnn/index.ts","webpack:///../../../src/tinyFaceDetector/index.ts","webpack:///../../../src/tinyYolov2/index.ts","webpack:///../../src/resizeResults.ts","webpack:///../../src/index.ts","webpack:///./face-api.js-react/index.ts","webpack:///./src/styled/CenterContent.tsx","webpack:///./src/const.ts","webpack:///./src/styled/SideBySide.tsx","webpack:///./face-api.js-react/hoc/withAsyncRendering.tsx","webpack:///./src/styled/StyledLink.tsx","webpack:///./src/components/SideMenu.tsx","webpack:///./src/layouts/PageLayout.tsx","webpack:///./src/Root.tsx","webpack:///./face-api.js-react/components/DisplayResults.tsx","webpack:///./face-api.js-react/displayResults.tsx","webpack:///./face-api.js-react/shallowEquals.ts","webpack:///./face-api.js-react/facc/DetectFaceLandmarks.tsx","webpack:///./face-api.js-react/facc/DetectFaces.tsx","webpack:///./face-api.js-react/hoc/index.ts","webpack:///./face-api.js-react/MediaElement.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./face-api.js-react/facc/ComputeFaceDescriptors.tsx","webpack:///./face-api.js-react/facc/LoadModels.tsx","webpack:///./face-api.js-react/facc/index.ts","webpack:///./face-api.js-react/components/ImageWithOverlay.tsx","webpack:///./face-api.js-react/components/index.ts","webpack:///util (ignored)","webpack:///util (ignored)?56b2","webpack:///buffer (ignored)","webpack:///crypto (ignored)","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/getPageContext.js"],"names":["CenterContent","styled","div","props","alignItems","flexDirection","DOCS_URI","withPrefix","EXAMPLE_IMAGES","map","idx","label","url","ALIGNED_FACE_IMAGES_BY_CLASS","clazz","EXAMPLE_VIDEO","MODELS_URI","ALIGNED_FACE_IMAGES","reduce","flat","arr","concat","FACE_DETECTORS","isTinyFaceDetector","detectorName","isSsdMobilenetv1","isMtcnn","getFaceDetectionModelUri","modelUri","tinyFaceDetectorModelUrl","ssdMobilenetv1ModelUrl","mtcnnModelUrl","Error","SideBySide","withAsyncRendering","asyncAction","initialState","state","injectedProps","isBusy","dispatchAsyncAction","bind","setState","componentWillReceiveProps","nextProps","shallowEquals","componentDidMount","render","renderBusyComponent","children","Object","assign","React","linkCss","css","StyledLink","Link","StyledAbsLink","a","styles","theme","paper","width","sideMenuWidth","SideMenuComponent","renderDrawer","isSm","menu","onToggle","paddingLeft","items","item","linkTo","isOpen","keepMounted","classes","SideMenu","withStyles","PageHeader","h3","MENU_ITEMS","pageContent","position","top","left","right","maxWidth","padding","marginLeft","breakpoints","up","PageLayoutComponent","isSideMenuOpen","toggleMenu","zIndex","PageLayout","getPageContext","require","default","Root","context","pageContext","sheetsManager","DisplayResults","displayResults","input","overlay","results","displayResultsOptions","defaultProps","withScore","drawLines","options","getContext","clearRect","height","element","getBoundingClientRect","withBoxes","length","resizedResults","res","BoxWithText","FaceLandmarks68","forSize","detections","filter","ObjectDetection","FaceDetectionWithLandmarks","detection","drawDetectionsOptions","textColor","fontSize","faceLandmarks","landmarks","drawLandmarksOptions","color","lineWidth","faceapi","obj1","obj2","excludeKeys","excludeKeysSet","Set","keysSet","keys","key","has","Array","from","values","detectFaceLandmarks","faceLandmark68Net","detectLandmarks","DetectFaceLandmarks","detectFaces","detectionOptions","faceDetections","DetectFaces","MediaElement","_element","preferDefault","m","process","module","exports","computeFaceDescriptors","inputs","every","Promise","all","faceRecognitionNet","computeFaceDescriptor","faceDescriptors","ComputeFaceDescriptors","loadModels","faceLandmarkModelUrl","faceRecognitionModelUrl","load","net","isLoaded","tinyFaceDetector","ssdMobilenetv1","mtcnn","LoadModels","ImageWithOverlay","onImageLoaded","onImageRef","onCanvasRef","onChange","img","onLoaded","el","shouldComponentUpdate","imageSrc","componentDidUpdate","containerStyle","imageStyle","canvasStyle","StaticQueryContext","createContext","StaticQuery","staticQueryData","data","query","propTypes","PropTypes","object","string","isRequired","func","graphql","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","json","shape","createMuiTheme","palette","primary","light","cyan","main","dark","createPageContext","Map","sheetsRegistry","SheetsRegistry","generateClassName","createGenerateClassName","browser","global","__INIT_MATERIAL_UI__"],"mappings":"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","file":"1-b02f16419ad1c031ab6c.js","sourcesContent":["import * as tslib_1 from \"tslib\";\r\nimport { ObjectDetection } from 'tfjs-image-recognition-base';\r\nvar FaceDetection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FaceDetection, _super);\r\n    function FaceDetection(score, relativeBox, imageDims) {\r\n        return _super.call(this, score, score, '', relativeBox, imageDims) || this;\r\n    }\r\n    FaceDetection.prototype.forSize = function (width, height) {\r\n        return _super.prototype.forSize.call(this, width, height);\r\n    };\r\n    return FaceDetection;\r\n}(ObjectDetection));\r\nexport { FaceDetection };\r\n//# sourceMappingURL=FaceDetection.js.map","import { Dimensions, getCenterPoint, Point, Rect } from 'tfjs-image-recognition-base';\r\nimport { FaceDetection } from './FaceDetection';\r\n// face alignment constants\r\nvar relX = 0.5;\r\nvar relY = 0.43;\r\nvar relScale = 0.45;\r\nvar FaceLandmarks = /** @class */ (function () {\r\n    function FaceLandmarks(relativeFaceLandmarkPositions, imgDims, shift) {\r\n        if (shift === void 0) { shift = new Point(0, 0); }\r\n        var width = imgDims.width, height = imgDims.height;\r\n        this._imgDims = new Dimensions(width, height);\r\n        this._shift = shift;\r\n        this._positions = relativeFaceLandmarkPositions.map(function (pt) { return pt.mul(new Point(width, height)).add(shift); });\r\n    }\r\n    Object.defineProperty(FaceLandmarks.prototype, \"shift\", {\r\n        get: function () { return new Point(this._shift.x, this._shift.y); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FaceLandmarks.prototype, \"imageWidth\", {\r\n        get: function () { return this._imgDims.width; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FaceLandmarks.prototype, \"imageHeight\", {\r\n        get: function () { return this._imgDims.height; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FaceLandmarks.prototype, \"positions\", {\r\n        get: function () { return this._positions; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FaceLandmarks.prototype, \"relativePositions\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._positions.map(function (pt) { return pt.sub(_this._shift).div(new Point(_this.imageWidth, _this.imageHeight)); });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FaceLandmarks.prototype.forSize = function (width, height) {\r\n        return new this.constructor(this.relativePositions, { width: width, height: height });\r\n    };\r\n    FaceLandmarks.prototype.shiftBy = function (x, y) {\r\n        return new this.constructor(this.relativePositions, this._imgDims, new Point(x, y));\r\n    };\r\n    FaceLandmarks.prototype.shiftByPoint = function (pt) {\r\n        return this.shiftBy(pt.x, pt.y);\r\n    };\r\n    /**\r\n     * Aligns the face landmarks after face detection from the relative positions of the faces\r\n     * bounding box, or it's current shift. This function should be used to align the face images\r\n     * after face detection has been performed, before they are passed to the face recognition net.\r\n     * This will make the computed face descriptor more accurate.\r\n     *\r\n     * @param detection (optional) The bounding box of the face or the face detection result. If\r\n     * no argument was passed the position of the face landmarks are assumed to be relative to\r\n     * it's current shift.\r\n     * @returns The bounding box of the aligned face.\r\n     */\r\n    FaceLandmarks.prototype.align = function (detection) {\r\n        if (detection) {\r\n            var box = detection instanceof FaceDetection\r\n                ? detection.box.floor()\r\n                : detection;\r\n            return this.shiftBy(box.x, box.y).align();\r\n        }\r\n        var centers = this.getRefPointsForAlignment();\r\n        var leftEyeCenter = centers[0], rightEyeCenter = centers[1], mouthCenter = centers[2];\r\n        var distToMouth = function (pt) { return mouthCenter.sub(pt).magnitude(); };\r\n        var eyeToMouthDist = (distToMouth(leftEyeCenter) + distToMouth(rightEyeCenter)) / 2;\r\n        var size = Math.floor(eyeToMouthDist / relScale);\r\n        var refPoint = getCenterPoint(centers);\r\n        // TODO: pad in case rectangle is out of image bounds\r\n        var x = Math.floor(Math.max(0, refPoint.x - (relX * size)));\r\n        var y = Math.floor(Math.max(0, refPoint.y - (relY * size)));\r\n        return new Rect(x, y, Math.min(size, this.imageWidth + x), Math.min(size, this.imageHeight + y));\r\n    };\r\n    FaceLandmarks.prototype.getRefPointsForAlignment = function () {\r\n        throw new Error('getRefPointsForAlignment not implemented by base class');\r\n    };\r\n    return FaceLandmarks;\r\n}());\r\nexport { FaceLandmarks };\r\n//# sourceMappingURL=FaceLandmarks.js.map","import * as tslib_1 from \"tslib\";\r\nimport { getCenterPoint } from 'tfjs-image-recognition-base';\r\nimport { FaceLandmarks } from './FaceLandmarks';\r\nvar FaceLandmarks5 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FaceLandmarks5, _super);\r\n    function FaceLandmarks5() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FaceLandmarks5.prototype.getRefPointsForAlignment = function () {\r\n        var pts = this.positions;\r\n        return [\r\n            pts[0],\r\n            pts[1],\r\n            getCenterPoint([pts[3], pts[4]])\r\n        ];\r\n    };\r\n    return FaceLandmarks5;\r\n}(FaceLandmarks));\r\nexport { FaceLandmarks5 };\r\n//# sourceMappingURL=FaceLandmarks5.js.map","import * as tslib_1 from \"tslib\";\r\nimport { getCenterPoint } from 'tfjs-image-recognition-base';\r\nimport { FaceLandmarks } from '../classes/FaceLandmarks';\r\nvar FaceLandmarks68 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FaceLandmarks68, _super);\r\n    function FaceLandmarks68() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FaceLandmarks68.prototype.getJawOutline = function () {\r\n        return this.positions.slice(0, 17);\r\n    };\r\n    FaceLandmarks68.prototype.getLeftEyeBrow = function () {\r\n        return this.positions.slice(17, 22);\r\n    };\r\n    FaceLandmarks68.prototype.getRightEyeBrow = function () {\r\n        return this.positions.slice(22, 27);\r\n    };\r\n    FaceLandmarks68.prototype.getNose = function () {\r\n        return this.positions.slice(27, 36);\r\n    };\r\n    FaceLandmarks68.prototype.getLeftEye = function () {\r\n        return this.positions.slice(36, 42);\r\n    };\r\n    FaceLandmarks68.prototype.getRightEye = function () {\r\n        return this.positions.slice(42, 48);\r\n    };\r\n    FaceLandmarks68.prototype.getMouth = function () {\r\n        return this.positions.slice(48, 68);\r\n    };\r\n    FaceLandmarks68.prototype.getRefPointsForAlignment = function () {\r\n        return [\r\n            this.getLeftEye(),\r\n            this.getRightEye(),\r\n            this.getMouth()\r\n        ].map(getCenterPoint);\r\n    };\r\n    return FaceLandmarks68;\r\n}(FaceLandmarks));\r\nexport { FaceLandmarks68 };\r\n//# sourceMappingURL=FaceLandmarks68.js.map","import { round } from 'tfjs-image-recognition-base';\r\nvar FaceMatch = /** @class */ (function () {\r\n    function FaceMatch(label, distance) {\r\n        this._label = label;\r\n        this._distance = distance;\r\n    }\r\n    Object.defineProperty(FaceMatch.prototype, \"label\", {\r\n        get: function () { return this._label; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FaceMatch.prototype, \"distance\", {\r\n        get: function () { return this._distance; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FaceMatch.prototype.toString = function (withDistance) {\r\n        if (withDistance === void 0) { withDistance = true; }\r\n        return \"\" + this.label + (withDistance ? \" (\" + round(this.distance) + \")\" : '');\r\n    };\r\n    return FaceMatch;\r\n}());\r\nexport { FaceMatch };\r\n//# sourceMappingURL=FaceMatch.js.map","var LabeledFaceDescriptors = /** @class */ (function () {\r\n    function LabeledFaceDescriptors(label, descriptors) {\r\n        if (!(typeof label === 'string')) {\r\n            throw new Error('LabeledFaceDescriptors - constructor expected label to be a string');\r\n        }\r\n        if (!Array.isArray(descriptors) || descriptors.some(function (desc) { return !(desc instanceof Float32Array); })) {\r\n            throw new Error('LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array');\r\n        }\r\n        this._label = label;\r\n        this._descriptors = descriptors;\r\n    }\r\n    Object.defineProperty(LabeledFaceDescriptors.prototype, \"label\", {\r\n        get: function () { return this._label; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LabeledFaceDescriptors.prototype, \"descriptors\", {\r\n        get: function () { return this._descriptors; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return LabeledFaceDescriptors;\r\n}());\r\nexport { LabeledFaceDescriptors };\r\n//# sourceMappingURL=LabeledFaceDescriptors.js.map","export * from './FaceDetection';\r\nexport * from './FaceLandmarks';\r\nexport * from './FaceLandmarks5';\r\nexport * from './FaceLandmarks68';\r\nexport * from './FaceMatch';\r\nexport * from './LabeledFaceDescriptors';\r\n//# sourceMappingURL=index.js.map","export function drawContour(ctx, points, isClosed) {\r\n    if (isClosed === void 0) { isClosed = false; }\r\n    ctx.beginPath();\r\n    points.slice(1).forEach(function (_a, prevIdx) {\r\n        var x = _a.x, y = _a.y;\r\n        var from = points[prevIdx];\r\n        ctx.moveTo(from.x, from.y);\r\n        ctx.lineTo(x, y);\r\n    });\r\n    if (isClosed) {\r\n        var from = points[points.length - 1];\r\n        var to = points[0];\r\n        if (!from || !to) {\r\n            return;\r\n        }\r\n        ctx.moveTo(from.x, from.y);\r\n        ctx.lineTo(to.x, to.y);\r\n    }\r\n    ctx.stroke();\r\n}\r\n//# sourceMappingURL=drawContour.js.map","import { env, getContext2dOrThrow, getDefaultDrawOptions, resolveInput } from 'tfjs-image-recognition-base';\r\nimport { FaceLandmarks68 } from '../classes/FaceLandmarks68';\r\nimport { drawContour } from './drawContour';\r\nexport function drawLandmarks(canvasArg, faceLandmarks, options) {\r\n    var canvas = resolveInput(canvasArg);\r\n    if (!(canvas instanceof env.getEnv().Canvas)) {\r\n        throw new Error('drawLandmarks - expected canvas to be of type: HTMLCanvasElement');\r\n    }\r\n    var drawOptions = Object.assign(getDefaultDrawOptions(options), (options || {}));\r\n    var drawLines = Object.assign({ drawLines: false }, (options || {})).drawLines;\r\n    var ctx = getContext2dOrThrow(canvas);\r\n    var lineWidth = drawOptions.lineWidth, _a = drawOptions.color, color = _a === void 0 ? 'blue' : _a;\r\n    var faceLandmarksArray = Array.isArray(faceLandmarks) ? faceLandmarks : [faceLandmarks];\r\n    faceLandmarksArray.forEach(function (landmarks) {\r\n        if (drawLines && landmarks instanceof FaceLandmarks68) {\r\n            ctx.strokeStyle = color;\r\n            ctx.lineWidth = lineWidth;\r\n            drawContour(ctx, landmarks.getJawOutline());\r\n            drawContour(ctx, landmarks.getLeftEyeBrow());\r\n            drawContour(ctx, landmarks.getRightEyeBrow());\r\n            drawContour(ctx, landmarks.getNose());\r\n            drawContour(ctx, landmarks.getLeftEye(), true);\r\n            drawContour(ctx, landmarks.getRightEye(), true);\r\n            drawContour(ctx, landmarks.getMouth(), true);\r\n            return;\r\n        }\r\n        // else draw points\r\n        var ptOffset = lineWidth / 2;\r\n        ctx.fillStyle = color;\r\n        landmarks.positions.forEach(function (pt) { return ctx.fillRect(pt.x - ptOffset, pt.y - ptOffset, lineWidth, lineWidth); });\r\n    });\r\n}\r\n//# sourceMappingURL=drawLandmarks.js.map","import { drawText, env, getContext2dOrThrow, getDefaultDrawOptions, resolveInput, round } from 'tfjs-image-recognition-base';\r\nexport function drawFaceExpressions(canvasArg, faceExpressions, options) {\r\n    var canvas = resolveInput(canvasArg);\r\n    if (!(canvas instanceof env.getEnv().Canvas)) {\r\n        throw new Error('drawFaceExpressions - expected canvas to be of type: HTMLCanvasElement');\r\n    }\r\n    var drawOptions = Object.assign(getDefaultDrawOptions(options), (options || {}));\r\n    var ctx = getContext2dOrThrow(canvas);\r\n    var _a = drawOptions.primaryColor, primaryColor = _a === void 0 ? 'red' : _a, _b = drawOptions.secondaryColor, secondaryColor = _b === void 0 ? 'blue' : _b, _c = drawOptions.primaryFontSize, primaryFontSize = _c === void 0 ? 22 : _c, _d = drawOptions.secondaryFontSize, secondaryFontSize = _d === void 0 ? 16 : _d, _e = drawOptions.minConfidence, minConfidence = _e === void 0 ? 0.2 : _e;\r\n    var faceExpressionsArray = Array.isArray(faceExpressions)\r\n        ? faceExpressions\r\n        : [faceExpressions];\r\n    faceExpressionsArray.forEach(function (_a) {\r\n        var position = _a.position, expressions = _a.expressions;\r\n        var x = position.x, y = position.y;\r\n        var height = position.height || 0;\r\n        var sorted = expressions.sort(function (a, b) { return b.probability - a.probability; });\r\n        var resultsToDisplay = sorted.filter(function (expr) { return expr.probability > minConfidence; });\r\n        var offset = (y + height + resultsToDisplay.length * primaryFontSize) > canvas.height\r\n            ? -(resultsToDisplay.length * primaryFontSize)\r\n            : 0;\r\n        resultsToDisplay.forEach(function (expr, i) {\r\n            var text = expr.expression + \" (\" + round(expr.probability) + \")\";\r\n            drawText(ctx, x, y + height + (i * primaryFontSize) + offset, text, {\r\n                textColor: i === 0 ? primaryColor : secondaryColor,\r\n                fontSize: i === 0 ? primaryFontSize : secondaryFontSize\r\n            });\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=drawFaceExpressions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { createCanvas, env, getContext2dOrThrow, imageTensorToCanvas, toNetInput, } from 'tfjs-image-recognition-base';\r\nimport { FaceDetection } from '../classes/FaceDetection';\r\n/**\r\n * Extracts the image regions containing the detected faces.\r\n *\r\n * @param input The image that face detection has been performed on.\r\n * @param detections The face detection results or face bounding boxes for that image.\r\n * @returns The Canvases of the corresponding image region for each detected face.\r\n */\r\nexport function extractFaces(input, detections) {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var Canvas, canvas, netInput, tensorOrCanvas, _a, ctx, boxes;\r\n        return tslib_1.__generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    Canvas = env.getEnv().Canvas;\r\n                    canvas = input;\r\n                    if (!!(input instanceof Canvas)) return [3 /*break*/, 5];\r\n                    return [4 /*yield*/, toNetInput(input)];\r\n                case 1:\r\n                    netInput = _b.sent();\r\n                    if (netInput.batchSize > 1) {\r\n                        throw new Error('extractFaces - batchSize > 1 not supported');\r\n                    }\r\n                    tensorOrCanvas = netInput.getInput(0);\r\n                    if (!(tensorOrCanvas instanceof Canvas)) return [3 /*break*/, 2];\r\n                    _a = tensorOrCanvas;\r\n                    return [3 /*break*/, 4];\r\n                case 2: return [4 /*yield*/, imageTensorToCanvas(tensorOrCanvas)];\r\n                case 3:\r\n                    _a = _b.sent();\r\n                    _b.label = 4;\r\n                case 4:\r\n                    canvas = _a;\r\n                    _b.label = 5;\r\n                case 5:\r\n                    ctx = getContext2dOrThrow(canvas);\r\n                    boxes = detections.map(function (det) { return det instanceof FaceDetection\r\n                        ? det.forSize(canvas.width, canvas.height).box.floor()\r\n                        : det; })\r\n                        .map(function (box) { return box.clipAtImageBorders(canvas.width, canvas.height); });\r\n                    return [2 /*return*/, boxes.map(function (_a) {\r\n                            var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n                            var faceImg = createCanvas({ width: width, height: height });\r\n                            getContext2dOrThrow(faceImg)\r\n                                .putImageData(ctx.getImageData(x, y, width, height), 0, 0);\r\n                            return faceImg;\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=extractFaces.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { isTensor4D, isTensor3D } from 'tfjs-image-recognition-base';\r\nimport { FaceDetection } from '../classes/FaceDetection';\r\n/**\r\n * Extracts the tensors of the image regions containing the detected faces.\r\n * Useful if you want to compute the face descriptors for the face images.\r\n * Using this method is faster then extracting a canvas for each face and\r\n * converting them to tensors individually.\r\n *\r\n * @param imageTensor The image tensor that face detection has been performed on.\r\n * @param detections The face detection results or face bounding boxes for that image.\r\n * @returns Tensors of the corresponding image region for each detected face.\r\n */\r\nexport function extractFaceTensors(imageTensor, detections) {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        return tslib_1.__generator(this, function (_a) {\r\n            if (!isTensor3D(imageTensor) && !isTensor4D(imageTensor)) {\r\n                throw new Error('extractFaceTensors - expected image tensor to be 3D or 4D');\r\n            }\r\n            if (isTensor4D(imageTensor) && imageTensor.shape[0] > 1) {\r\n                throw new Error('extractFaceTensors - batchSize > 1 not supported');\r\n            }\r\n            return [2 /*return*/, tf.tidy(function () {\r\n                    var _a = imageTensor.shape.slice(isTensor4D(imageTensor) ? 1 : 0), imgHeight = _a[0], imgWidth = _a[1], numChannels = _a[2];\r\n                    var boxes = detections.map(function (det) { return det instanceof FaceDetection\r\n                        ? det.forSize(imgWidth, imgHeight).box\r\n                        : det; })\r\n                        .map(function (box) { return box.clipAtImageBorders(imgWidth, imgHeight); });\r\n                    var faceTensors = boxes.map(function (_a) {\r\n                        var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n                        return tf.slice3d(imageTensor.as3D(imgHeight, imgWidth, numChannels), [y, x, 0], [height, width, numChannels]);\r\n                    });\r\n                    return faceTensors;\r\n                })];\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=extractFaceTensors.js.map","export * from './drawContour';\r\nexport * from './drawLandmarks';\r\nexport * from './drawFaceExpressions';\r\nexport * from './extractFaces';\r\nexport * from './extractFaceTensors';\r\n//# sourceMappingURL=index.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function depthwiseSeparableConv(x, params, stride) {\r\n    return tf.tidy(function () {\r\n        var out = tf.separableConv2d(x, params.depthwise_filter, params.pointwise_filter, stride, 'same');\r\n        out = tf.add(out, params.bias);\r\n        return out;\r\n    });\r\n}\r\n//# sourceMappingURL=depthwiseSeparableConv.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { depthwiseSeparableConv } from './depthwiseSeparableConv';\r\nexport function denseBlock3(x, denseBlockParams, isFirstLayer) {\r\n    if (isFirstLayer === void 0) { isFirstLayer = false; }\r\n    return tf.tidy(function () {\r\n        var out1 = tf.relu(isFirstLayer\r\n            ? tf.add(tf.conv2d(x, denseBlockParams.conv0.filters, [2, 2], 'same'), denseBlockParams.conv0.bias)\r\n            : depthwiseSeparableConv(x, denseBlockParams.conv0, [2, 2]));\r\n        var out2 = depthwiseSeparableConv(out1, denseBlockParams.conv1, [1, 1]);\r\n        var in3 = tf.relu(tf.add(out1, out2));\r\n        var out3 = depthwiseSeparableConv(in3, denseBlockParams.conv2, [1, 1]);\r\n        return tf.relu(tf.add(out1, tf.add(out2, out3)));\r\n    });\r\n}\r\nexport function denseBlock4(x, denseBlockParams, isFirstLayer, isScaleDown) {\r\n    if (isFirstLayer === void 0) { isFirstLayer = false; }\r\n    if (isScaleDown === void 0) { isScaleDown = true; }\r\n    return tf.tidy(function () {\r\n        var out1 = tf.relu(isFirstLayer\r\n            ? tf.add(tf.conv2d(x, denseBlockParams.conv0.filters, isScaleDown ? [2, 2] : [1, 1], 'same'), denseBlockParams.conv0.bias)\r\n            : depthwiseSeparableConv(x, denseBlockParams.conv0, isScaleDown ? [2, 2] : [1, 1]));\r\n        var out2 = depthwiseSeparableConv(out1, denseBlockParams.conv1, [1, 1]);\r\n        var in3 = tf.relu(tf.add(out1, out2));\r\n        var out3 = depthwiseSeparableConv(in3, denseBlockParams.conv2, [1, 1]);\r\n        var in4 = tf.relu(tf.add(out1, tf.add(out2, out3)));\r\n        var out4 = depthwiseSeparableConv(in4, denseBlockParams.conv3, [1, 1]);\r\n        return tf.relu(tf.add(out1, tf.add(out2, tf.add(out3, out4))));\r\n    });\r\n}\r\n//# sourceMappingURL=denseBlock.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { extractConvParamsFactory, SeparableConvParams } from 'tfjs-tiny-yolov2';\r\nexport function extractorsFactory(extractWeights, paramMappings) {\r\n    function extractSeparableConvParams(channelsIn, channelsOut, mappedPrefix) {\r\n        var depthwise_filter = tf.tensor4d(extractWeights(3 * 3 * channelsIn), [3, 3, channelsIn, 1]);\r\n        var pointwise_filter = tf.tensor4d(extractWeights(channelsIn * channelsOut), [1, 1, channelsIn, channelsOut]);\r\n        var bias = tf.tensor1d(extractWeights(channelsOut));\r\n        paramMappings.push({ paramPath: mappedPrefix + \"/depthwise_filter\" }, { paramPath: mappedPrefix + \"/pointwise_filter\" }, { paramPath: mappedPrefix + \"/bias\" });\r\n        return new SeparableConvParams(depthwise_filter, pointwise_filter, bias);\r\n    }\r\n    var extractConvParams = extractConvParamsFactory(extractWeights, paramMappings);\r\n    function extractDenseBlock3Params(channelsIn, channelsOut, mappedPrefix, isFirstLayer) {\r\n        if (isFirstLayer === void 0) { isFirstLayer = false; }\r\n        var conv0 = isFirstLayer\r\n            ? extractConvParams(channelsIn, channelsOut, 3, mappedPrefix + \"/conv0\")\r\n            : extractSeparableConvParams(channelsIn, channelsOut, mappedPrefix + \"/conv0\");\r\n        var conv1 = extractSeparableConvParams(channelsOut, channelsOut, mappedPrefix + \"/conv1\");\r\n        var conv2 = extractSeparableConvParams(channelsOut, channelsOut, mappedPrefix + \"/conv2\");\r\n        return { conv0: conv0, conv1: conv1, conv2: conv2 };\r\n    }\r\n    function extractDenseBlock4Params(channelsIn, channelsOut, mappedPrefix, isFirstLayer) {\r\n        if (isFirstLayer === void 0) { isFirstLayer = false; }\r\n        var _a = extractDenseBlock3Params(channelsIn, channelsOut, mappedPrefix, isFirstLayer), conv0 = _a.conv0, conv1 = _a.conv1, conv2 = _a.conv2;\r\n        var conv3 = extractSeparableConvParams(channelsOut, channelsOut, mappedPrefix + \"/conv3\");\r\n        return { conv0: conv0, conv1: conv1, conv2: conv2, conv3: conv3 };\r\n    }\r\n    return {\r\n        extractDenseBlock3Params: extractDenseBlock3Params,\r\n        extractDenseBlock4Params: extractDenseBlock4Params\r\n    };\r\n}\r\n//# sourceMappingURL=extractorsFactory.js.map","import { extractWeightsFactory } from 'tfjs-image-recognition-base';\r\nimport { extractorsFactory } from './extractorsFactory';\r\nexport function extractParams(weights) {\r\n    var paramMappings = [];\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var extractDenseBlock4Params = extractorsFactory(extractWeights, paramMappings).extractDenseBlock4Params;\r\n    var dense0 = extractDenseBlock4Params(3, 32, 'dense0', true);\r\n    var dense1 = extractDenseBlock4Params(32, 64, 'dense1');\r\n    var dense2 = extractDenseBlock4Params(64, 128, 'dense2');\r\n    var dense3 = extractDenseBlock4Params(128, 256, 'dense3');\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    return {\r\n        paramMappings: paramMappings,\r\n        params: { dense0: dense0, dense1: dense1, dense2: dense2, dense3: dense3 }\r\n    };\r\n}\r\n//# sourceMappingURL=extractParams.js.map","import { extractWeightEntryFactory } from 'tfjs-image-recognition-base';\r\nimport { SeparableConvParams } from 'tfjs-tiny-yolov2';\r\nexport function loadParamsFactory(weightMap, paramMappings) {\r\n    var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\r\n    function extractConvParams(prefix) {\r\n        var filters = extractWeightEntry(prefix + \"/filters\", 4);\r\n        var bias = extractWeightEntry(prefix + \"/bias\", 1);\r\n        return { filters: filters, bias: bias };\r\n    }\r\n    function extractSeparableConvParams(prefix) {\r\n        var depthwise_filter = extractWeightEntry(prefix + \"/depthwise_filter\", 4);\r\n        var pointwise_filter = extractWeightEntry(prefix + \"/pointwise_filter\", 4);\r\n        var bias = extractWeightEntry(prefix + \"/bias\", 1);\r\n        return new SeparableConvParams(depthwise_filter, pointwise_filter, bias);\r\n    }\r\n    function extractDenseBlock3Params(prefix, isFirstLayer) {\r\n        if (isFirstLayer === void 0) { isFirstLayer = false; }\r\n        var conv0 = isFirstLayer\r\n            ? extractConvParams(prefix + \"/conv0\")\r\n            : extractSeparableConvParams(prefix + \"/conv0\");\r\n        var conv1 = extractSeparableConvParams(prefix + \"/conv1\");\r\n        var conv2 = extractSeparableConvParams(prefix + \"/conv2\");\r\n        return { conv0: conv0, conv1: conv1, conv2: conv2 };\r\n    }\r\n    function extractDenseBlock4Params(prefix, isFirstLayer) {\r\n        if (isFirstLayer === void 0) { isFirstLayer = false; }\r\n        var conv0 = isFirstLayer\r\n            ? extractConvParams(prefix + \"/conv0\")\r\n            : extractSeparableConvParams(prefix + \"/conv0\");\r\n        var conv1 = extractSeparableConvParams(prefix + \"/conv1\");\r\n        var conv2 = extractSeparableConvParams(prefix + \"/conv2\");\r\n        var conv3 = extractSeparableConvParams(prefix + \"/conv3\");\r\n        return { conv0: conv0, conv1: conv1, conv2: conv2, conv3: conv3 };\r\n    }\r\n    return {\r\n        extractDenseBlock3Params: extractDenseBlock3Params,\r\n        extractDenseBlock4Params: extractDenseBlock4Params\r\n    };\r\n}\r\n//# sourceMappingURL=loadParamsFactory.js.map","import { disposeUnusedWeightTensors } from 'tfjs-image-recognition-base';\r\nimport { loadParamsFactory } from './loadParamsFactory';\r\nexport function extractParamsFromWeigthMap(weightMap) {\r\n    var paramMappings = [];\r\n    var extractDenseBlock4Params = loadParamsFactory(weightMap, paramMappings).extractDenseBlock4Params;\r\n    var params = {\r\n        dense0: extractDenseBlock4Params('dense0', true),\r\n        dense1: extractDenseBlock4Params('dense1'),\r\n        dense2: extractDenseBlock4Params('dense2'),\r\n        dense3: extractDenseBlock4Params('dense3')\r\n    };\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParamsFromWeigthMap.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { NeuralNetwork, normalize, toNetInput } from 'tfjs-image-recognition-base';\r\nimport { denseBlock4 } from './denseBlock';\r\nimport { extractParams } from './extractParams';\r\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\r\nvar FaceFeatureExtractor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FaceFeatureExtractor, _super);\r\n    function FaceFeatureExtractor() {\r\n        return _super.call(this, 'FaceFeatureExtractor') || this;\r\n    }\r\n    FaceFeatureExtractor.prototype.forwardInput = function (input) {\r\n        var params = this.params;\r\n        if (!params) {\r\n            throw new Error('FaceFeatureExtractor - load model before inference');\r\n        }\r\n        return tf.tidy(function () {\r\n            var batchTensor = input.toBatchTensor(112, true);\r\n            var meanRgb = [122.782, 117.001, 104.298];\r\n            var normalized = normalize(batchTensor, meanRgb).div(tf.scalar(255));\r\n            var out = denseBlock4(normalized, params.dense0, true);\r\n            out = denseBlock4(out, params.dense1);\r\n            out = denseBlock4(out, params.dense2);\r\n            out = denseBlock4(out, params.dense3);\r\n            out = tf.avgPool(out, [7, 7], [2, 2], 'valid');\r\n            return out;\r\n        });\r\n    };\r\n    FaceFeatureExtractor.prototype.forward = function (input) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FaceFeatureExtractor.prototype.getDefaultModelName = function () {\r\n        return 'face_feature_extractor_model';\r\n    };\r\n    FaceFeatureExtractor.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return extractParamsFromWeigthMap(weightMap);\r\n    };\r\n    FaceFeatureExtractor.prototype.extractParams = function (weights) {\r\n        return extractParams(weights);\r\n    };\r\n    return FaceFeatureExtractor;\r\n}(NeuralNetwork));\r\nexport { FaceFeatureExtractor };\r\n//# sourceMappingURL=FaceFeatureExtractor.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function fullyConnectedLayer(x, params) {\r\n    return tf.tidy(function () {\r\n        return tf.add(tf.matMul(x, params.weights), params.bias);\r\n    });\r\n}\r\n//# sourceMappingURL=fullyConnectedLayer.js.map","import { extractWeightsFactory } from 'tfjs-image-recognition-base';\r\nimport { extractFCParamsFactory } from 'tfjs-tiny-yolov2';\r\nexport function extractParams(weights, channelsIn, channelsOut) {\r\n    var paramMappings = [];\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var extractFCParams = extractFCParamsFactory(extractWeights, paramMappings);\r\n    var fc = extractFCParams(channelsIn, channelsOut, 'fc');\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    return {\r\n        paramMappings: paramMappings,\r\n        params: { fc: fc }\r\n    };\r\n}\r\n//# sourceMappingURL=extractParams.js.map","import { disposeUnusedWeightTensors, extractWeightEntryFactory } from 'tfjs-image-recognition-base';\r\nexport function extractParamsFromWeigthMap(weightMap) {\r\n    var paramMappings = [];\r\n    var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\r\n    function extractFcParams(prefix) {\r\n        var weights = extractWeightEntry(prefix + \"/weights\", 2);\r\n        var bias = extractWeightEntry(prefix + \"/bias\", 1);\r\n        return { weights: weights, bias: bias };\r\n    }\r\n    var params = {\r\n        fc: extractFcParams('fc')\r\n    };\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParamsFromWeigthMap.js.map","export function seperateWeightMaps(weightMap) {\r\n    var featureExtractorMap = {};\r\n    var classifierMap = {};\r\n    Object.keys(weightMap).forEach(function (key) {\r\n        var map = key.startsWith('fc') ? classifierMap : featureExtractorMap;\r\n        map[key] = weightMap[key];\r\n    });\r\n    return { featureExtractorMap: featureExtractorMap, classifierMap: classifierMap };\r\n}\r\n//# sourceMappingURL=util.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { NetInput, NeuralNetwork } from 'tfjs-image-recognition-base';\r\nimport { fullyConnectedLayer } from '../common/fullyConnectedLayer';\r\nimport { extractParams } from './extractParams';\r\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\r\nimport { seperateWeightMaps } from './util';\r\nvar FaceProcessor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FaceProcessor, _super);\r\n    function FaceProcessor(_name, faceFeatureExtractor) {\r\n        var _this = _super.call(this, _name) || this;\r\n        _this._faceFeatureExtractor = faceFeatureExtractor;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(FaceProcessor.prototype, \"faceFeatureExtractor\", {\r\n        get: function () {\r\n            return this._faceFeatureExtractor;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FaceProcessor.prototype.runNet = function (input) {\r\n        var _this = this;\r\n        var params = this.params;\r\n        if (!params) {\r\n            throw new Error(this._name + \" - load model before inference\");\r\n        }\r\n        return tf.tidy(function () {\r\n            var bottleneckFeatures = input instanceof NetInput\r\n                ? _this.faceFeatureExtractor.forwardInput(input)\r\n                : input;\r\n            return fullyConnectedLayer(bottleneckFeatures.as2D(bottleneckFeatures.shape[0], -1), params.fc);\r\n        });\r\n    };\r\n    FaceProcessor.prototype.dispose = function (throwOnRedispose) {\r\n        if (throwOnRedispose === void 0) { throwOnRedispose = true; }\r\n        this.faceFeatureExtractor.dispose(throwOnRedispose);\r\n        _super.prototype.dispose.call(this, throwOnRedispose);\r\n    };\r\n    FaceProcessor.prototype.loadClassifierParams = function (weights) {\r\n        var _a = this.extractClassifierParams(weights), params = _a.params, paramMappings = _a.paramMappings;\r\n        this._params = params;\r\n        this._paramMappings = paramMappings;\r\n    };\r\n    FaceProcessor.prototype.extractClassifierParams = function (weights) {\r\n        return extractParams(weights, this.getClassifierChannelsIn(), this.getClassifierChannelsOut());\r\n    };\r\n    FaceProcessor.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        var _a = seperateWeightMaps(weightMap), featureExtractorMap = _a.featureExtractorMap, classifierMap = _a.classifierMap;\r\n        this.faceFeatureExtractor.loadFromWeightMap(featureExtractorMap);\r\n        return extractParamsFromWeigthMap(classifierMap);\r\n    };\r\n    FaceProcessor.prototype.extractParams = function (weights) {\r\n        var cIn = this.getClassifierChannelsIn();\r\n        var cOut = this.getClassifierChannelsOut();\r\n        var classifierWeightSize = (cOut * cIn) + cOut;\r\n        var featureExtractorWeights = weights.slice(0, weights.length - classifierWeightSize);\r\n        var classifierWeights = weights.slice(weights.length - classifierWeightSize);\r\n        this.faceFeatureExtractor.extractWeights(featureExtractorWeights);\r\n        return this.extractClassifierParams(classifierWeights);\r\n    };\r\n    return FaceProcessor;\r\n}(NeuralNetwork));\r\nexport { FaceProcessor };\r\n//# sourceMappingURL=FaceProcessor.js.map","export var faceExpressionLabels = {\r\n    neutral: 0,\r\n    happy: 1,\r\n    sad: 2,\r\n    angry: 3,\r\n    fearful: 4,\r\n    disgusted: 5,\r\n    surprised: 6\r\n};\r\n//# sourceMappingURL=types.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { toNetInput } from 'tfjs-image-recognition-base';\r\nimport { FaceFeatureExtractor } from '../faceFeatureExtractor/FaceFeatureExtractor';\r\nimport { FaceProcessor } from '../faceProcessor/FaceProcessor';\r\nimport { faceExpressionLabels } from './types';\r\nvar FaceExpressionNet = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FaceExpressionNet, _super);\r\n    function FaceExpressionNet(faceFeatureExtractor) {\r\n        if (faceFeatureExtractor === void 0) { faceFeatureExtractor = new FaceFeatureExtractor(); }\r\n        return _super.call(this, 'FaceExpressionNet', faceFeatureExtractor) || this;\r\n    }\r\n    FaceExpressionNet.getFaceExpressionLabel = function (faceExpression) {\r\n        var label = faceExpressionLabels[faceExpression];\r\n        if (typeof label !== 'number') {\r\n            throw new Error(\"getFaceExpressionLabel - no label for faceExpression: \" + faceExpression);\r\n        }\r\n        return label;\r\n    };\r\n    FaceExpressionNet.decodeProbabilites = function (probabilities) {\r\n        if (probabilities.length !== 7) {\r\n            throw new Error(\"decodeProbabilites - expected probabilities.length to be 7, have: \" + probabilities.length);\r\n        }\r\n        return Object.keys(faceExpressionLabels)\r\n            .map(function (expression) { return ({ expression: expression, probability: probabilities[faceExpressionLabels[expression]] }); });\r\n    };\r\n    FaceExpressionNet.prototype.forwardInput = function (input) {\r\n        var _this = this;\r\n        return tf.tidy(function () { return tf.softmax(_this.runNet(input)); });\r\n    };\r\n    FaceExpressionNet.prototype.forward = function (input) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FaceExpressionNet.prototype.predictExpressions = function (input) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var netInput, out, probabilitesByBatch, predictionsByBatch;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, toNetInput(input)];\r\n                    case 1:\r\n                        netInput = _a.sent();\r\n                        return [4 /*yield*/, this.forwardInput(netInput)];\r\n                    case 2:\r\n                        out = _a.sent();\r\n                        return [4 /*yield*/, Promise.all(tf.unstack(out).map(function (t) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n                                var data;\r\n                                return tslib_1.__generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, t.data()];\r\n                                        case 1:\r\n                                            data = _a.sent();\r\n                                            t.dispose();\r\n                                            return [2 /*return*/, data];\r\n                                    }\r\n                                });\r\n                            }); }))];\r\n                    case 3:\r\n                        probabilitesByBatch = _a.sent();\r\n                        out.dispose();\r\n                        predictionsByBatch = probabilitesByBatch\r\n                            .map(function (propablities) { return FaceExpressionNet.decodeProbabilites(propablities); });\r\n                        return [2 /*return*/, netInput.isBatchInput\r\n                                ? predictionsByBatch\r\n                                : predictionsByBatch[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FaceExpressionNet.prototype.getDefaultModelName = function () {\r\n        return 'face_expression_model';\r\n    };\r\n    FaceExpressionNet.prototype.getClassifierChannelsIn = function () {\r\n        return 256;\r\n    };\r\n    FaceExpressionNet.prototype.getClassifierChannelsOut = function () {\r\n        return 7;\r\n    };\r\n    return FaceExpressionNet;\r\n}(FaceProcessor));\r\nexport { FaceExpressionNet };\r\n//# sourceMappingURL=FaceExpressionNet.js.map","export * from './FaceExpressionNet';\r\nexport * from './types';\r\n//# sourceMappingURL=index.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { isEven, Point, toNetInput } from 'tfjs-image-recognition-base';\r\nimport { FaceLandmarks68 } from '../classes/FaceLandmarks68';\r\nimport { FaceProcessor } from '../faceProcessor/FaceProcessor';\r\nvar FaceLandmark68NetBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FaceLandmark68NetBase, _super);\r\n    function FaceLandmark68NetBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FaceLandmark68NetBase.prototype.postProcess = function (output, inputSize, originalDimensions) {\r\n        var inputDimensions = originalDimensions.map(function (_a) {\r\n            var width = _a.width, height = _a.height;\r\n            var scale = inputSize / Math.max(height, width);\r\n            return {\r\n                width: width * scale,\r\n                height: height * scale\r\n            };\r\n        });\r\n        var batchSize = inputDimensions.length;\r\n        return tf.tidy(function () {\r\n            var createInterleavedTensor = function (fillX, fillY) {\r\n                return tf.stack([\r\n                    tf.fill([68], fillX),\r\n                    tf.fill([68], fillY)\r\n                ], 1).as2D(1, 136).as1D();\r\n            };\r\n            var getPadding = function (batchIdx, cond) {\r\n                var _a = inputDimensions[batchIdx], width = _a.width, height = _a.height;\r\n                return cond(width, height) ? Math.abs(width - height) / 2 : 0;\r\n            };\r\n            var getPaddingX = function (batchIdx) { return getPadding(batchIdx, function (w, h) { return w < h; }); };\r\n            var getPaddingY = function (batchIdx) { return getPadding(batchIdx, function (w, h) { return h < w; }); };\r\n            var landmarkTensors = output\r\n                .mul(tf.fill([batchSize, 136], inputSize))\r\n                .sub(tf.stack(Array.from(Array(batchSize), function (_, batchIdx) {\r\n                return createInterleavedTensor(getPaddingX(batchIdx), getPaddingY(batchIdx));\r\n            })))\r\n                .div(tf.stack(Array.from(Array(batchSize), function (_, batchIdx) {\r\n                return createInterleavedTensor(inputDimensions[batchIdx].width, inputDimensions[batchIdx].height);\r\n            })));\r\n            return landmarkTensors;\r\n        });\r\n    };\r\n    FaceLandmark68NetBase.prototype.forwardInput = function (input) {\r\n        var _this = this;\r\n        return tf.tidy(function () {\r\n            var out = _this.runNet(input);\r\n            return _this.postProcess(out, input.inputSize, input.inputDimensions.map(function (_a) {\r\n                var height = _a[0], width = _a[1];\r\n                return ({ height: height, width: width });\r\n            }));\r\n        });\r\n    };\r\n    FaceLandmark68NetBase.prototype.forward = function (input) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FaceLandmark68NetBase.prototype.detectLandmarks = function (input) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var netInput, landmarkTensors, landmarksForBatch;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, toNetInput(input)];\r\n                    case 1:\r\n                        netInput = _a.sent();\r\n                        landmarkTensors = tf.tidy(function () { return tf.unstack(_this.forwardInput(netInput)); });\r\n                        return [4 /*yield*/, Promise.all(landmarkTensors.map(function (landmarkTensor, batchIdx) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n                                var landmarksArray, _a, _b, xCoords, yCoords;\r\n                                return tslib_1.__generator(this, function (_c) {\r\n                                    switch (_c.label) {\r\n                                        case 0:\r\n                                            _b = (_a = Array).from;\r\n                                            return [4 /*yield*/, landmarkTensor.data()];\r\n                                        case 1:\r\n                                            landmarksArray = _b.apply(_a, [_c.sent()]);\r\n                                            xCoords = landmarksArray.filter(function (_, i) { return isEven(i); });\r\n                                            yCoords = landmarksArray.filter(function (_, i) { return !isEven(i); });\r\n                                            return [2 /*return*/, new FaceLandmarks68(Array(68).fill(0).map(function (_, i) { return new Point(xCoords[i], yCoords[i]); }), {\r\n                                                    height: netInput.getInputHeight(batchIdx),\r\n                                                    width: netInput.getInputWidth(batchIdx),\r\n                                                })];\r\n                                    }\r\n                                });\r\n                            }); }))];\r\n                    case 2:\r\n                        landmarksForBatch = _a.sent();\r\n                        landmarkTensors.forEach(function (t) { return t.dispose(); });\r\n                        return [2 /*return*/, netInput.isBatchInput\r\n                                ? landmarksForBatch\r\n                                : landmarksForBatch[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FaceLandmark68NetBase.prototype.getClassifierChannelsOut = function () {\r\n        return 136;\r\n    };\r\n    return FaceLandmark68NetBase;\r\n}(FaceProcessor));\r\nexport { FaceLandmark68NetBase };\r\n//# sourceMappingURL=FaceLandmark68NetBase.js.map","import * as tslib_1 from \"tslib\";\r\nimport { FaceFeatureExtractor } from '../faceFeatureExtractor/FaceFeatureExtractor';\r\nimport { FaceLandmark68NetBase } from './FaceLandmark68NetBase';\r\nvar FaceLandmark68Net = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FaceLandmark68Net, _super);\r\n    function FaceLandmark68Net(faceFeatureExtractor) {\r\n        if (faceFeatureExtractor === void 0) { faceFeatureExtractor = new FaceFeatureExtractor(); }\r\n        return _super.call(this, 'FaceLandmark68Net', faceFeatureExtractor) || this;\r\n    }\r\n    FaceLandmark68Net.prototype.getDefaultModelName = function () {\r\n        return 'face_landmark_68_model';\r\n    };\r\n    FaceLandmark68Net.prototype.getClassifierChannelsIn = function () {\r\n        return 256;\r\n    };\r\n    return FaceLandmark68Net;\r\n}(FaceLandmark68NetBase));\r\nexport { FaceLandmark68Net };\r\n//# sourceMappingURL=FaceLandmark68Net.js.map","import { disposeUnusedWeightTensors } from 'tfjs-image-recognition-base';\r\nimport { loadParamsFactory } from './loadParamsFactory';\r\nexport function extractParamsFromWeigthMapTiny(weightMap) {\r\n    var paramMappings = [];\r\n    var extractDenseBlock3Params = loadParamsFactory(weightMap, paramMappings).extractDenseBlock3Params;\r\n    var params = {\r\n        dense0: extractDenseBlock3Params('dense0', true),\r\n        dense1: extractDenseBlock3Params('dense1'),\r\n        dense2: extractDenseBlock3Params('dense2')\r\n    };\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParamsFromWeigthMapTiny.js.map","import { extractWeightsFactory } from 'tfjs-image-recognition-base';\r\nimport { extractorsFactory } from './extractorsFactory';\r\nexport function extractParamsTiny(weights) {\r\n    var paramMappings = [];\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var extractDenseBlock3Params = extractorsFactory(extractWeights, paramMappings).extractDenseBlock3Params;\r\n    var dense0 = extractDenseBlock3Params(3, 32, 'dense0', true);\r\n    var dense1 = extractDenseBlock3Params(32, 64, 'dense1');\r\n    var dense2 = extractDenseBlock3Params(64, 128, 'dense2');\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    return {\r\n        paramMappings: paramMappings,\r\n        params: { dense0: dense0, dense1: dense1, dense2: dense2 }\r\n    };\r\n}\r\n//# sourceMappingURL=extractParamsTiny.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { NeuralNetwork, normalize, toNetInput } from 'tfjs-image-recognition-base';\r\nimport { denseBlock3 } from './denseBlock';\r\nimport { extractParamsFromWeigthMapTiny } from './extractParamsFromWeigthMapTiny';\r\nimport { extractParamsTiny } from './extractParamsTiny';\r\nvar TinyFaceFeatureExtractor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TinyFaceFeatureExtractor, _super);\r\n    function TinyFaceFeatureExtractor() {\r\n        return _super.call(this, 'TinyFaceFeatureExtractor') || this;\r\n    }\r\n    TinyFaceFeatureExtractor.prototype.forwardInput = function (input) {\r\n        var params = this.params;\r\n        if (!params) {\r\n            throw new Error('TinyFaceFeatureExtractor - load model before inference');\r\n        }\r\n        return tf.tidy(function () {\r\n            var batchTensor = input.toBatchTensor(112, true);\r\n            var meanRgb = [122.782, 117.001, 104.298];\r\n            var normalized = normalize(batchTensor, meanRgb).div(tf.scalar(255));\r\n            var out = denseBlock3(normalized, params.dense0, true);\r\n            out = denseBlock3(out, params.dense1);\r\n            out = denseBlock3(out, params.dense2);\r\n            out = tf.avgPool(out, [14, 14], [2, 2], 'valid');\r\n            return out;\r\n        });\r\n    };\r\n    TinyFaceFeatureExtractor.prototype.forward = function (input) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TinyFaceFeatureExtractor.prototype.getDefaultModelName = function () {\r\n        return 'face_feature_extractor_tiny_model';\r\n    };\r\n    TinyFaceFeatureExtractor.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return extractParamsFromWeigthMapTiny(weightMap);\r\n    };\r\n    TinyFaceFeatureExtractor.prototype.extractParams = function (weights) {\r\n        return extractParamsTiny(weights);\r\n    };\r\n    return TinyFaceFeatureExtractor;\r\n}(NeuralNetwork));\r\nexport { TinyFaceFeatureExtractor };\r\n//# sourceMappingURL=TinyFaceFeatureExtractor.js.map","import * as tslib_1 from \"tslib\";\r\nimport { TinyFaceFeatureExtractor } from '../faceFeatureExtractor/TinyFaceFeatureExtractor';\r\nimport { FaceLandmark68NetBase } from './FaceLandmark68NetBase';\r\nvar FaceLandmark68TinyNet = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FaceLandmark68TinyNet, _super);\r\n    function FaceLandmark68TinyNet(faceFeatureExtractor) {\r\n        if (faceFeatureExtractor === void 0) { faceFeatureExtractor = new TinyFaceFeatureExtractor(); }\r\n        return _super.call(this, 'FaceLandmark68TinyNet', faceFeatureExtractor) || this;\r\n    }\r\n    FaceLandmark68TinyNet.prototype.getDefaultModelName = function () {\r\n        return 'face_landmark_68_tiny_model';\r\n    };\r\n    FaceLandmark68TinyNet.prototype.getClassifierChannelsIn = function () {\r\n        return 128;\r\n    };\r\n    return FaceLandmark68TinyNet;\r\n}(FaceLandmark68NetBase));\r\nexport { FaceLandmark68TinyNet };\r\n//# sourceMappingURL=FaceLandmark68TinyNet.js.map","import * as tslib_1 from \"tslib\";\r\nimport { FaceLandmark68Net } from './FaceLandmark68Net';\r\nexport * from './FaceLandmark68Net';\r\nexport * from './FaceLandmark68TinyNet';\r\nvar FaceLandmarkNet = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FaceLandmarkNet, _super);\r\n    function FaceLandmarkNet() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FaceLandmarkNet;\r\n}(FaceLandmark68Net));\r\nexport { FaceLandmarkNet };\r\n//# sourceMappingURL=index.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function scale(x, params) {\r\n    return tf.add(tf.mul(x, params.weights), params.biases);\r\n}\r\n//# sourceMappingURL=scaleLayer.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { scale } from './scaleLayer';\r\nfunction convLayer(x, params, strides, withRelu, padding) {\r\n    if (padding === void 0) { padding = 'same'; }\r\n    var _a = params.conv, filters = _a.filters, bias = _a.bias;\r\n    var out = tf.conv2d(x, filters, strides, padding);\r\n    out = tf.add(out, bias);\r\n    out = scale(out, params.scale);\r\n    return withRelu ? tf.relu(out) : out;\r\n}\r\nexport function conv(x, params) {\r\n    return convLayer(x, params, [1, 1], true);\r\n}\r\nexport function convNoRelu(x, params) {\r\n    return convLayer(x, params, [1, 1], false);\r\n}\r\nexport function convDown(x, params) {\r\n    return convLayer(x, params, [2, 2], true, 'valid');\r\n}\r\n//# sourceMappingURL=convLayer.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { extractWeightsFactory, isFloat } from 'tfjs-image-recognition-base';\r\nfunction extractorsFactory(extractWeights, paramMappings) {\r\n    function extractFilterValues(numFilterValues, numFilters, filterSize) {\r\n        var weights = extractWeights(numFilterValues);\r\n        var depth = weights.length / (numFilters * filterSize * filterSize);\r\n        if (isFloat(depth)) {\r\n            throw new Error(\"depth has to be an integer: \" + depth + \", weights.length: \" + weights.length + \", numFilters: \" + numFilters + \", filterSize: \" + filterSize);\r\n        }\r\n        return tf.tidy(function () { return tf.transpose(tf.tensor4d(weights, [numFilters, depth, filterSize, filterSize]), [2, 3, 1, 0]); });\r\n    }\r\n    function extractConvParams(numFilterValues, numFilters, filterSize, mappedPrefix) {\r\n        var filters = extractFilterValues(numFilterValues, numFilters, filterSize);\r\n        var bias = tf.tensor1d(extractWeights(numFilters));\r\n        paramMappings.push({ paramPath: mappedPrefix + \"/filters\" }, { paramPath: mappedPrefix + \"/bias\" });\r\n        return { filters: filters, bias: bias };\r\n    }\r\n    function extractScaleLayerParams(numWeights, mappedPrefix) {\r\n        var weights = tf.tensor1d(extractWeights(numWeights));\r\n        var biases = tf.tensor1d(extractWeights(numWeights));\r\n        paramMappings.push({ paramPath: mappedPrefix + \"/weights\" }, { paramPath: mappedPrefix + \"/biases\" });\r\n        return {\r\n            weights: weights,\r\n            biases: biases\r\n        };\r\n    }\r\n    function extractConvLayerParams(numFilterValues, numFilters, filterSize, mappedPrefix) {\r\n        var conv = extractConvParams(numFilterValues, numFilters, filterSize, mappedPrefix + \"/conv\");\r\n        var scale = extractScaleLayerParams(numFilters, mappedPrefix + \"/scale\");\r\n        return { conv: conv, scale: scale };\r\n    }\r\n    function extractResidualLayerParams(numFilterValues, numFilters, filterSize, mappedPrefix, isDown) {\r\n        if (isDown === void 0) { isDown = false; }\r\n        var conv1 = extractConvLayerParams((isDown ? 0.5 : 1) * numFilterValues, numFilters, filterSize, mappedPrefix + \"/conv1\");\r\n        var conv2 = extractConvLayerParams(numFilterValues, numFilters, filterSize, mappedPrefix + \"/conv2\");\r\n        return { conv1: conv1, conv2: conv2 };\r\n    }\r\n    return {\r\n        extractConvLayerParams: extractConvLayerParams,\r\n        extractResidualLayerParams: extractResidualLayerParams\r\n    };\r\n}\r\nexport function extractParams(weights) {\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var paramMappings = [];\r\n    var _b = extractorsFactory(extractWeights, paramMappings), extractConvLayerParams = _b.extractConvLayerParams, extractResidualLayerParams = _b.extractResidualLayerParams;\r\n    var conv32_down = extractConvLayerParams(4704, 32, 7, 'conv32_down');\r\n    var conv32_1 = extractResidualLayerParams(9216, 32, 3, 'conv32_1');\r\n    var conv32_2 = extractResidualLayerParams(9216, 32, 3, 'conv32_2');\r\n    var conv32_3 = extractResidualLayerParams(9216, 32, 3, 'conv32_3');\r\n    var conv64_down = extractResidualLayerParams(36864, 64, 3, 'conv64_down', true);\r\n    var conv64_1 = extractResidualLayerParams(36864, 64, 3, 'conv64_1');\r\n    var conv64_2 = extractResidualLayerParams(36864, 64, 3, 'conv64_2');\r\n    var conv64_3 = extractResidualLayerParams(36864, 64, 3, 'conv64_3');\r\n    var conv128_down = extractResidualLayerParams(147456, 128, 3, 'conv128_down', true);\r\n    var conv128_1 = extractResidualLayerParams(147456, 128, 3, 'conv128_1');\r\n    var conv128_2 = extractResidualLayerParams(147456, 128, 3, 'conv128_2');\r\n    var conv256_down = extractResidualLayerParams(589824, 256, 3, 'conv256_down', true);\r\n    var conv256_1 = extractResidualLayerParams(589824, 256, 3, 'conv256_1');\r\n    var conv256_2 = extractResidualLayerParams(589824, 256, 3, 'conv256_2');\r\n    var conv256_down_out = extractResidualLayerParams(589824, 256, 3, 'conv256_down_out');\r\n    var fc = tf.tidy(function () { return tf.transpose(tf.tensor2d(extractWeights(256 * 128), [128, 256]), [1, 0]); });\r\n    paramMappings.push({ paramPath: \"fc\" });\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    var params = {\r\n        conv32_down: conv32_down,\r\n        conv32_1: conv32_1,\r\n        conv32_2: conv32_2,\r\n        conv32_3: conv32_3,\r\n        conv64_down: conv64_down,\r\n        conv64_1: conv64_1,\r\n        conv64_2: conv64_2,\r\n        conv64_3: conv64_3,\r\n        conv128_down: conv128_down,\r\n        conv128_1: conv128_1,\r\n        conv128_2: conv128_2,\r\n        conv256_down: conv256_down,\r\n        conv256_1: conv256_1,\r\n        conv256_2: conv256_2,\r\n        conv256_down_out: conv256_down_out,\r\n        fc: fc\r\n    };\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParams.js.map","import { disposeUnusedWeightTensors, extractWeightEntryFactory, isTensor2D, } from 'tfjs-image-recognition-base';\r\nfunction extractorsFactory(weightMap, paramMappings) {\r\n    var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\r\n    function extractScaleLayerParams(prefix) {\r\n        var weights = extractWeightEntry(prefix + \"/scale/weights\", 1);\r\n        var biases = extractWeightEntry(prefix + \"/scale/biases\", 1);\r\n        return { weights: weights, biases: biases };\r\n    }\r\n    function extractConvLayerParams(prefix) {\r\n        var filters = extractWeightEntry(prefix + \"/conv/filters\", 4);\r\n        var bias = extractWeightEntry(prefix + \"/conv/bias\", 1);\r\n        var scale = extractScaleLayerParams(prefix);\r\n        return { conv: { filters: filters, bias: bias }, scale: scale };\r\n    }\r\n    function extractResidualLayerParams(prefix) {\r\n        return {\r\n            conv1: extractConvLayerParams(prefix + \"/conv1\"),\r\n            conv2: extractConvLayerParams(prefix + \"/conv2\")\r\n        };\r\n    }\r\n    return {\r\n        extractConvLayerParams: extractConvLayerParams,\r\n        extractResidualLayerParams: extractResidualLayerParams\r\n    };\r\n}\r\nexport function extractParamsFromWeigthMap(weightMap) {\r\n    var paramMappings = [];\r\n    var _a = extractorsFactory(weightMap, paramMappings), extractConvLayerParams = _a.extractConvLayerParams, extractResidualLayerParams = _a.extractResidualLayerParams;\r\n    var conv32_down = extractConvLayerParams('conv32_down');\r\n    var conv32_1 = extractResidualLayerParams('conv32_1');\r\n    var conv32_2 = extractResidualLayerParams('conv32_2');\r\n    var conv32_3 = extractResidualLayerParams('conv32_3');\r\n    var conv64_down = extractResidualLayerParams('conv64_down');\r\n    var conv64_1 = extractResidualLayerParams('conv64_1');\r\n    var conv64_2 = extractResidualLayerParams('conv64_2');\r\n    var conv64_3 = extractResidualLayerParams('conv64_3');\r\n    var conv128_down = extractResidualLayerParams('conv128_down');\r\n    var conv128_1 = extractResidualLayerParams('conv128_1');\r\n    var conv128_2 = extractResidualLayerParams('conv128_2');\r\n    var conv256_down = extractResidualLayerParams('conv256_down');\r\n    var conv256_1 = extractResidualLayerParams('conv256_1');\r\n    var conv256_2 = extractResidualLayerParams('conv256_2');\r\n    var conv256_down_out = extractResidualLayerParams('conv256_down_out');\r\n    var fc = weightMap['fc'];\r\n    paramMappings.push({ originalPath: 'fc', paramPath: 'fc' });\r\n    if (!isTensor2D(fc)) {\r\n        throw new Error(\"expected weightMap[fc] to be a Tensor2D, instead have \" + fc);\r\n    }\r\n    var params = {\r\n        conv32_down: conv32_down,\r\n        conv32_1: conv32_1,\r\n        conv32_2: conv32_2,\r\n        conv32_3: conv32_3,\r\n        conv64_down: conv64_down,\r\n        conv64_1: conv64_1,\r\n        conv64_2: conv64_2,\r\n        conv64_3: conv64_3,\r\n        conv128_down: conv128_down,\r\n        conv128_1: conv128_1,\r\n        conv128_2: conv128_2,\r\n        conv256_down: conv256_down,\r\n        conv256_1: conv256_1,\r\n        conv256_2: conv256_2,\r\n        conv256_down_out: conv256_down_out,\r\n        fc: fc\r\n    };\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParamsFromWeigthMap.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { conv, convDown, convNoRelu } from './convLayer';\r\nexport function residual(x, params) {\r\n    var out = conv(x, params.conv1);\r\n    out = convNoRelu(out, params.conv2);\r\n    out = tf.add(out, x);\r\n    out = tf.relu(out);\r\n    return out;\r\n}\r\nexport function residualDown(x, params) {\r\n    var out = convDown(x, params.conv1);\r\n    out = convNoRelu(out, params.conv2);\r\n    var pooled = tf.avgPool(x, 2, 2, 'valid');\r\n    var zeros = tf.zeros(pooled.shape);\r\n    var isPad = pooled.shape[3] !== out.shape[3];\r\n    var isAdjustShape = pooled.shape[1] !== out.shape[1] || pooled.shape[2] !== out.shape[2];\r\n    if (isAdjustShape) {\r\n        var padShapeX = out.shape.slice();\r\n        padShapeX[1] = 1;\r\n        var zerosW = tf.zeros(padShapeX);\r\n        out = tf.concat([out, zerosW], 1);\r\n        var padShapeY = out.shape.slice();\r\n        padShapeY[2] = 1;\r\n        var zerosH = tf.zeros(padShapeY);\r\n        out = tf.concat([out, zerosH], 2);\r\n    }\r\n    pooled = isPad ? tf.concat([pooled, zeros], 3) : pooled;\r\n    out = tf.add(pooled, out);\r\n    out = tf.relu(out);\r\n    return out;\r\n}\r\n//# sourceMappingURL=residualLayer.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { NeuralNetwork, normalize, toNetInput } from 'tfjs-image-recognition-base';\r\nimport { convDown } from './convLayer';\r\nimport { extractParams } from './extractParams';\r\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\r\nimport { residual, residualDown } from './residualLayer';\r\nvar FaceRecognitionNet = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FaceRecognitionNet, _super);\r\n    function FaceRecognitionNet() {\r\n        return _super.call(this, 'FaceRecognitionNet') || this;\r\n    }\r\n    FaceRecognitionNet.prototype.forwardInput = function (input) {\r\n        var params = this.params;\r\n        if (!params) {\r\n            throw new Error('FaceRecognitionNet - load model before inference');\r\n        }\r\n        return tf.tidy(function () {\r\n            var batchTensor = input.toBatchTensor(150, true).toFloat();\r\n            var meanRgb = [122.782, 117.001, 104.298];\r\n            var normalized = normalize(batchTensor, meanRgb).div(tf.scalar(256));\r\n            var out = convDown(normalized, params.conv32_down);\r\n            out = tf.maxPool(out, 3, 2, 'valid');\r\n            out = residual(out, params.conv32_1);\r\n            out = residual(out, params.conv32_2);\r\n            out = residual(out, params.conv32_3);\r\n            out = residualDown(out, params.conv64_down);\r\n            out = residual(out, params.conv64_1);\r\n            out = residual(out, params.conv64_2);\r\n            out = residual(out, params.conv64_3);\r\n            out = residualDown(out, params.conv128_down);\r\n            out = residual(out, params.conv128_1);\r\n            out = residual(out, params.conv128_2);\r\n            out = residualDown(out, params.conv256_down);\r\n            out = residual(out, params.conv256_1);\r\n            out = residual(out, params.conv256_2);\r\n            out = residualDown(out, params.conv256_down_out);\r\n            var globalAvg = out.mean([1, 2]);\r\n            var fullyConnected = tf.matMul(globalAvg, params.fc);\r\n            return fullyConnected;\r\n        });\r\n    };\r\n    FaceRecognitionNet.prototype.forward = function (input) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FaceRecognitionNet.prototype.computeFaceDescriptor = function (input) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var netInput, faceDescriptorTensors, faceDescriptorsForBatch;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, toNetInput(input)];\r\n                    case 1:\r\n                        netInput = _a.sent();\r\n                        faceDescriptorTensors = tf.tidy(function () { return tf.unstack(_this.forwardInput(netInput)); });\r\n                        return [4 /*yield*/, Promise.all(faceDescriptorTensors.map(function (t) { return t.data(); }))];\r\n                    case 2:\r\n                        faceDescriptorsForBatch = _a.sent();\r\n                        faceDescriptorTensors.forEach(function (t) { return t.dispose(); });\r\n                        return [2 /*return*/, netInput.isBatchInput\r\n                                ? faceDescriptorsForBatch\r\n                                : faceDescriptorsForBatch[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FaceRecognitionNet.prototype.getDefaultModelName = function () {\r\n        return 'face_recognition_model';\r\n    };\r\n    FaceRecognitionNet.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return extractParamsFromWeigthMap(weightMap);\r\n    };\r\n    FaceRecognitionNet.prototype.extractParams = function (weights) {\r\n        return extractParams(weights);\r\n    };\r\n    return FaceRecognitionNet;\r\n}(NeuralNetwork));\r\nexport { FaceRecognitionNet };\r\n//# sourceMappingURL=FaceRecognitionNet.js.map","import { FaceRecognitionNet } from './FaceRecognitionNet';\r\nexport * from './FaceRecognitionNet';\r\nexport function createFaceRecognitionNet(weights) {\r\n    var net = new FaceRecognitionNet();\r\n    net.extractWeights(weights);\r\n    return net;\r\n}\r\n//# sourceMappingURL=index.js.map","export function extendWithFaceDescriptor(sourceObj, descriptor) {\r\n    var extension = { descriptor: descriptor };\r\n    return Object.assign({}, sourceObj, extension);\r\n}\r\n//# sourceMappingURL=WithFaceDescriptor.js.map","export function extendWithFaceDetection(sourceObj, detection) {\r\n    var extension = { detection: detection };\r\n    return Object.assign({}, sourceObj, extension);\r\n}\r\n//# sourceMappingURL=WithFaceDetection.js.map","export function extendWithFaceExpressions(sourceObj, expressions) {\r\n    var extension = { expressions: expressions };\r\n    return Object.assign({}, sourceObj, extension);\r\n}\r\n//# sourceMappingURL=WithFaceExpressions.js.map","import { FaceDetection } from '../classes/FaceDetection';\r\nexport function extendWithFaceLandmarks(sourceObj, unshiftedLandmarks) {\r\n    var shift = sourceObj.detection.box;\r\n    var landmarks = unshiftedLandmarks.shiftBy(shift.x, shift.y);\r\n    var rect = landmarks.align();\r\n    var imageDims = sourceObj.detection.imageDims;\r\n    var alignedRect = new FaceDetection(sourceObj.detection.score, rect.rescale(imageDims.reverse()), imageDims);\r\n    var extension = {\r\n        landmarks: landmarks,\r\n        unshiftedLandmarks: unshiftedLandmarks,\r\n        alignedRect: alignedRect\r\n    };\r\n    return Object.assign({}, sourceObj, extension);\r\n}\r\n//# sourceMappingURL=WithFaceLandmarks.js.map","export * from './WithFaceDescriptor';\r\nexport * from './WithFaceDetection';\r\nexport * from './WithFaceExpressions';\r\nexport * from './WithFaceLandmarks';\r\n//# sourceMappingURL=index.js.map","var MtcnnOptions = /** @class */ (function () {\r\n    function MtcnnOptions(_a) {\r\n        var _b = _a === void 0 ? {} : _a, minFaceSize = _b.minFaceSize, scaleFactor = _b.scaleFactor, maxNumScales = _b.maxNumScales, scoreThresholds = _b.scoreThresholds, scaleSteps = _b.scaleSteps;\r\n        this._name = 'MtcnnOptions';\r\n        this._minFaceSize = minFaceSize || 20;\r\n        this._scaleFactor = scaleFactor || 0.709;\r\n        this._maxNumScales = maxNumScales || 10;\r\n        this._scoreThresholds = scoreThresholds || [0.6, 0.7, 0.7];\r\n        this._scaleSteps = scaleSteps;\r\n        if (typeof this._minFaceSize !== 'number' || this._minFaceSize < 0) {\r\n            throw new Error(this._name + \" - expected minFaceSize to be a number > 0\");\r\n        }\r\n        if (typeof this._scaleFactor !== 'number' || this._scaleFactor <= 0 || this._scaleFactor >= 1) {\r\n            throw new Error(this._name + \" - expected scaleFactor to be a number between 0 and 1\");\r\n        }\r\n        if (typeof this._maxNumScales !== 'number' || this._maxNumScales < 0) {\r\n            throw new Error(this._name + \" - expected maxNumScales to be a number > 0\");\r\n        }\r\n        if (!Array.isArray(this._scoreThresholds)\r\n            || this._scoreThresholds.length !== 3\r\n            || this._scoreThresholds.some(function (th) { return typeof th !== 'number'; })) {\r\n            throw new Error(this._name + \" - expected scoreThresholds to be an array of numbers of length 3\");\r\n        }\r\n        if (this._scaleSteps\r\n            && (!Array.isArray(this._scaleSteps) || this._scaleSteps.some(function (th) { return typeof th !== 'number'; }))) {\r\n            throw new Error(this._name + \" - expected scaleSteps to be an array of numbers\");\r\n        }\r\n    }\r\n    Object.defineProperty(MtcnnOptions.prototype, \"minFaceSize\", {\r\n        get: function () { return this._minFaceSize; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MtcnnOptions.prototype, \"scaleFactor\", {\r\n        get: function () { return this._scaleFactor; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MtcnnOptions.prototype, \"maxNumScales\", {\r\n        get: function () { return this._maxNumScales; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MtcnnOptions.prototype, \"scoreThresholds\", {\r\n        get: function () { return this._scoreThresholds; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MtcnnOptions.prototype, \"scaleSteps\", {\r\n        get: function () { return this._scaleSteps; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return MtcnnOptions;\r\n}());\r\nexport { MtcnnOptions };\r\n//# sourceMappingURL=MtcnnOptions.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { extractWeightsFactory } from 'tfjs-image-recognition-base';\r\nfunction extractorsFactory(extractWeights, paramMappings) {\r\n    function extractDepthwiseConvParams(numChannels, mappedPrefix) {\r\n        var filters = tf.tensor4d(extractWeights(3 * 3 * numChannels), [3, 3, numChannels, 1]);\r\n        var batch_norm_scale = tf.tensor1d(extractWeights(numChannels));\r\n        var batch_norm_offset = tf.tensor1d(extractWeights(numChannels));\r\n        var batch_norm_mean = tf.tensor1d(extractWeights(numChannels));\r\n        var batch_norm_variance = tf.tensor1d(extractWeights(numChannels));\r\n        paramMappings.push({ paramPath: mappedPrefix + \"/filters\" }, { paramPath: mappedPrefix + \"/batch_norm_scale\" }, { paramPath: mappedPrefix + \"/batch_norm_offset\" }, { paramPath: mappedPrefix + \"/batch_norm_mean\" }, { paramPath: mappedPrefix + \"/batch_norm_variance\" });\r\n        return {\r\n            filters: filters,\r\n            batch_norm_scale: batch_norm_scale,\r\n            batch_norm_offset: batch_norm_offset,\r\n            batch_norm_mean: batch_norm_mean,\r\n            batch_norm_variance: batch_norm_variance\r\n        };\r\n    }\r\n    function extractConvParams(channelsIn, channelsOut, filterSize, mappedPrefix, isPointwiseConv) {\r\n        var filters = tf.tensor4d(extractWeights(channelsIn * channelsOut * filterSize * filterSize), [filterSize, filterSize, channelsIn, channelsOut]);\r\n        var bias = tf.tensor1d(extractWeights(channelsOut));\r\n        paramMappings.push({ paramPath: mappedPrefix + \"/filters\" }, { paramPath: mappedPrefix + \"/\" + (isPointwiseConv ? 'batch_norm_offset' : 'bias') });\r\n        return { filters: filters, bias: bias };\r\n    }\r\n    function extractPointwiseConvParams(channelsIn, channelsOut, filterSize, mappedPrefix) {\r\n        var _a = extractConvParams(channelsIn, channelsOut, filterSize, mappedPrefix, true), filters = _a.filters, bias = _a.bias;\r\n        return {\r\n            filters: filters,\r\n            batch_norm_offset: bias\r\n        };\r\n    }\r\n    function extractConvPairParams(channelsIn, channelsOut, mappedPrefix) {\r\n        var depthwise_conv = extractDepthwiseConvParams(channelsIn, mappedPrefix + \"/depthwise_conv\");\r\n        var pointwise_conv = extractPointwiseConvParams(channelsIn, channelsOut, 1, mappedPrefix + \"/pointwise_conv\");\r\n        return { depthwise_conv: depthwise_conv, pointwise_conv: pointwise_conv };\r\n    }\r\n    function extractMobilenetV1Params() {\r\n        var conv_0 = extractPointwiseConvParams(3, 32, 3, 'mobilenetv1/conv_0');\r\n        var conv_1 = extractConvPairParams(32, 64, 'mobilenetv1/conv_1');\r\n        var conv_2 = extractConvPairParams(64, 128, 'mobilenetv1/conv_2');\r\n        var conv_3 = extractConvPairParams(128, 128, 'mobilenetv1/conv_3');\r\n        var conv_4 = extractConvPairParams(128, 256, 'mobilenetv1/conv_4');\r\n        var conv_5 = extractConvPairParams(256, 256, 'mobilenetv1/conv_5');\r\n        var conv_6 = extractConvPairParams(256, 512, 'mobilenetv1/conv_6');\r\n        var conv_7 = extractConvPairParams(512, 512, 'mobilenetv1/conv_7');\r\n        var conv_8 = extractConvPairParams(512, 512, 'mobilenetv1/conv_8');\r\n        var conv_9 = extractConvPairParams(512, 512, 'mobilenetv1/conv_9');\r\n        var conv_10 = extractConvPairParams(512, 512, 'mobilenetv1/conv_10');\r\n        var conv_11 = extractConvPairParams(512, 512, 'mobilenetv1/conv_11');\r\n        var conv_12 = extractConvPairParams(512, 1024, 'mobilenetv1/conv_12');\r\n        var conv_13 = extractConvPairParams(1024, 1024, 'mobilenetv1/conv_13');\r\n        return {\r\n            conv_0: conv_0,\r\n            conv_1: conv_1,\r\n            conv_2: conv_2,\r\n            conv_3: conv_3,\r\n            conv_4: conv_4,\r\n            conv_5: conv_5,\r\n            conv_6: conv_6,\r\n            conv_7: conv_7,\r\n            conv_8: conv_8,\r\n            conv_9: conv_9,\r\n            conv_10: conv_10,\r\n            conv_11: conv_11,\r\n            conv_12: conv_12,\r\n            conv_13: conv_13\r\n        };\r\n    }\r\n    function extractPredictionLayerParams() {\r\n        var conv_0 = extractPointwiseConvParams(1024, 256, 1, 'prediction_layer/conv_0');\r\n        var conv_1 = extractPointwiseConvParams(256, 512, 3, 'prediction_layer/conv_1');\r\n        var conv_2 = extractPointwiseConvParams(512, 128, 1, 'prediction_layer/conv_2');\r\n        var conv_3 = extractPointwiseConvParams(128, 256, 3, 'prediction_layer/conv_3');\r\n        var conv_4 = extractPointwiseConvParams(256, 128, 1, 'prediction_layer/conv_4');\r\n        var conv_5 = extractPointwiseConvParams(128, 256, 3, 'prediction_layer/conv_5');\r\n        var conv_6 = extractPointwiseConvParams(256, 64, 1, 'prediction_layer/conv_6');\r\n        var conv_7 = extractPointwiseConvParams(64, 128, 3, 'prediction_layer/conv_7');\r\n        var box_encoding_0_predictor = extractConvParams(512, 12, 1, 'prediction_layer/box_predictor_0/box_encoding_predictor');\r\n        var class_predictor_0 = extractConvParams(512, 9, 1, 'prediction_layer/box_predictor_0/class_predictor');\r\n        var box_encoding_1_predictor = extractConvParams(1024, 24, 1, 'prediction_layer/box_predictor_1/box_encoding_predictor');\r\n        var class_predictor_1 = extractConvParams(1024, 18, 1, 'prediction_layer/box_predictor_1/class_predictor');\r\n        var box_encoding_2_predictor = extractConvParams(512, 24, 1, 'prediction_layer/box_predictor_2/box_encoding_predictor');\r\n        var class_predictor_2 = extractConvParams(512, 18, 1, 'prediction_layer/box_predictor_2/class_predictor');\r\n        var box_encoding_3_predictor = extractConvParams(256, 24, 1, 'prediction_layer/box_predictor_3/box_encoding_predictor');\r\n        var class_predictor_3 = extractConvParams(256, 18, 1, 'prediction_layer/box_predictor_3/class_predictor');\r\n        var box_encoding_4_predictor = extractConvParams(256, 24, 1, 'prediction_layer/box_predictor_4/box_encoding_predictor');\r\n        var class_predictor_4 = extractConvParams(256, 18, 1, 'prediction_layer/box_predictor_4/class_predictor');\r\n        var box_encoding_5_predictor = extractConvParams(128, 24, 1, 'prediction_layer/box_predictor_5/box_encoding_predictor');\r\n        var class_predictor_5 = extractConvParams(128, 18, 1, 'prediction_layer/box_predictor_5/class_predictor');\r\n        var box_predictor_0 = {\r\n            box_encoding_predictor: box_encoding_0_predictor,\r\n            class_predictor: class_predictor_0\r\n        };\r\n        var box_predictor_1 = {\r\n            box_encoding_predictor: box_encoding_1_predictor,\r\n            class_predictor: class_predictor_1\r\n        };\r\n        var box_predictor_2 = {\r\n            box_encoding_predictor: box_encoding_2_predictor,\r\n            class_predictor: class_predictor_2\r\n        };\r\n        var box_predictor_3 = {\r\n            box_encoding_predictor: box_encoding_3_predictor,\r\n            class_predictor: class_predictor_3\r\n        };\r\n        var box_predictor_4 = {\r\n            box_encoding_predictor: box_encoding_4_predictor,\r\n            class_predictor: class_predictor_4\r\n        };\r\n        var box_predictor_5 = {\r\n            box_encoding_predictor: box_encoding_5_predictor,\r\n            class_predictor: class_predictor_5\r\n        };\r\n        return {\r\n            conv_0: conv_0,\r\n            conv_1: conv_1,\r\n            conv_2: conv_2,\r\n            conv_3: conv_3,\r\n            conv_4: conv_4,\r\n            conv_5: conv_5,\r\n            conv_6: conv_6,\r\n            conv_7: conv_7,\r\n            box_predictor_0: box_predictor_0,\r\n            box_predictor_1: box_predictor_1,\r\n            box_predictor_2: box_predictor_2,\r\n            box_predictor_3: box_predictor_3,\r\n            box_predictor_4: box_predictor_4,\r\n            box_predictor_5: box_predictor_5\r\n        };\r\n    }\r\n    return {\r\n        extractMobilenetV1Params: extractMobilenetV1Params,\r\n        extractPredictionLayerParams: extractPredictionLayerParams\r\n    };\r\n}\r\nexport function extractParams(weights) {\r\n    var paramMappings = [];\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var _b = extractorsFactory(extractWeights, paramMappings), extractMobilenetV1Params = _b.extractMobilenetV1Params, extractPredictionLayerParams = _b.extractPredictionLayerParams;\r\n    var mobilenetv1 = extractMobilenetV1Params();\r\n    var prediction_layer = extractPredictionLayerParams();\r\n    var extra_dim = tf.tensor3d(extractWeights(5118 * 4), [1, 5118, 4]);\r\n    var output_layer = {\r\n        extra_dim: extra_dim\r\n    };\r\n    paramMappings.push({ paramPath: 'output_layer/extra_dim' });\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    return {\r\n        params: {\r\n            mobilenetv1: mobilenetv1,\r\n            prediction_layer: prediction_layer,\r\n            output_layer: output_layer\r\n        },\r\n        paramMappings: paramMappings\r\n    };\r\n}\r\n//# sourceMappingURL=extractParams.js.map","import { disposeUnusedWeightTensors, extractWeightEntryFactory, isTensor3D, } from 'tfjs-image-recognition-base';\r\nfunction extractorsFactory(weightMap, paramMappings) {\r\n    var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\r\n    function extractPointwiseConvParams(prefix, idx, mappedPrefix) {\r\n        var filters = extractWeightEntry(prefix + \"/Conv2d_\" + idx + \"_pointwise/weights\", 4, mappedPrefix + \"/filters\");\r\n        var batch_norm_offset = extractWeightEntry(prefix + \"/Conv2d_\" + idx + \"_pointwise/convolution_bn_offset\", 1, mappedPrefix + \"/batch_norm_offset\");\r\n        return { filters: filters, batch_norm_offset: batch_norm_offset };\r\n    }\r\n    function extractConvPairParams(idx) {\r\n        var mappedPrefix = \"mobilenetv1/conv_\" + idx;\r\n        var prefixDepthwiseConv = \"MobilenetV1/Conv2d_\" + idx + \"_depthwise\";\r\n        var mappedPrefixDepthwiseConv = mappedPrefix + \"/depthwise_conv\";\r\n        var mappedPrefixPointwiseConv = mappedPrefix + \"/pointwise_conv\";\r\n        var filters = extractWeightEntry(prefixDepthwiseConv + \"/depthwise_weights\", 4, mappedPrefixDepthwiseConv + \"/filters\");\r\n        var batch_norm_scale = extractWeightEntry(prefixDepthwiseConv + \"/BatchNorm/gamma\", 1, mappedPrefixDepthwiseConv + \"/batch_norm_scale\");\r\n        var batch_norm_offset = extractWeightEntry(prefixDepthwiseConv + \"/BatchNorm/beta\", 1, mappedPrefixDepthwiseConv + \"/batch_norm_offset\");\r\n        var batch_norm_mean = extractWeightEntry(prefixDepthwiseConv + \"/BatchNorm/moving_mean\", 1, mappedPrefixDepthwiseConv + \"/batch_norm_mean\");\r\n        var batch_norm_variance = extractWeightEntry(prefixDepthwiseConv + \"/BatchNorm/moving_variance\", 1, mappedPrefixDepthwiseConv + \"/batch_norm_variance\");\r\n        return {\r\n            depthwise_conv: {\r\n                filters: filters,\r\n                batch_norm_scale: batch_norm_scale,\r\n                batch_norm_offset: batch_norm_offset,\r\n                batch_norm_mean: batch_norm_mean,\r\n                batch_norm_variance: batch_norm_variance\r\n            },\r\n            pointwise_conv: extractPointwiseConvParams('MobilenetV1', idx, mappedPrefixPointwiseConv)\r\n        };\r\n    }\r\n    function extractMobilenetV1Params() {\r\n        return {\r\n            conv_0: extractPointwiseConvParams('MobilenetV1', 0, 'mobilenetv1/conv_0'),\r\n            conv_1: extractConvPairParams(1),\r\n            conv_2: extractConvPairParams(2),\r\n            conv_3: extractConvPairParams(3),\r\n            conv_4: extractConvPairParams(4),\r\n            conv_5: extractConvPairParams(5),\r\n            conv_6: extractConvPairParams(6),\r\n            conv_7: extractConvPairParams(7),\r\n            conv_8: extractConvPairParams(8),\r\n            conv_9: extractConvPairParams(9),\r\n            conv_10: extractConvPairParams(10),\r\n            conv_11: extractConvPairParams(11),\r\n            conv_12: extractConvPairParams(12),\r\n            conv_13: extractConvPairParams(13)\r\n        };\r\n    }\r\n    function extractConvParams(prefix, mappedPrefix) {\r\n        var filters = extractWeightEntry(prefix + \"/weights\", 4, mappedPrefix + \"/filters\");\r\n        var bias = extractWeightEntry(prefix + \"/biases\", 1, mappedPrefix + \"/bias\");\r\n        return { filters: filters, bias: bias };\r\n    }\r\n    function extractBoxPredictorParams(idx) {\r\n        var box_encoding_predictor = extractConvParams(\"Prediction/BoxPredictor_\" + idx + \"/BoxEncodingPredictor\", \"prediction_layer/box_predictor_\" + idx + \"/box_encoding_predictor\");\r\n        var class_predictor = extractConvParams(\"Prediction/BoxPredictor_\" + idx + \"/ClassPredictor\", \"prediction_layer/box_predictor_\" + idx + \"/class_predictor\");\r\n        return { box_encoding_predictor: box_encoding_predictor, class_predictor: class_predictor };\r\n    }\r\n    function extractPredictionLayerParams() {\r\n        return {\r\n            conv_0: extractPointwiseConvParams('Prediction', 0, 'prediction_layer/conv_0'),\r\n            conv_1: extractPointwiseConvParams('Prediction', 1, 'prediction_layer/conv_1'),\r\n            conv_2: extractPointwiseConvParams('Prediction', 2, 'prediction_layer/conv_2'),\r\n            conv_3: extractPointwiseConvParams('Prediction', 3, 'prediction_layer/conv_3'),\r\n            conv_4: extractPointwiseConvParams('Prediction', 4, 'prediction_layer/conv_4'),\r\n            conv_5: extractPointwiseConvParams('Prediction', 5, 'prediction_layer/conv_5'),\r\n            conv_6: extractPointwiseConvParams('Prediction', 6, 'prediction_layer/conv_6'),\r\n            conv_7: extractPointwiseConvParams('Prediction', 7, 'prediction_layer/conv_7'),\r\n            box_predictor_0: extractBoxPredictorParams(0),\r\n            box_predictor_1: extractBoxPredictorParams(1),\r\n            box_predictor_2: extractBoxPredictorParams(2),\r\n            box_predictor_3: extractBoxPredictorParams(3),\r\n            box_predictor_4: extractBoxPredictorParams(4),\r\n            box_predictor_5: extractBoxPredictorParams(5)\r\n        };\r\n    }\r\n    return {\r\n        extractMobilenetV1Params: extractMobilenetV1Params,\r\n        extractPredictionLayerParams: extractPredictionLayerParams\r\n    };\r\n}\r\nexport function extractParamsFromWeigthMap(weightMap) {\r\n    var paramMappings = [];\r\n    var _a = extractorsFactory(weightMap, paramMappings), extractMobilenetV1Params = _a.extractMobilenetV1Params, extractPredictionLayerParams = _a.extractPredictionLayerParams;\r\n    var extra_dim = weightMap['Output/extra_dim'];\r\n    paramMappings.push({ originalPath: 'Output/extra_dim', paramPath: 'output_layer/extra_dim' });\r\n    if (!isTensor3D(extra_dim)) {\r\n        throw new Error(\"expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have \" + extra_dim);\r\n    }\r\n    var params = {\r\n        mobilenetv1: extractMobilenetV1Params(),\r\n        prediction_layer: extractPredictionLayerParams(),\r\n        output_layer: {\r\n            extra_dim: extra_dim\r\n        }\r\n    };\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParamsFromWeigthMap.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function pointwiseConvLayer(x, params, strides) {\r\n    return tf.tidy(function () {\r\n        var out = tf.conv2d(x, params.filters, strides, 'same');\r\n        out = tf.add(out, params.batch_norm_offset);\r\n        return tf.clipByValue(out, 0, 6);\r\n    });\r\n}\r\n//# sourceMappingURL=pointwiseConvLayer.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { pointwiseConvLayer } from './pointwiseConvLayer';\r\nvar epsilon = 0.0010000000474974513;\r\nfunction depthwiseConvLayer(x, params, strides) {\r\n    return tf.tidy(function () {\r\n        var out = tf.depthwiseConv2d(x, params.filters, strides, 'same');\r\n        out = tf.batchNormalization(out, params.batch_norm_mean, params.batch_norm_variance, epsilon, params.batch_norm_scale, params.batch_norm_offset);\r\n        return tf.clipByValue(out, 0, 6);\r\n    });\r\n}\r\nfunction getStridesForLayerIdx(layerIdx) {\r\n    return [2, 4, 6, 12].some(function (idx) { return idx === layerIdx; }) ? [2, 2] : [1, 1];\r\n}\r\nexport function mobileNetV1(x, params) {\r\n    return tf.tidy(function () {\r\n        var conv11 = null;\r\n        var out = pointwiseConvLayer(x, params.conv_0, [2, 2]);\r\n        var convPairParams = [\r\n            params.conv_1,\r\n            params.conv_2,\r\n            params.conv_3,\r\n            params.conv_4,\r\n            params.conv_5,\r\n            params.conv_6,\r\n            params.conv_7,\r\n            params.conv_8,\r\n            params.conv_9,\r\n            params.conv_10,\r\n            params.conv_11,\r\n            params.conv_12,\r\n            params.conv_13\r\n        ];\r\n        convPairParams.forEach(function (param, i) {\r\n            var layerIdx = i + 1;\r\n            var depthwiseConvStrides = getStridesForLayerIdx(layerIdx);\r\n            out = depthwiseConvLayer(out, param.depthwise_conv, depthwiseConvStrides);\r\n            out = pointwiseConvLayer(out, param.pointwise_conv, [1, 1]);\r\n            if (layerIdx === 11) {\r\n                conv11 = out;\r\n            }\r\n        });\r\n        if (conv11 === null) {\r\n            throw new Error('mobileNetV1 - output of conv layer 11 is null');\r\n        }\r\n        return {\r\n            out: out,\r\n            conv11: conv11\r\n        };\r\n    });\r\n}\r\n//# sourceMappingURL=mobileNetV1.js.map","export function nonMaxSuppression(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold) {\r\n    var numBoxes = boxes.shape[0];\r\n    var outputSize = Math.min(maxOutputSize, numBoxes);\r\n    var candidates = scores\r\n        .map(function (score, boxIndex) { return ({ score: score, boxIndex: boxIndex }); })\r\n        .filter(function (c) { return c.score > scoreThreshold; })\r\n        .sort(function (c1, c2) { return c2.score - c1.score; });\r\n    var suppressFunc = function (x) { return x <= iouThreshold ? 1 : 0; };\r\n    var selected = [];\r\n    candidates.forEach(function (c) {\r\n        if (selected.length >= outputSize) {\r\n            return;\r\n        }\r\n        var originalScore = c.score;\r\n        for (var j = selected.length - 1; j >= 0; --j) {\r\n            var iou = IOU(boxes, c.boxIndex, selected[j]);\r\n            if (iou === 0.0) {\r\n                continue;\r\n            }\r\n            c.score *= suppressFunc(iou);\r\n            if (c.score <= scoreThreshold) {\r\n                break;\r\n            }\r\n        }\r\n        if (originalScore === c.score) {\r\n            selected.push(c.boxIndex);\r\n        }\r\n    });\r\n    return selected;\r\n}\r\nfunction IOU(boxes, i, j) {\r\n    var yminI = Math.min(boxes.get(i, 0), boxes.get(i, 2));\r\n    var xminI = Math.min(boxes.get(i, 1), boxes.get(i, 3));\r\n    var ymaxI = Math.max(boxes.get(i, 0), boxes.get(i, 2));\r\n    var xmaxI = Math.max(boxes.get(i, 1), boxes.get(i, 3));\r\n    var yminJ = Math.min(boxes.get(j, 0), boxes.get(j, 2));\r\n    var xminJ = Math.min(boxes.get(j, 1), boxes.get(j, 3));\r\n    var ymaxJ = Math.max(boxes.get(j, 0), boxes.get(j, 2));\r\n    var xmaxJ = Math.max(boxes.get(j, 1), boxes.get(j, 3));\r\n    var areaI = (ymaxI - yminI) * (xmaxI - xminI);\r\n    var areaJ = (ymaxJ - yminJ) * (xmaxJ - xminJ);\r\n    if (areaI <= 0 || areaJ <= 0) {\r\n        return 0.0;\r\n    }\r\n    var intersectionYmin = Math.max(yminI, yminJ);\r\n    var intersectionXmin = Math.max(xminI, xminJ);\r\n    var intersectionYmax = Math.min(ymaxI, ymaxJ);\r\n    var intersectionXmax = Math.min(xmaxI, xmaxJ);\r\n    var intersectionArea = Math.max(intersectionYmax - intersectionYmin, 0.0) *\r\n        Math.max(intersectionXmax - intersectionXmin, 0.0);\r\n    return intersectionArea / (areaI + areaJ - intersectionArea);\r\n}\r\n//# sourceMappingURL=nonMaxSuppression.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nfunction getCenterCoordinatesAndSizesLayer(x) {\r\n    var vec = tf.unstack(tf.transpose(x, [1, 0]));\r\n    var sizes = [\r\n        tf.sub(vec[2], vec[0]),\r\n        tf.sub(vec[3], vec[1])\r\n    ];\r\n    var centers = [\r\n        tf.add(vec[0], tf.div(sizes[0], tf.scalar(2))),\r\n        tf.add(vec[1], tf.div(sizes[1], tf.scalar(2)))\r\n    ];\r\n    return {\r\n        sizes: sizes,\r\n        centers: centers\r\n    };\r\n}\r\nfunction decodeBoxesLayer(x0, x1) {\r\n    var _a = getCenterCoordinatesAndSizesLayer(x0), sizes = _a.sizes, centers = _a.centers;\r\n    var vec = tf.unstack(tf.transpose(x1, [1, 0]));\r\n    var div0_out = tf.div(tf.mul(tf.exp(tf.div(vec[2], tf.scalar(5))), sizes[0]), tf.scalar(2));\r\n    var add0_out = tf.add(tf.mul(tf.div(vec[0], tf.scalar(10)), sizes[0]), centers[0]);\r\n    var div1_out = tf.div(tf.mul(tf.exp(tf.div(vec[3], tf.scalar(5))), sizes[1]), tf.scalar(2));\r\n    var add1_out = tf.add(tf.mul(tf.div(vec[1], tf.scalar(10)), sizes[1]), centers[1]);\r\n    return tf.transpose(tf.stack([\r\n        tf.sub(add0_out, div0_out),\r\n        tf.sub(add1_out, div1_out),\r\n        tf.add(add0_out, div0_out),\r\n        tf.add(add1_out, div1_out)\r\n    ]), [1, 0]);\r\n}\r\nexport function outputLayer(boxPredictions, classPredictions, params) {\r\n    return tf.tidy(function () {\r\n        var batchSize = boxPredictions.shape[0];\r\n        var boxes = decodeBoxesLayer(tf.reshape(tf.tile(params.extra_dim, [batchSize, 1, 1]), [-1, 4]), tf.reshape(boxPredictions, [-1, 4]));\r\n        boxes = tf.reshape(boxes, [batchSize, (boxes.shape[0] / batchSize), 4]);\r\n        var scoresAndClasses = tf.sigmoid(tf.slice(classPredictions, [0, 0, 1], [-1, -1, -1]));\r\n        var scores = tf.slice(scoresAndClasses, [0, 0, 0], [-1, -1, 1]);\r\n        scores = tf.reshape(scores, [batchSize, scores.shape[1]]);\r\n        var boxesByBatch = tf.unstack(boxes);\r\n        var scoresByBatch = tf.unstack(scores);\r\n        return {\r\n            boxes: boxesByBatch,\r\n            scores: scoresByBatch\r\n        };\r\n    });\r\n}\r\n//# sourceMappingURL=outputLayer.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { convLayer } from 'tfjs-tiny-yolov2';\r\nexport function boxPredictionLayer(x, params) {\r\n    return tf.tidy(function () {\r\n        var batchSize = x.shape[0];\r\n        var boxPredictionEncoding = tf.reshape(convLayer(x, params.box_encoding_predictor), [batchSize, -1, 1, 4]);\r\n        var classPrediction = tf.reshape(convLayer(x, params.class_predictor), [batchSize, -1, 3]);\r\n        return {\r\n            boxPredictionEncoding: boxPredictionEncoding,\r\n            classPrediction: classPrediction\r\n        };\r\n    });\r\n}\r\n//# sourceMappingURL=boxPredictionLayer.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { boxPredictionLayer } from './boxPredictionLayer';\r\nimport { pointwiseConvLayer } from './pointwiseConvLayer';\r\nexport function predictionLayer(x, conv11, params) {\r\n    return tf.tidy(function () {\r\n        var conv0 = pointwiseConvLayer(x, params.conv_0, [1, 1]);\r\n        var conv1 = pointwiseConvLayer(conv0, params.conv_1, [2, 2]);\r\n        var conv2 = pointwiseConvLayer(conv1, params.conv_2, [1, 1]);\r\n        var conv3 = pointwiseConvLayer(conv2, params.conv_3, [2, 2]);\r\n        var conv4 = pointwiseConvLayer(conv3, params.conv_4, [1, 1]);\r\n        var conv5 = pointwiseConvLayer(conv4, params.conv_5, [2, 2]);\r\n        var conv6 = pointwiseConvLayer(conv5, params.conv_6, [1, 1]);\r\n        var conv7 = pointwiseConvLayer(conv6, params.conv_7, [2, 2]);\r\n        var boxPrediction0 = boxPredictionLayer(conv11, params.box_predictor_0);\r\n        var boxPrediction1 = boxPredictionLayer(x, params.box_predictor_1);\r\n        var boxPrediction2 = boxPredictionLayer(conv1, params.box_predictor_2);\r\n        var boxPrediction3 = boxPredictionLayer(conv3, params.box_predictor_3);\r\n        var boxPrediction4 = boxPredictionLayer(conv5, params.box_predictor_4);\r\n        var boxPrediction5 = boxPredictionLayer(conv7, params.box_predictor_5);\r\n        var boxPredictions = tf.concat([\r\n            boxPrediction0.boxPredictionEncoding,\r\n            boxPrediction1.boxPredictionEncoding,\r\n            boxPrediction2.boxPredictionEncoding,\r\n            boxPrediction3.boxPredictionEncoding,\r\n            boxPrediction4.boxPredictionEncoding,\r\n            boxPrediction5.boxPredictionEncoding\r\n        ], 1);\r\n        var classPredictions = tf.concat([\r\n            boxPrediction0.classPrediction,\r\n            boxPrediction1.classPrediction,\r\n            boxPrediction2.classPrediction,\r\n            boxPrediction3.classPrediction,\r\n            boxPrediction4.classPrediction,\r\n            boxPrediction5.classPrediction\r\n        ], 1);\r\n        return {\r\n            boxPredictions: boxPredictions,\r\n            classPredictions: classPredictions\r\n        };\r\n    });\r\n}\r\n//# sourceMappingURL=predictionLayer.js.map","var SsdMobilenetv1Options = /** @class */ (function () {\r\n    function SsdMobilenetv1Options(_a) {\r\n        var _b = _a === void 0 ? {} : _a, minConfidence = _b.minConfidence, maxResults = _b.maxResults;\r\n        this._name = 'SsdMobilenetv1Options';\r\n        this._minConfidence = minConfidence || 0.5;\r\n        this._maxResults = maxResults || 100;\r\n        if (typeof this._minConfidence !== 'number' || this._minConfidence <= 0 || this._minConfidence >= 1) {\r\n            throw new Error(this._name + \" - expected minConfidence to be a number between 0 and 1\");\r\n        }\r\n        if (typeof this._maxResults !== 'number') {\r\n            throw new Error(this._name + \" - expected maxResults to be a number\");\r\n        }\r\n    }\r\n    Object.defineProperty(SsdMobilenetv1Options.prototype, \"minConfidence\", {\r\n        get: function () { return this._minConfidence; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SsdMobilenetv1Options.prototype, \"maxResults\", {\r\n        get: function () { return this._maxResults; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SsdMobilenetv1Options;\r\n}());\r\nexport { SsdMobilenetv1Options };\r\n//# sourceMappingURL=SsdMobilenetv1Options.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { NeuralNetwork, Rect, toNetInput } from 'tfjs-image-recognition-base';\r\nimport { FaceDetection } from '../classes/FaceDetection';\r\nimport { extractParams } from './extractParams';\r\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\r\nimport { mobileNetV1 } from './mobileNetV1';\r\nimport { nonMaxSuppression } from './nonMaxSuppression';\r\nimport { outputLayer } from './outputLayer';\r\nimport { predictionLayer } from './predictionLayer';\r\nimport { SsdMobilenetv1Options } from './SsdMobilenetv1Options';\r\nvar SsdMobilenetv1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SsdMobilenetv1, _super);\r\n    function SsdMobilenetv1() {\r\n        return _super.call(this, 'SsdMobilenetv1') || this;\r\n    }\r\n    SsdMobilenetv1.prototype.forwardInput = function (input) {\r\n        var params = this.params;\r\n        if (!params) {\r\n            throw new Error('SsdMobilenetv1 - load model before inference');\r\n        }\r\n        return tf.tidy(function () {\r\n            var batchTensor = input.toBatchTensor(512, false).toFloat();\r\n            var x = tf.sub(tf.mul(batchTensor, tf.scalar(0.007843137718737125)), tf.scalar(1));\r\n            var features = mobileNetV1(x, params.mobilenetv1);\r\n            var _a = predictionLayer(features.out, features.conv11, params.prediction_layer), boxPredictions = _a.boxPredictions, classPredictions = _a.classPredictions;\r\n            return outputLayer(boxPredictions, classPredictions, params.output_layer);\r\n        });\r\n    };\r\n    SsdMobilenetv1.prototype.forward = function (input) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SsdMobilenetv1.prototype.locateFaces = function (input, options) {\r\n        if (options === void 0) { options = {}; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a, maxResults, minConfidence, netInput, _b, _boxes, _scores, boxes, scores, i, scoresData, _c, _d, iouThreshold, indices, reshapedDims, inputSize, padX, padY, results;\r\n            return tslib_1.__generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        _a = new SsdMobilenetv1Options(options), maxResults = _a.maxResults, minConfidence = _a.minConfidence;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1:\r\n                        netInput = _e.sent();\r\n                        _b = this.forwardInput(netInput), _boxes = _b.boxes, _scores = _b.scores;\r\n                        boxes = _boxes[0];\r\n                        scores = _scores[0];\r\n                        for (i = 1; i < _boxes.length; i++) {\r\n                            _boxes[i].dispose();\r\n                            _scores[i].dispose();\r\n                        }\r\n                        _d = (_c = Array).from;\r\n                        return [4 /*yield*/, scores.data()];\r\n                    case 2:\r\n                        scoresData = _d.apply(_c, [_e.sent()]);\r\n                        iouThreshold = 0.5;\r\n                        indices = nonMaxSuppression(boxes, scoresData, maxResults, iouThreshold, minConfidence);\r\n                        reshapedDims = netInput.getReshapedInputDimensions(0);\r\n                        inputSize = netInput.inputSize;\r\n                        padX = inputSize / reshapedDims.width;\r\n                        padY = inputSize / reshapedDims.height;\r\n                        results = indices\r\n                            .map(function (idx) {\r\n                            var _a = [\r\n                                Math.max(0, boxes.get(idx, 0)),\r\n                                Math.min(1.0, boxes.get(idx, 2))\r\n                            ].map(function (val) { return val * padY; }), top = _a[0], bottom = _a[1];\r\n                            var _b = [\r\n                                Math.max(0, boxes.get(idx, 1)),\r\n                                Math.min(1.0, boxes.get(idx, 3))\r\n                            ].map(function (val) { return val * padX; }), left = _b[0], right = _b[1];\r\n                            return new FaceDetection(scoresData[idx], new Rect(left, top, right - left, bottom - top), {\r\n                                height: netInput.getInputHeight(0),\r\n                                width: netInput.getInputWidth(0)\r\n                            });\r\n                        });\r\n                        boxes.dispose();\r\n                        scores.dispose();\r\n                        return [2 /*return*/, results];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SsdMobilenetv1.prototype.getDefaultModelName = function () {\r\n        return 'ssd_mobilenetv1_model';\r\n    };\r\n    SsdMobilenetv1.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return extractParamsFromWeigthMap(weightMap);\r\n    };\r\n    SsdMobilenetv1.prototype.extractParams = function (weights) {\r\n        return extractParams(weights);\r\n    };\r\n    return SsdMobilenetv1;\r\n}(NeuralNetwork));\r\nexport { SsdMobilenetv1 };\r\n//# sourceMappingURL=SsdMobilenetv1.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SsdMobilenetv1 } from './SsdMobilenetv1';\r\nexport * from './SsdMobilenetv1';\r\nexport * from './SsdMobilenetv1Options';\r\nexport function createSsdMobilenetv1(weights) {\r\n    var net = new SsdMobilenetv1();\r\n    net.extractWeights(weights);\r\n    return net;\r\n}\r\nexport function createFaceDetectionNet(weights) {\r\n    return createSsdMobilenetv1(weights);\r\n}\r\n// alias for backward compatibily\r\nvar FaceDetectionNet = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FaceDetectionNet, _super);\r\n    function FaceDetectionNet() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FaceDetectionNet;\r\n}(SsdMobilenetv1));\r\nexport { FaceDetectionNet };\r\n//# sourceMappingURL=index.js.map","import * as tslib_1 from \"tslib\";\r\nimport { TinyYolov2Options } from 'tfjs-tiny-yolov2';\r\nvar TinyFaceDetectorOptions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TinyFaceDetectorOptions, _super);\r\n    function TinyFaceDetectorOptions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._name = 'TinyFaceDetectorOptions';\r\n        return _this;\r\n    }\r\n    return TinyFaceDetectorOptions;\r\n}(TinyYolov2Options));\r\nexport { TinyFaceDetectorOptions };\r\n//# sourceMappingURL=TinyFaceDetectorOptions.js.map","import * as tslib_1 from \"tslib\";\r\nvar ComposableTask = /** @class */ (function () {\r\n    function ComposableTask() {\r\n    }\r\n    ComposableTask.prototype.then = function (onfulfilled) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = onfulfilled;\r\n                        return [4 /*yield*/, this.run()];\r\n                    case 1: return [2 /*return*/, _a.apply(void 0, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ComposableTask.prototype.run = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                throw new Error('ComposableTask - run is not implemented');\r\n            });\r\n        });\r\n    };\r\n    return ComposableTask;\r\n}());\r\nexport { ComposableTask };\r\n//# sourceMappingURL=ComposableTask.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function bgrToRgbTensor(tensor) {\r\n    return tf.tidy(function () { return tf.stack(tf.unstack(tensor, 3).reverse(), 3); });\r\n}\r\n//# sourceMappingURL=bgrToRgbTensor.js.map","export var CELL_STRIDE = 2;\r\nexport var CELL_SIZE = 12;\r\n//# sourceMappingURL=config.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { extractWeightsFactory } from 'tfjs-image-recognition-base';\r\nimport { extractConvParamsFactory, extractFCParamsFactory } from 'tfjs-tiny-yolov2';\r\nfunction extractorsFactory(extractWeights, paramMappings) {\r\n    var extractConvParams = extractConvParamsFactory(extractWeights, paramMappings);\r\n    var extractFCParams = extractFCParamsFactory(extractWeights, paramMappings);\r\n    function extractPReluParams(size, paramPath) {\r\n        var alpha = tf.tensor1d(extractWeights(size));\r\n        paramMappings.push({ paramPath: paramPath });\r\n        return alpha;\r\n    }\r\n    function extractSharedParams(numFilters, mappedPrefix, isRnet) {\r\n        if (isRnet === void 0) { isRnet = false; }\r\n        var conv1 = extractConvParams(numFilters[0], numFilters[1], 3, mappedPrefix + \"/conv1\");\r\n        var prelu1_alpha = extractPReluParams(numFilters[1], mappedPrefix + \"/prelu1_alpha\");\r\n        var conv2 = extractConvParams(numFilters[1], numFilters[2], 3, mappedPrefix + \"/conv2\");\r\n        var prelu2_alpha = extractPReluParams(numFilters[2], mappedPrefix + \"/prelu2_alpha\");\r\n        var conv3 = extractConvParams(numFilters[2], numFilters[3], isRnet ? 2 : 3, mappedPrefix + \"/conv3\");\r\n        var prelu3_alpha = extractPReluParams(numFilters[3], mappedPrefix + \"/prelu3_alpha\");\r\n        return { conv1: conv1, prelu1_alpha: prelu1_alpha, conv2: conv2, prelu2_alpha: prelu2_alpha, conv3: conv3, prelu3_alpha: prelu3_alpha };\r\n    }\r\n    function extractPNetParams() {\r\n        var sharedParams = extractSharedParams([3, 10, 16, 32], 'pnet');\r\n        var conv4_1 = extractConvParams(32, 2, 1, 'pnet/conv4_1');\r\n        var conv4_2 = extractConvParams(32, 4, 1, 'pnet/conv4_2');\r\n        return tslib_1.__assign({}, sharedParams, { conv4_1: conv4_1, conv4_2: conv4_2 });\r\n    }\r\n    function extractRNetParams() {\r\n        var sharedParams = extractSharedParams([3, 28, 48, 64], 'rnet', true);\r\n        var fc1 = extractFCParams(576, 128, 'rnet/fc1');\r\n        var prelu4_alpha = extractPReluParams(128, 'rnet/prelu4_alpha');\r\n        var fc2_1 = extractFCParams(128, 2, 'rnet/fc2_1');\r\n        var fc2_2 = extractFCParams(128, 4, 'rnet/fc2_2');\r\n        return tslib_1.__assign({}, sharedParams, { fc1: fc1, prelu4_alpha: prelu4_alpha, fc2_1: fc2_1, fc2_2: fc2_2 });\r\n    }\r\n    function extractONetParams() {\r\n        var sharedParams = extractSharedParams([3, 32, 64, 64], 'onet');\r\n        var conv4 = extractConvParams(64, 128, 2, 'onet/conv4');\r\n        var prelu4_alpha = extractPReluParams(128, 'onet/prelu4_alpha');\r\n        var fc1 = extractFCParams(1152, 256, 'onet/fc1');\r\n        var prelu5_alpha = extractPReluParams(256, 'onet/prelu5_alpha');\r\n        var fc2_1 = extractFCParams(256, 2, 'onet/fc2_1');\r\n        var fc2_2 = extractFCParams(256, 4, 'onet/fc2_2');\r\n        var fc2_3 = extractFCParams(256, 10, 'onet/fc2_3');\r\n        return tslib_1.__assign({}, sharedParams, { conv4: conv4, prelu4_alpha: prelu4_alpha, fc1: fc1, prelu5_alpha: prelu5_alpha, fc2_1: fc2_1, fc2_2: fc2_2, fc2_3: fc2_3 });\r\n    }\r\n    return {\r\n        extractPNetParams: extractPNetParams,\r\n        extractRNetParams: extractRNetParams,\r\n        extractONetParams: extractONetParams\r\n    };\r\n}\r\nexport function extractParams(weights) {\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var paramMappings = [];\r\n    var _b = extractorsFactory(extractWeights, paramMappings), extractPNetParams = _b.extractPNetParams, extractRNetParams = _b.extractRNetParams, extractONetParams = _b.extractONetParams;\r\n    var pnet = extractPNetParams();\r\n    var rnet = extractRNetParams();\r\n    var onet = extractONetParams();\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    return { params: { pnet: pnet, rnet: rnet, onet: onet }, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParams.js.map","import * as tslib_1 from \"tslib\";\r\nimport { disposeUnusedWeightTensors, extractWeightEntryFactory } from 'tfjs-image-recognition-base';\r\nfunction extractorsFactory(weightMap, paramMappings) {\r\n    var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\r\n    function extractConvParams(prefix) {\r\n        var filters = extractWeightEntry(prefix + \"/weights\", 4, prefix + \"/filters\");\r\n        var bias = extractWeightEntry(prefix + \"/bias\", 1);\r\n        return { filters: filters, bias: bias };\r\n    }\r\n    function extractFCParams(prefix) {\r\n        var weights = extractWeightEntry(prefix + \"/weights\", 2);\r\n        var bias = extractWeightEntry(prefix + \"/bias\", 1);\r\n        return { weights: weights, bias: bias };\r\n    }\r\n    function extractPReluParams(paramPath) {\r\n        return extractWeightEntry(paramPath, 1);\r\n    }\r\n    function extractSharedParams(prefix) {\r\n        var conv1 = extractConvParams(prefix + \"/conv1\");\r\n        var prelu1_alpha = extractPReluParams(prefix + \"/prelu1_alpha\");\r\n        var conv2 = extractConvParams(prefix + \"/conv2\");\r\n        var prelu2_alpha = extractPReluParams(prefix + \"/prelu2_alpha\");\r\n        var conv3 = extractConvParams(prefix + \"/conv3\");\r\n        var prelu3_alpha = extractPReluParams(prefix + \"/prelu3_alpha\");\r\n        return { conv1: conv1, prelu1_alpha: prelu1_alpha, conv2: conv2, prelu2_alpha: prelu2_alpha, conv3: conv3, prelu3_alpha: prelu3_alpha };\r\n    }\r\n    function extractPNetParams() {\r\n        var sharedParams = extractSharedParams('pnet');\r\n        var conv4_1 = extractConvParams('pnet/conv4_1');\r\n        var conv4_2 = extractConvParams('pnet/conv4_2');\r\n        return tslib_1.__assign({}, sharedParams, { conv4_1: conv4_1, conv4_2: conv4_2 });\r\n    }\r\n    function extractRNetParams() {\r\n        var sharedParams = extractSharedParams('rnet');\r\n        var fc1 = extractFCParams('rnet/fc1');\r\n        var prelu4_alpha = extractPReluParams('rnet/prelu4_alpha');\r\n        var fc2_1 = extractFCParams('rnet/fc2_1');\r\n        var fc2_2 = extractFCParams('rnet/fc2_2');\r\n        return tslib_1.__assign({}, sharedParams, { fc1: fc1, prelu4_alpha: prelu4_alpha, fc2_1: fc2_1, fc2_2: fc2_2 });\r\n    }\r\n    function extractONetParams() {\r\n        var sharedParams = extractSharedParams('onet');\r\n        var conv4 = extractConvParams('onet/conv4');\r\n        var prelu4_alpha = extractPReluParams('onet/prelu4_alpha');\r\n        var fc1 = extractFCParams('onet/fc1');\r\n        var prelu5_alpha = extractPReluParams('onet/prelu5_alpha');\r\n        var fc2_1 = extractFCParams('onet/fc2_1');\r\n        var fc2_2 = extractFCParams('onet/fc2_2');\r\n        var fc2_3 = extractFCParams('onet/fc2_3');\r\n        return tslib_1.__assign({}, sharedParams, { conv4: conv4, prelu4_alpha: prelu4_alpha, fc1: fc1, prelu5_alpha: prelu5_alpha, fc2_1: fc2_1, fc2_2: fc2_2, fc2_3: fc2_3 });\r\n    }\r\n    return {\r\n        extractPNetParams: extractPNetParams,\r\n        extractRNetParams: extractRNetParams,\r\n        extractONetParams: extractONetParams\r\n    };\r\n}\r\nexport function extractParamsFromWeigthMap(weightMap) {\r\n    var paramMappings = [];\r\n    var _a = extractorsFactory(weightMap, paramMappings), extractPNetParams = _a.extractPNetParams, extractRNetParams = _a.extractRNetParams, extractONetParams = _a.extractONetParams;\r\n    var pnet = extractPNetParams();\r\n    var rnet = extractRNetParams();\r\n    var onet = extractONetParams();\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: { pnet: pnet, rnet: rnet, onet: onet }, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParamsFromWeigthMap.js.map","export function getSizesForScale(scale, _a) {\r\n    var height = _a[0], width = _a[1];\r\n    return {\r\n        height: Math.floor(height * scale),\r\n        width: Math.floor(width * scale)\r\n    };\r\n}\r\n//# sourceMappingURL=getSizesForScale.js.map","import { CELL_SIZE } from './config';\r\nexport function pyramidDown(minFaceSize, scaleFactor, dims) {\r\n    var height = dims[0], width = dims[1];\r\n    var m = CELL_SIZE / minFaceSize;\r\n    var scales = [];\r\n    var minLayer = Math.min(height, width) * m;\r\n    var exp = 0;\r\n    while (minLayer >= 12) {\r\n        scales.push(m * Math.pow(scaleFactor, exp));\r\n        minLayer = minLayer * scaleFactor;\r\n        exp += 1;\r\n    }\r\n    return scales;\r\n}\r\n//# sourceMappingURL=pyramidDown.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Box } from 'tfjs-image-recognition-base';\r\nvar MtcnnBox = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MtcnnBox, _super);\r\n    function MtcnnBox(left, top, right, bottom) {\r\n        return _super.call(this, { left: left, top: top, right: right, bottom: bottom }, true) || this;\r\n    }\r\n    return MtcnnBox;\r\n}(Box));\r\nexport { MtcnnBox };\r\n//# sourceMappingURL=MtcnnBox.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function normalize(x) {\r\n    return tf.tidy(function () { return tf.mul(tf.sub(x, tf.scalar(127.5)), tf.scalar(0.0078125)); });\r\n}\r\n//# sourceMappingURL=normalize.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function prelu(x, alpha) {\r\n    return tf.tidy(function () {\r\n        return tf.add(tf.relu(x), tf.mul(alpha, tf.neg(tf.relu(tf.neg(x)))));\r\n    });\r\n}\r\n//# sourceMappingURL=prelu.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { convLayer } from 'tfjs-tiny-yolov2';\r\nimport { prelu } from './prelu';\r\nexport function sharedLayer(x, params, isPnet) {\r\n    if (isPnet === void 0) { isPnet = false; }\r\n    return tf.tidy(function () {\r\n        var out = convLayer(x, params.conv1, 'valid');\r\n        out = prelu(out, params.prelu1_alpha);\r\n        out = tf.maxPool(out, isPnet ? [2, 2] : [3, 3], [2, 2], 'same');\r\n        out = convLayer(out, params.conv2, 'valid');\r\n        out = prelu(out, params.prelu2_alpha);\r\n        out = isPnet ? out : tf.maxPool(out, [3, 3], [2, 2], 'valid');\r\n        out = convLayer(out, params.conv3, 'valid');\r\n        out = prelu(out, params.prelu3_alpha);\r\n        return out;\r\n    });\r\n}\r\n//# sourceMappingURL=sharedLayers.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { convLayer } from 'tfjs-tiny-yolov2';\r\nimport { sharedLayer } from './sharedLayers';\r\nexport function PNet(x, params) {\r\n    return tf.tidy(function () {\r\n        var out = sharedLayer(x, params, true);\r\n        var conv = convLayer(out, params.conv4_1, 'valid');\r\n        var max = tf.expandDims(tf.max(conv, 3), 3);\r\n        var prob = tf.softmax(tf.sub(conv, max), 3);\r\n        var regions = convLayer(out, params.conv4_2, 'valid');\r\n        return { prob: prob, regions: regions };\r\n    });\r\n}\r\n//# sourceMappingURL=PNet.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { BoundingBox, nonMaxSuppression, Point } from 'tfjs-image-recognition-base';\r\nimport { CELL_SIZE, CELL_STRIDE } from './config';\r\nimport { getSizesForScale } from './getSizesForScale';\r\nimport { MtcnnBox } from './MtcnnBox';\r\nimport { normalize } from './normalize';\r\nimport { PNet } from './PNet';\r\nfunction rescaleAndNormalize(x, scale) {\r\n    return tf.tidy(function () {\r\n        var _a = getSizesForScale(scale, x.shape.slice(1)), height = _a.height, width = _a.width;\r\n        var resized = tf.image.resizeBilinear(x, [height, width]);\r\n        var normalized = normalize(resized);\r\n        return tf.transpose(normalized, [0, 2, 1, 3]);\r\n    });\r\n}\r\nfunction extractBoundingBoxes(scoresTensor, regionsTensor, scale, scoreThreshold) {\r\n    // TODO: fix this!, maybe better to use tf.gather here\r\n    var indices = [];\r\n    for (var y = 0; y < scoresTensor.shape[0]; y++) {\r\n        for (var x = 0; x < scoresTensor.shape[1]; x++) {\r\n            if (scoresTensor.get(y, x) >= scoreThreshold) {\r\n                indices.push(new Point(x, y));\r\n            }\r\n        }\r\n    }\r\n    var boundingBoxes = indices.map(function (idx) {\r\n        var cell = new BoundingBox(Math.round((idx.y * CELL_STRIDE + 1) / scale), Math.round((idx.x * CELL_STRIDE + 1) / scale), Math.round((idx.y * CELL_STRIDE + CELL_SIZE) / scale), Math.round((idx.x * CELL_STRIDE + CELL_SIZE) / scale));\r\n        var score = scoresTensor.get(idx.y, idx.x);\r\n        var region = new MtcnnBox(regionsTensor.get(idx.y, idx.x, 0), regionsTensor.get(idx.y, idx.x, 1), regionsTensor.get(idx.y, idx.x, 2), regionsTensor.get(idx.y, idx.x, 3));\r\n        return {\r\n            cell: cell,\r\n            score: score,\r\n            region: region\r\n        };\r\n    });\r\n    return boundingBoxes;\r\n}\r\nexport function stage1(imgTensor, scales, scoreThreshold, params, stats) {\r\n    stats.stage1 = [];\r\n    var pnetOutputs = scales.map(function (scale) { return tf.tidy(function () {\r\n        var statsForScale = { scale: scale };\r\n        var resized = rescaleAndNormalize(imgTensor, scale);\r\n        var ts = Date.now();\r\n        var _a = PNet(resized, params), prob = _a.prob, regions = _a.regions;\r\n        statsForScale.pnet = Date.now() - ts;\r\n        var scoresTensor = tf.unstack(tf.unstack(prob, 3)[1])[0];\r\n        var regionsTensor = tf.unstack(regions)[0];\r\n        return {\r\n            scoresTensor: scoresTensor,\r\n            regionsTensor: regionsTensor,\r\n            scale: scale,\r\n            statsForScale: statsForScale\r\n        };\r\n    }); });\r\n    var boxesForScale = pnetOutputs.map(function (_a) {\r\n        var scoresTensor = _a.scoresTensor, regionsTensor = _a.regionsTensor, scale = _a.scale, statsForScale = _a.statsForScale;\r\n        var boundingBoxes = extractBoundingBoxes(scoresTensor, regionsTensor, scale, scoreThreshold);\r\n        scoresTensor.dispose();\r\n        regionsTensor.dispose();\r\n        if (!boundingBoxes.length) {\r\n            stats.stage1.push(statsForScale);\r\n            return [];\r\n        }\r\n        var ts = Date.now();\r\n        var indices = nonMaxSuppression(boundingBoxes.map(function (bbox) { return bbox.cell; }), boundingBoxes.map(function (bbox) { return bbox.score; }), 0.5);\r\n        statsForScale.nms = Date.now() - ts;\r\n        statsForScale.numBoxes = indices.length;\r\n        stats.stage1.push(statsForScale);\r\n        return indices.map(function (boxIdx) { return boundingBoxes[boxIdx]; });\r\n    });\r\n    var allBoxes = boxesForScale.reduce(function (all, boxes) { return all.concat(boxes); }, []);\r\n    var finalBoxes = [];\r\n    var finalScores = [];\r\n    if (allBoxes.length > 0) {\r\n        var ts = Date.now();\r\n        var indices = nonMaxSuppression(allBoxes.map(function (bbox) { return bbox.cell; }), allBoxes.map(function (bbox) { return bbox.score; }), 0.7);\r\n        stats.stage1_nms = Date.now() - ts;\r\n        finalScores = indices.map(function (idx) { return allBoxes[idx].score; });\r\n        finalBoxes = indices\r\n            .map(function (idx) { return allBoxes[idx]; })\r\n            .map(function (_a) {\r\n            var cell = _a.cell, region = _a.region;\r\n            return new BoundingBox(cell.left + (region.left * cell.width), cell.top + (region.top * cell.height), cell.right + (region.right * cell.width), cell.bottom + (region.bottom * cell.height)).toSquare().round();\r\n        });\r\n    }\r\n    return {\r\n        boxes: finalBoxes,\r\n        scores: finalScores\r\n    };\r\n}\r\n//# sourceMappingURL=stage1.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { createCanvas, createCanvasFromMedia, env, getContext2dOrThrow, } from 'tfjs-image-recognition-base';\r\nimport { normalize } from './normalize';\r\nexport function extractImagePatches(img, boxes, _a) {\r\n    var width = _a.width, height = _a.height;\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var _this = this;\r\n        var imgCtx, bitmaps, imagePatchesDatas;\r\n        return tslib_1.__generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    imgCtx = getContext2dOrThrow(img);\r\n                    return [4 /*yield*/, Promise.all(boxes.map(function (box) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n                            var _a, y, ey, x, ex, fromX, fromY, imgData;\r\n                            return tslib_1.__generator(this, function (_b) {\r\n                                _a = box.padAtBorders(img.height, img.width), y = _a.y, ey = _a.ey, x = _a.x, ex = _a.ex;\r\n                                fromX = x - 1;\r\n                                fromY = y - 1;\r\n                                imgData = imgCtx.getImageData(fromX, fromY, (ex - fromX), (ey - fromY));\r\n                                return [2 /*return*/, env.isNodejs() ? createCanvasFromMedia(imgData) : createImageBitmap(imgData)];\r\n                            });\r\n                        }); }))];\r\n                case 1:\r\n                    bitmaps = _b.sent();\r\n                    imagePatchesDatas = [];\r\n                    bitmaps.forEach(function (bmp) {\r\n                        var patch = createCanvas({ width: width, height: height });\r\n                        var patchCtx = getContext2dOrThrow(patch);\r\n                        patchCtx.drawImage(bmp, 0, 0, width, height);\r\n                        var data = patchCtx.getImageData(0, 0, width, height).data;\r\n                        var currData = [];\r\n                        // RGBA -> BGR\r\n                        for (var i = 0; i < data.length; i += 4) {\r\n                            currData.push(data[i + 2]);\r\n                            currData.push(data[i + 1]);\r\n                            currData.push(data[i]);\r\n                        }\r\n                        imagePatchesDatas.push(currData);\r\n                    });\r\n                    return [2 /*return*/, imagePatchesDatas.map(function (data) {\r\n                            var t = tf.tidy(function () {\r\n                                var imagePatchTensor = tf.transpose(tf.tensor4d(data, [1, width, height, 3]), [0, 2, 1, 3]).toFloat();\r\n                                return normalize(imagePatchTensor);\r\n                            });\r\n                            return t;\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=extractImagePatches.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { fullyConnectedLayer } from '../common/fullyConnectedLayer';\r\nimport { prelu } from './prelu';\r\nimport { sharedLayer } from './sharedLayers';\r\nexport function RNet(x, params) {\r\n    return tf.tidy(function () {\r\n        var convOut = sharedLayer(x, params);\r\n        var vectorized = tf.reshape(convOut, [convOut.shape[0], params.fc1.weights.shape[0]]);\r\n        var fc1 = fullyConnectedLayer(vectorized, params.fc1);\r\n        var prelu4 = prelu(fc1, params.prelu4_alpha);\r\n        var fc2_1 = fullyConnectedLayer(prelu4, params.fc2_1);\r\n        var max = tf.expandDims(tf.max(fc2_1, 1), 1);\r\n        var prob = tf.softmax(tf.sub(fc2_1, max), 1);\r\n        var regions = fullyConnectedLayer(prelu4, params.fc2_2);\r\n        var scores = tf.unstack(prob, 1)[1];\r\n        return { scores: scores, regions: regions };\r\n    });\r\n}\r\n//# sourceMappingURL=RNet.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { nonMaxSuppression } from 'tfjs-image-recognition-base';\r\nimport { extractImagePatches } from './extractImagePatches';\r\nimport { MtcnnBox } from './MtcnnBox';\r\nimport { RNet } from './RNet';\r\nexport function stage2(img, inputBoxes, scoreThreshold, params, stats) {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var ts, rnetInputs, rnetOuts, scoresTensor, scores, _a, _b, indices, filteredBoxes, filteredScores, finalBoxes, finalScores, indicesNms, regions_1;\r\n        return tslib_1.__generator(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    ts = Date.now();\r\n                    return [4 /*yield*/, extractImagePatches(img, inputBoxes, { width: 24, height: 24 })];\r\n                case 1:\r\n                    rnetInputs = _c.sent();\r\n                    stats.stage2_extractImagePatches = Date.now() - ts;\r\n                    ts = Date.now();\r\n                    rnetOuts = rnetInputs.map(function (rnetInput) {\r\n                        var out = RNet(rnetInput, params);\r\n                        rnetInput.dispose();\r\n                        return out;\r\n                    });\r\n                    stats.stage2_rnet = Date.now() - ts;\r\n                    scoresTensor = rnetOuts.length > 1\r\n                        ? tf.concat(rnetOuts.map(function (out) { return out.scores; }))\r\n                        : rnetOuts[0].scores;\r\n                    _b = (_a = Array).from;\r\n                    return [4 /*yield*/, scoresTensor.data()];\r\n                case 2:\r\n                    scores = _b.apply(_a, [_c.sent()]);\r\n                    scoresTensor.dispose();\r\n                    indices = scores\r\n                        .map(function (score, idx) { return ({ score: score, idx: idx }); })\r\n                        .filter(function (c) { return c.score > scoreThreshold; })\r\n                        .map(function (_a) {\r\n                        var idx = _a.idx;\r\n                        return idx;\r\n                    });\r\n                    filteredBoxes = indices.map(function (idx) { return inputBoxes[idx]; });\r\n                    filteredScores = indices.map(function (idx) { return scores[idx]; });\r\n                    finalBoxes = [];\r\n                    finalScores = [];\r\n                    if (filteredBoxes.length > 0) {\r\n                        ts = Date.now();\r\n                        indicesNms = nonMaxSuppression(filteredBoxes, filteredScores, 0.7);\r\n                        stats.stage2_nms = Date.now() - ts;\r\n                        regions_1 = indicesNms.map(function (idx) {\r\n                            return new MtcnnBox(rnetOuts[indices[idx]].regions.get(0, 0), rnetOuts[indices[idx]].regions.get(0, 1), rnetOuts[indices[idx]].regions.get(0, 2), rnetOuts[indices[idx]].regions.get(0, 3));\r\n                        });\r\n                        finalScores = indicesNms.map(function (idx) { return filteredScores[idx]; });\r\n                        finalBoxes = indicesNms.map(function (idx, i) { return filteredBoxes[idx].calibrate(regions_1[i]); });\r\n                    }\r\n                    rnetOuts.forEach(function (t) {\r\n                        t.regions.dispose();\r\n                        t.scores.dispose();\r\n                    });\r\n                    return [2 /*return*/, {\r\n                            boxes: finalBoxes,\r\n                            scores: finalScores\r\n                        }];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=stage2.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { convLayer } from 'tfjs-tiny-yolov2';\r\nimport { fullyConnectedLayer } from '../common/fullyConnectedLayer';\r\nimport { prelu } from './prelu';\r\nimport { sharedLayer } from './sharedLayers';\r\nexport function ONet(x, params) {\r\n    return tf.tidy(function () {\r\n        var out = sharedLayer(x, params);\r\n        out = tf.maxPool(out, [2, 2], [2, 2], 'same');\r\n        out = convLayer(out, params.conv4, 'valid');\r\n        out = prelu(out, params.prelu4_alpha);\r\n        var vectorized = tf.reshape(out, [out.shape[0], params.fc1.weights.shape[0]]);\r\n        var fc1 = fullyConnectedLayer(vectorized, params.fc1);\r\n        var prelu5 = prelu(fc1, params.prelu5_alpha);\r\n        var fc2_1 = fullyConnectedLayer(prelu5, params.fc2_1);\r\n        var max = tf.expandDims(tf.max(fc2_1, 1), 1);\r\n        var prob = tf.softmax(tf.sub(fc2_1, max), 1);\r\n        var regions = fullyConnectedLayer(prelu5, params.fc2_2);\r\n        var points = fullyConnectedLayer(prelu5, params.fc2_3);\r\n        var scores = tf.unstack(prob, 1)[1];\r\n        return { scores: scores, regions: regions, points: points };\r\n    });\r\n}\r\n//# sourceMappingURL=ONet.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { nonMaxSuppression, Point } from 'tfjs-image-recognition-base';\r\nimport { extractImagePatches } from './extractImagePatches';\r\nimport { MtcnnBox } from './MtcnnBox';\r\nimport { ONet } from './ONet';\r\nexport function stage3(img, inputBoxes, scoreThreshold, params, stats) {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        var ts, onetInputs, onetOuts, scoresTensor, scores, _a, _b, indices, filteredRegions, filteredBoxes, filteredScores, finalBoxes, finalScores, points, indicesNms;\r\n        return tslib_1.__generator(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    ts = Date.now();\r\n                    return [4 /*yield*/, extractImagePatches(img, inputBoxes, { width: 48, height: 48 })];\r\n                case 1:\r\n                    onetInputs = _c.sent();\r\n                    stats.stage3_extractImagePatches = Date.now() - ts;\r\n                    ts = Date.now();\r\n                    onetOuts = onetInputs.map(function (onetInput) {\r\n                        var out = ONet(onetInput, params);\r\n                        onetInput.dispose();\r\n                        return out;\r\n                    });\r\n                    stats.stage3_onet = Date.now() - ts;\r\n                    scoresTensor = onetOuts.length > 1\r\n                        ? tf.concat(onetOuts.map(function (out) { return out.scores; }))\r\n                        : onetOuts[0].scores;\r\n                    _b = (_a = Array).from;\r\n                    return [4 /*yield*/, scoresTensor.data()];\r\n                case 2:\r\n                    scores = _b.apply(_a, [_c.sent()]);\r\n                    scoresTensor.dispose();\r\n                    indices = scores\r\n                        .map(function (score, idx) { return ({ score: score, idx: idx }); })\r\n                        .filter(function (c) { return c.score > scoreThreshold; })\r\n                        .map(function (_a) {\r\n                        var idx = _a.idx;\r\n                        return idx;\r\n                    });\r\n                    filteredRegions = indices.map(function (idx) { return new MtcnnBox(onetOuts[idx].regions.get(0, 0), onetOuts[idx].regions.get(0, 1), onetOuts[idx].regions.get(0, 2), onetOuts[idx].regions.get(0, 3)); });\r\n                    filteredBoxes = indices\r\n                        .map(function (idx, i) { return inputBoxes[idx].calibrate(filteredRegions[i]); });\r\n                    filteredScores = indices.map(function (idx) { return scores[idx]; });\r\n                    finalBoxes = [];\r\n                    finalScores = [];\r\n                    points = [];\r\n                    if (filteredBoxes.length > 0) {\r\n                        ts = Date.now();\r\n                        indicesNms = nonMaxSuppression(filteredBoxes, filteredScores, 0.7, false);\r\n                        stats.stage3_nms = Date.now() - ts;\r\n                        finalBoxes = indicesNms.map(function (idx) { return filteredBoxes[idx]; });\r\n                        finalScores = indicesNms.map(function (idx) { return filteredScores[idx]; });\r\n                        points = indicesNms.map(function (idx, i) {\r\n                            return Array(5).fill(0).map(function (_, ptIdx) {\r\n                                return new Point(((onetOuts[idx].points.get(0, ptIdx) * (finalBoxes[i].width + 1)) + finalBoxes[i].left), ((onetOuts[idx].points.get(0, ptIdx + 5) * (finalBoxes[i].height + 1)) + finalBoxes[i].top));\r\n                            });\r\n                        });\r\n                    }\r\n                    onetOuts.forEach(function (t) {\r\n                        t.regions.dispose();\r\n                        t.scores.dispose();\r\n                        t.points.dispose();\r\n                    });\r\n                    return [2 /*return*/, {\r\n                            boxes: finalBoxes,\r\n                            scores: finalScores,\r\n                            points: points\r\n                        }];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=stage3.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { NeuralNetwork, Point, Rect, toNetInput } from 'tfjs-image-recognition-base';\r\nimport { FaceDetection } from '../classes/FaceDetection';\r\nimport { FaceLandmarks5 } from '../classes/FaceLandmarks5';\r\nimport { extendWithFaceDetection, extendWithFaceLandmarks } from '../factories';\r\nimport { bgrToRgbTensor } from './bgrToRgbTensor';\r\nimport { CELL_SIZE } from './config';\r\nimport { extractParams } from './extractParams';\r\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\r\nimport { getSizesForScale } from './getSizesForScale';\r\nimport { MtcnnOptions } from './MtcnnOptions';\r\nimport { pyramidDown } from './pyramidDown';\r\nimport { stage1 } from './stage1';\r\nimport { stage2 } from './stage2';\r\nimport { stage3 } from './stage3';\r\nvar Mtcnn = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Mtcnn, _super);\r\n    function Mtcnn() {\r\n        return _super.call(this, 'Mtcnn') || this;\r\n    }\r\n    Mtcnn.prototype.forwardInput = function (input, forwardParams) {\r\n        if (forwardParams === void 0) { forwardParams = {}; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var params, inputCanvas, stats, tsTotal, imgTensor, onReturn, _a, height, width, _b, minFaceSize, scaleFactor, maxNumScales, scoreThresholds, scaleSteps, scales, ts, out1, out2, out3, results;\r\n            return tslib_1.__generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        params = this.params;\r\n                        if (!params) {\r\n                            throw new Error('Mtcnn - load model before inference');\r\n                        }\r\n                        inputCanvas = input.canvases[0];\r\n                        if (!inputCanvas) {\r\n                            throw new Error('Mtcnn - inputCanvas is not defined, note that passing tensors into Mtcnn.forwardInput is not supported yet.');\r\n                        }\r\n                        stats = {};\r\n                        tsTotal = Date.now();\r\n                        imgTensor = tf.tidy(function () {\r\n                            return bgrToRgbTensor(tf.expandDims(tf.fromPixels(inputCanvas)).toFloat());\r\n                        });\r\n                        onReturn = function (results) {\r\n                            // dispose tensors on return\r\n                            imgTensor.dispose();\r\n                            stats.total = Date.now() - tsTotal;\r\n                            return results;\r\n                        };\r\n                        _a = imgTensor.shape.slice(1), height = _a[0], width = _a[1];\r\n                        _b = new MtcnnOptions(forwardParams), minFaceSize = _b.minFaceSize, scaleFactor = _b.scaleFactor, maxNumScales = _b.maxNumScales, scoreThresholds = _b.scoreThresholds, scaleSteps = _b.scaleSteps;\r\n                        scales = (scaleSteps || pyramidDown(minFaceSize, scaleFactor, [height, width]))\r\n                            .filter(function (scale) {\r\n                            var sizes = getSizesForScale(scale, [height, width]);\r\n                            return Math.min(sizes.width, sizes.height) > CELL_SIZE;\r\n                        })\r\n                            .slice(0, maxNumScales);\r\n                        stats.scales = scales;\r\n                        stats.pyramid = scales.map(function (scale) { return getSizesForScale(scale, [height, width]); });\r\n                        ts = Date.now();\r\n                        return [4 /*yield*/, stage1(imgTensor, scales, scoreThresholds[0], params.pnet, stats)];\r\n                    case 1:\r\n                        out1 = _c.sent();\r\n                        stats.total_stage1 = Date.now() - ts;\r\n                        if (!out1.boxes.length) {\r\n                            return [2 /*return*/, onReturn({ results: [], stats: stats })];\r\n                        }\r\n                        stats.stage2_numInputBoxes = out1.boxes.length;\r\n                        // using the inputCanvas to extract and resize the image patches, since it is faster\r\n                        // than doing this on the gpu\r\n                        ts = Date.now();\r\n                        return [4 /*yield*/, stage2(inputCanvas, out1.boxes, scoreThresholds[1], params.rnet, stats)];\r\n                    case 2:\r\n                        out2 = _c.sent();\r\n                        stats.total_stage2 = Date.now() - ts;\r\n                        if (!out2.boxes.length) {\r\n                            return [2 /*return*/, onReturn({ results: [], stats: stats })];\r\n                        }\r\n                        stats.stage3_numInputBoxes = out2.boxes.length;\r\n                        ts = Date.now();\r\n                        return [4 /*yield*/, stage3(inputCanvas, out2.boxes, scoreThresholds[2], params.onet, stats)];\r\n                    case 3:\r\n                        out3 = _c.sent();\r\n                        stats.total_stage3 = Date.now() - ts;\r\n                        results = out3.boxes.map(function (box, idx) { return extendWithFaceLandmarks(extendWithFaceDetection({}, new FaceDetection(out3.scores[idx], new Rect(box.left / width, box.top / height, box.width / width, box.height / height), {\r\n                            height: height,\r\n                            width: width\r\n                        })), new FaceLandmarks5(out3.points[idx].map(function (pt) { return pt.sub(new Point(box.left, box.top)).div(new Point(box.width, box.height)); }), { width: box.width, height: box.height })); });\r\n                        return [2 /*return*/, onReturn({ results: results, stats: stats })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Mtcnn.prototype.forward = function (input, forwardParams) {\r\n        if (forwardParams === void 0) { forwardParams = {}; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [4 /*yield*/, _a.apply(this, [_b.sent(),\r\n                            forwardParams])];\r\n                    case 2: return [2 /*return*/, (_b.sent()).results];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Mtcnn.prototype.forwardWithStats = function (input, forwardParams) {\r\n        if (forwardParams === void 0) { forwardParams = {}; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent(),\r\n                            forwardParams])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Mtcnn.prototype.getDefaultModelName = function () {\r\n        return 'mtcnn_model';\r\n    };\r\n    Mtcnn.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return extractParamsFromWeigthMap(weightMap);\r\n    };\r\n    Mtcnn.prototype.extractParams = function (weights) {\r\n        return extractParams(weights);\r\n    };\r\n    return Mtcnn;\r\n}(NeuralNetwork));\r\nexport { Mtcnn };\r\n//# sourceMappingURL=Mtcnn.js.map","import { Point } from 'tfjs-image-recognition-base';\r\nexport var IOU_THRESHOLD = 0.4;\r\nexport var BOX_ANCHORS = [\r\n    new Point(1.603231, 2.094468),\r\n    new Point(6.041143, 7.080126),\r\n    new Point(2.882459, 3.518061),\r\n    new Point(4.266906, 5.178857),\r\n    new Point(9.041765, 10.66308)\r\n];\r\nexport var MEAN_RGB = [117.001, 114.697, 97.404];\r\n//# sourceMappingURL=const.js.map","import * as tslib_1 from \"tslib\";\r\nimport { TinyYolov2 as TinyYolov2Base } from 'tfjs-tiny-yolov2';\r\nimport { FaceDetection } from '../classes';\r\nimport { BOX_ANCHORS, IOU_THRESHOLD, MEAN_RGB } from './const';\r\nvar TinyFaceDetector = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TinyFaceDetector, _super);\r\n    function TinyFaceDetector() {\r\n        var _this = this;\r\n        var config = {\r\n            withSeparableConvs: true,\r\n            iouThreshold: IOU_THRESHOLD,\r\n            classes: ['face'],\r\n            anchors: BOX_ANCHORS,\r\n            meanRgb: MEAN_RGB,\r\n            isFirstLayerConv2d: true,\r\n            filterSizes: [3, 16, 32, 64, 128, 256, 512]\r\n        };\r\n        _this = _super.call(this, config) || this;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TinyFaceDetector.prototype, \"anchors\", {\r\n        get: function () {\r\n            return this.config.anchors;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TinyFaceDetector.prototype.locateFaces = function (input, forwardParams) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var objectDetections;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.detect(input, forwardParams)];\r\n                    case 1:\r\n                        objectDetections = _a.sent();\r\n                        return [2 /*return*/, objectDetections.map(function (det) { return new FaceDetection(det.score, det.relativeBox, { width: det.imageWidth, height: det.imageHeight }); })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TinyFaceDetector.prototype.getDefaultModelName = function () {\r\n        return 'tiny_face_detector_model';\r\n    };\r\n    TinyFaceDetector.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return _super.prototype.extractParamsFromWeigthMap.call(this, weightMap);\r\n    };\r\n    return TinyFaceDetector;\r\n}(TinyYolov2Base));\r\nexport { TinyFaceDetector };\r\n//# sourceMappingURL=TinyFaceDetector.js.map","import { Point } from 'tfjs-image-recognition-base';\r\nexport var IOU_THRESHOLD = 0.4;\r\nexport var BOX_ANCHORS = [\r\n    new Point(0.738768, 0.874946),\r\n    new Point(2.42204, 2.65704),\r\n    new Point(4.30971, 7.04493),\r\n    new Point(10.246, 4.59428),\r\n    new Point(12.6868, 11.8741)\r\n];\r\nexport var BOX_ANCHORS_SEPARABLE = [\r\n    new Point(1.603231, 2.094468),\r\n    new Point(6.041143, 7.080126),\r\n    new Point(2.882459, 3.518061),\r\n    new Point(4.266906, 5.178857),\r\n    new Point(9.041765, 10.66308)\r\n];\r\nexport var MEAN_RGB_SEPARABLE = [117.001, 114.697, 97.404];\r\nexport var DEFAULT_MODEL_NAME = 'tiny_yolov2_model';\r\nexport var DEFAULT_MODEL_NAME_SEPARABLE_CONV = 'tiny_yolov2_separable_conv_model';\r\n//# sourceMappingURL=const.js.map","import * as tslib_1 from \"tslib\";\r\nimport { TinyYolov2 as TinyYolov2Base } from 'tfjs-tiny-yolov2';\r\nimport { FaceDetection } from '../classes';\r\nimport { BOX_ANCHORS, BOX_ANCHORS_SEPARABLE, DEFAULT_MODEL_NAME, DEFAULT_MODEL_NAME_SEPARABLE_CONV, IOU_THRESHOLD, MEAN_RGB_SEPARABLE, } from './const';\r\nvar TinyYolov2 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TinyYolov2, _super);\r\n    function TinyYolov2(withSeparableConvs) {\r\n        if (withSeparableConvs === void 0) { withSeparableConvs = true; }\r\n        var _this = this;\r\n        var config = Object.assign({}, {\r\n            withSeparableConvs: withSeparableConvs,\r\n            iouThreshold: IOU_THRESHOLD,\r\n            classes: ['face']\r\n        }, withSeparableConvs\r\n            ? {\r\n                anchors: BOX_ANCHORS_SEPARABLE,\r\n                meanRgb: MEAN_RGB_SEPARABLE\r\n            }\r\n            : {\r\n                anchors: BOX_ANCHORS,\r\n                withClassScores: true\r\n            });\r\n        _this = _super.call(this, config) || this;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TinyYolov2.prototype, \"withSeparableConvs\", {\r\n        get: function () {\r\n            return this.config.withSeparableConvs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TinyYolov2.prototype, \"anchors\", {\r\n        get: function () {\r\n            return this.config.anchors;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TinyYolov2.prototype.locateFaces = function (input, forwardParams) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var objectDetections;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.detect(input, forwardParams)];\r\n                    case 1:\r\n                        objectDetections = _a.sent();\r\n                        return [2 /*return*/, objectDetections.map(function (det) { return new FaceDetection(det.score, det.relativeBox, { width: det.imageWidth, height: det.imageHeight }); })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TinyYolov2.prototype.getDefaultModelName = function () {\r\n        return this.withSeparableConvs ? DEFAULT_MODEL_NAME_SEPARABLE_CONV : DEFAULT_MODEL_NAME;\r\n    };\r\n    TinyYolov2.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return _super.prototype.extractParamsFromWeigthMap.call(this, weightMap);\r\n    };\r\n    return TinyYolov2;\r\n}(TinyYolov2Base));\r\nexport { TinyYolov2 };\r\n//# sourceMappingURL=TinyYolov2.js.map","import { FaceExpressionNet } from '../faceExpressionNet/FaceExpressionNet';\r\nimport { FaceLandmark68Net } from '../faceLandmarkNet/FaceLandmark68Net';\r\nimport { FaceLandmark68TinyNet } from '../faceLandmarkNet/FaceLandmark68TinyNet';\r\nimport { FaceRecognitionNet } from '../faceRecognitionNet/FaceRecognitionNet';\r\nimport { Mtcnn } from '../mtcnn/Mtcnn';\r\nimport { SsdMobilenetv1 } from '../ssdMobilenetv1/SsdMobilenetv1';\r\nimport { TinyFaceDetector } from '../tinyFaceDetector/TinyFaceDetector';\r\nimport { TinyYolov2 } from '../tinyYolov2/TinyYolov2';\r\nexport var nets = {\r\n    ssdMobilenetv1: new SsdMobilenetv1(),\r\n    tinyFaceDetector: new TinyFaceDetector(),\r\n    tinyYolov2: new TinyYolov2(),\r\n    mtcnn: new Mtcnn(),\r\n    faceLandmark68Net: new FaceLandmark68Net(),\r\n    faceLandmark68TinyNet: new FaceLandmark68TinyNet(),\r\n    faceRecognitionNet: new FaceRecognitionNet(),\r\n    faceExpressionNet: new FaceExpressionNet()\r\n};\r\n/**\r\n * Attempts to detect all faces in an image using SSD Mobilenetv1 Network.\r\n *\r\n * @param input The input image.\r\n * @param options (optional, default: see SsdMobilenetv1Options constructor for default parameters).\r\n * @returns Bounding box of each face with score.\r\n */\r\nexport var ssdMobilenetv1 = function (input, options) {\r\n    return nets.ssdMobilenetv1.locateFaces(input, options);\r\n};\r\n/**\r\n * Attempts to detect all faces in an image using the Tiny Face Detector.\r\n *\r\n * @param input The input image.\r\n * @param options (optional, default: see TinyFaceDetectorOptions constructor for default parameters).\r\n * @returns Bounding box of each face with score.\r\n */\r\nexport var tinyFaceDetector = function (input, options) {\r\n    return nets.tinyFaceDetector.locateFaces(input, options);\r\n};\r\n/**\r\n * Attempts to detect all faces in an image using the Tiny Yolov2 Network.\r\n *\r\n * @param input The input image.\r\n * @param options (optional, default: see TinyYolov2Options constructor for default parameters).\r\n * @returns Bounding box of each face with score.\r\n */\r\nexport var tinyYolov2 = function (input, options) {\r\n    return nets.tinyYolov2.locateFaces(input, options);\r\n};\r\n/**\r\n * Attempts to detect all faces in an image and the 5 point face landmarks\r\n * of each detected face using the MTCNN Network.\r\n *\r\n * @param input The input image.\r\n * @param options (optional, default: see MtcnnOptions constructor for default parameters).\r\n * @returns Bounding box of each face with score and 5 point face landmarks.\r\n */\r\nexport var mtcnn = function (input, options) {\r\n    return nets.mtcnn.forward(input, options);\r\n};\r\n/**\r\n * Detects the 68 point face landmark positions of the face shown in an image.\r\n *\r\n * @param inputs The face image extracted from the bounding box of a face. Can\r\n * also be an array of input images, which will be batch processed.\r\n * @returns 68 point face landmarks or array thereof in case of batch input.\r\n */\r\nexport var detectFaceLandmarks = function (input) {\r\n    return nets.faceLandmark68Net.detectLandmarks(input);\r\n};\r\n/**\r\n * Detects the 68 point face landmark positions of the face shown in an image\r\n * using a tinier version of the 68 point face landmark model, which is slightly\r\n * faster at inference, but also slightly less accurate.\r\n *\r\n * @param inputs The face image extracted from the bounding box of a face. Can\r\n * also be an array of input images, which will be batch processed.\r\n * @returns 68 point face landmarks or array thereof in case of batch input.\r\n */\r\nexport var detectFaceLandmarksTiny = function (input) {\r\n    return nets.faceLandmark68TinyNet.detectLandmarks(input);\r\n};\r\n/**\r\n * Computes a 128 entry vector (face descriptor / face embeddings) from the face shown in an image,\r\n * which uniquely represents the features of that persons face. The computed face descriptor can\r\n * be used to measure the similarity between faces, by computing the euclidean distance of two\r\n * face descriptors.\r\n *\r\n * @param inputs The face image extracted from the aligned bounding box of a face. Can\r\n * also be an array of input images, which will be batch processed.\r\n * @returns Face descriptor with 128 entries or array thereof in case of batch input.\r\n */\r\nexport var computeFaceDescriptor = function (input) {\r\n    return nets.faceRecognitionNet.computeFaceDescriptor(input);\r\n};\r\n/**\r\n * Recognizes the facial expressions of a face and returns the likelyhood of\r\n * each facial expression.\r\n *\r\n * @param inputs The face image extracted from the bounding box of a face. Can\r\n * also be an array of input images, which will be batch processed.\r\n * @returns An array of facial expressions with corresponding probabilities or array thereof in case of batch input.\r\n */\r\nexport var recognizeFaceExpressions = function (input) {\r\n    return nets.faceExpressionNet.predictExpressions(input);\r\n};\r\nexport var loadSsdMobilenetv1Model = function (url) { return nets.ssdMobilenetv1.load(url); };\r\nexport var loadTinyFaceDetectorModel = function (url) { return nets.tinyFaceDetector.load(url); };\r\nexport var loadMtcnnModel = function (url) { return nets.mtcnn.load(url); };\r\nexport var loadTinyYolov2Model = function (url) { return nets.tinyYolov2.load(url); };\r\nexport var loadFaceLandmarkModel = function (url) { return nets.faceLandmark68Net.load(url); };\r\nexport var loadFaceLandmarkTinyModel = function (url) { return nets.faceLandmark68TinyNet.load(url); };\r\nexport var loadFaceRecognitionModel = function (url) { return nets.faceRecognitionNet.load(url); };\r\nexport var loadFaceExpressionModel = function (url) { return nets.faceExpressionNet.load(url); };\r\n// backward compatibility\r\nexport var loadFaceDetectionModel = loadSsdMobilenetv1Model;\r\nexport var locateFaces = ssdMobilenetv1;\r\nexport var detectLandmarks = detectFaceLandmarks;\r\n//# sourceMappingURL=nets.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { extractFaces, extractFaceTensors } from '../dom';\r\nimport { extendWithFaceDescriptor } from '../factories/WithFaceDescriptor';\r\nimport { ComposableTask } from './ComposableTask';\r\nimport { nets } from './nets';\r\nvar ComputeFaceDescriptorsTaskBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ComputeFaceDescriptorsTaskBase, _super);\r\n    function ComputeFaceDescriptorsTaskBase(parentTask, input) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parentTask = parentTask;\r\n        _this.input = input;\r\n        return _this;\r\n    }\r\n    return ComputeFaceDescriptorsTaskBase;\r\n}(ComposableTask));\r\nexport { ComputeFaceDescriptorsTaskBase };\r\nvar ComputeAllFaceDescriptorsTask = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ComputeAllFaceDescriptorsTask, _super);\r\n    function ComputeAllFaceDescriptorsTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ComputeAllFaceDescriptorsTask.prototype.run = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var parentResults, alignedRects, alignedFaces, _a, results;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResults = _b.sent();\r\n                        alignedRects = parentResults.map(function (_a) {\r\n                            var alignedRect = _a.alignedRect;\r\n                            return alignedRect;\r\n                        });\r\n                        if (!(this.input instanceof tf.Tensor)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, extractFaceTensors(this.input, alignedRects)];\r\n                    case 2:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 3: return [4 /*yield*/, extractFaces(this.input, alignedRects)];\r\n                    case 4:\r\n                        _a = _b.sent();\r\n                        _b.label = 5;\r\n                    case 5:\r\n                        alignedFaces = _a;\r\n                        return [4 /*yield*/, Promise.all(parentResults.map(function (parentResult, i) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n                                var descriptor;\r\n                                return tslib_1.__generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, nets.faceRecognitionNet.computeFaceDescriptor(alignedFaces[i])];\r\n                                        case 1:\r\n                                            descriptor = _a.sent();\r\n                                            return [2 /*return*/, extendWithFaceDescriptor(parentResult, descriptor)];\r\n                                    }\r\n                                });\r\n                            }); }))];\r\n                    case 6:\r\n                        results = _b.sent();\r\n                        alignedFaces.forEach(function (f) { return f instanceof tf.Tensor && f.dispose(); });\r\n                        return [2 /*return*/, results];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return ComputeAllFaceDescriptorsTask;\r\n}(ComputeFaceDescriptorsTaskBase));\r\nexport { ComputeAllFaceDescriptorsTask };\r\nvar ComputeSingleFaceDescriptorTask = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ComputeSingleFaceDescriptorTask, _super);\r\n    function ComputeSingleFaceDescriptorTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ComputeSingleFaceDescriptorTask.prototype.run = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var parentResult, alignedRect, alignedFaces, _a, descriptor;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResult = _b.sent();\r\n                        if (!parentResult) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        alignedRect = parentResult.alignedRect;\r\n                        if (!(this.input instanceof tf.Tensor)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, extractFaceTensors(this.input, [alignedRect])];\r\n                    case 2:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 3: return [4 /*yield*/, extractFaces(this.input, [alignedRect])];\r\n                    case 4:\r\n                        _a = _b.sent();\r\n                        _b.label = 5;\r\n                    case 5:\r\n                        alignedFaces = _a;\r\n                        return [4 /*yield*/, nets.faceRecognitionNet.computeFaceDescriptor(alignedFaces[0])];\r\n                    case 6:\r\n                        descriptor = _b.sent();\r\n                        alignedFaces.forEach(function (f) { return f instanceof tf.Tensor && f.dispose(); });\r\n                        return [2 /*return*/, extendWithFaceDescriptor(parentResult, descriptor)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return ComputeSingleFaceDescriptorTask;\r\n}(ComputeFaceDescriptorsTaskBase));\r\nexport { ComputeSingleFaceDescriptorTask };\r\n//# sourceMappingURL=ComputeFaceDescriptorsTasks.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { extractFaces, extractFaceTensors } from '../dom';\r\nimport { extendWithFaceLandmarks } from '../factories/WithFaceLandmarks';\r\nimport { ComposableTask } from './ComposableTask';\r\nimport { ComputeAllFaceDescriptorsTask, ComputeSingleFaceDescriptorTask } from './ComputeFaceDescriptorsTasks';\r\nimport { nets } from './nets';\r\nvar DetectFaceLandmarksTaskBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DetectFaceLandmarksTaskBase, _super);\r\n    function DetectFaceLandmarksTaskBase(parentTask, input, useTinyLandmarkNet) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parentTask = parentTask;\r\n        _this.input = input;\r\n        _this.useTinyLandmarkNet = useTinyLandmarkNet;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DetectFaceLandmarksTaskBase.prototype, \"landmarkNet\", {\r\n        get: function () {\r\n            return this.useTinyLandmarkNet\r\n                ? nets.faceLandmark68TinyNet\r\n                : nets.faceLandmark68Net;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DetectFaceLandmarksTaskBase;\r\n}(ComposableTask));\r\nexport { DetectFaceLandmarksTaskBase };\r\nvar DetectAllFaceLandmarksTask = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DetectAllFaceLandmarksTask, _super);\r\n    function DetectAllFaceLandmarksTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DetectAllFaceLandmarksTask.prototype.run = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var parentResults, detections, faces, _a, faceLandmarksByFace;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResults = _b.sent();\r\n                        detections = parentResults.map(function (res) { return res.detection; });\r\n                        if (!(this.input instanceof tf.Tensor)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, extractFaceTensors(this.input, detections)];\r\n                    case 2:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 3: return [4 /*yield*/, extractFaces(this.input, detections)];\r\n                    case 4:\r\n                        _a = _b.sent();\r\n                        _b.label = 5;\r\n                    case 5:\r\n                        faces = _a;\r\n                        return [4 /*yield*/, Promise.all(faces.map(function (face) { return _this.landmarkNet.detectLandmarks(face); }))];\r\n                    case 6:\r\n                        faceLandmarksByFace = _b.sent();\r\n                        faces.forEach(function (f) { return f instanceof tf.Tensor && f.dispose(); });\r\n                        return [2 /*return*/, parentResults.map(function (parentResult, i) {\r\n                                return extendWithFaceLandmarks(parentResult, faceLandmarksByFace[i]);\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DetectAllFaceLandmarksTask.prototype.withFaceDescriptors = function () {\r\n        return new ComputeAllFaceDescriptorsTask(this, this.input);\r\n    };\r\n    return DetectAllFaceLandmarksTask;\r\n}(DetectFaceLandmarksTaskBase));\r\nexport { DetectAllFaceLandmarksTask };\r\nvar DetectSingleFaceLandmarksTask = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DetectSingleFaceLandmarksTask, _super);\r\n    function DetectSingleFaceLandmarksTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DetectSingleFaceLandmarksTask.prototype.run = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var parentResult, detection, faces, _a, landmarks;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResult = _b.sent();\r\n                        if (!parentResult) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        detection = parentResult.detection;\r\n                        if (!(this.input instanceof tf.Tensor)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, extractFaceTensors(this.input, [detection])];\r\n                    case 2:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 3: return [4 /*yield*/, extractFaces(this.input, [detection])];\r\n                    case 4:\r\n                        _a = _b.sent();\r\n                        _b.label = 5;\r\n                    case 5:\r\n                        faces = _a;\r\n                        return [4 /*yield*/, this.landmarkNet.detectLandmarks(faces[0])];\r\n                    case 6:\r\n                        landmarks = _b.sent();\r\n                        faces.forEach(function (f) { return f instanceof tf.Tensor && f.dispose(); });\r\n                        return [2 /*return*/, extendWithFaceLandmarks(parentResult, landmarks)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DetectSingleFaceLandmarksTask.prototype.withFaceDescriptor = function () {\r\n        return new ComputeSingleFaceDescriptorTask(this, this.input);\r\n    };\r\n    return DetectSingleFaceLandmarksTask;\r\n}(DetectFaceLandmarksTaskBase));\r\nexport { DetectSingleFaceLandmarksTask };\r\n//# sourceMappingURL=DetectFaceLandmarksTasks.js.map","import * as tslib_1 from \"tslib\";\r\nimport { tf } from 'tfjs-tiny-yolov2';\r\nimport { extractFaces, extractFaceTensors } from '../dom';\r\nimport { extendWithFaceExpressions } from '../factories/WithFaceExpressions';\r\nimport { ComposableTask } from './ComposableTask';\r\nimport { DetectAllFaceLandmarksTask, DetectSingleFaceLandmarksTask } from './DetectFaceLandmarksTasks';\r\nimport { nets } from './nets';\r\nvar PredictFaceExpressionsTaskBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PredictFaceExpressionsTaskBase, _super);\r\n    function PredictFaceExpressionsTaskBase(parentTask, input) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parentTask = parentTask;\r\n        _this.input = input;\r\n        return _this;\r\n    }\r\n    return PredictFaceExpressionsTaskBase;\r\n}(ComposableTask));\r\nexport { PredictFaceExpressionsTaskBase };\r\nvar PredictAllFaceExpressionsTask = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PredictAllFaceExpressionsTask, _super);\r\n    function PredictAllFaceExpressionsTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PredictAllFaceExpressionsTask.prototype.run = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var parentResults, detections, faces, _a, faceExpressionsByFace;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResults = _b.sent();\r\n                        detections = parentResults.map(function (parentResult) { return parentResult.detection; });\r\n                        if (!(this.input instanceof tf.Tensor)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, extractFaceTensors(this.input, detections)];\r\n                    case 2:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 3: return [4 /*yield*/, extractFaces(this.input, detections)];\r\n                    case 4:\r\n                        _a = _b.sent();\r\n                        _b.label = 5;\r\n                    case 5:\r\n                        faces = _a;\r\n                        return [4 /*yield*/, Promise.all(faces.map(function (face) { return nets.faceExpressionNet.predictExpressions(face); }))];\r\n                    case 6:\r\n                        faceExpressionsByFace = _b.sent();\r\n                        faces.forEach(function (f) { return f instanceof tf.Tensor && f.dispose(); });\r\n                        return [2 /*return*/, parentResults.map(function (parentResult, i) { return extendWithFaceExpressions(parentResult, faceExpressionsByFace[i]); })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PredictAllFaceExpressionsTask.prototype.withFaceLandmarks = function () {\r\n        return new DetectAllFaceLandmarksTask(this, this.input, false);\r\n    };\r\n    return PredictAllFaceExpressionsTask;\r\n}(PredictFaceExpressionsTaskBase));\r\nexport { PredictAllFaceExpressionsTask };\r\nvar PredictSingleFaceExpressionTask = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PredictSingleFaceExpressionTask, _super);\r\n    function PredictSingleFaceExpressionTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PredictSingleFaceExpressionTask.prototype.run = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var parentResult, detection, faces, _a, faceExpressions;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResult = _b.sent();\r\n                        if (!parentResult) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        detection = parentResult.detection;\r\n                        if (!(this.input instanceof tf.Tensor)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, extractFaceTensors(this.input, [detection])];\r\n                    case 2:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 3: return [4 /*yield*/, extractFaces(this.input, [detection])];\r\n                    case 4:\r\n                        _a = _b.sent();\r\n                        _b.label = 5;\r\n                    case 5:\r\n                        faces = _a;\r\n                        return [4 /*yield*/, nets.faceExpressionNet.predictExpressions(faces[0])];\r\n                    case 6:\r\n                        faceExpressions = _b.sent();\r\n                        faces.forEach(function (f) { return f instanceof tf.Tensor && f.dispose(); });\r\n                        return [2 /*return*/, extendWithFaceExpressions(parentResult, faceExpressions)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PredictSingleFaceExpressionTask.prototype.withFaceLandmarks = function () {\r\n        return new DetectSingleFaceLandmarksTask(this, this.input, false);\r\n    };\r\n    return PredictSingleFaceExpressionTask;\r\n}(PredictFaceExpressionsTaskBase));\r\nexport { PredictSingleFaceExpressionTask };\r\n//# sourceMappingURL=PredictFaceExpressionsTask.js.map","import * as tslib_1 from \"tslib\";\r\nimport { TinyYolov2Options } from 'tfjs-tiny-yolov2';\r\nimport { extendWithFaceDetection } from '../factories/WithFaceDetection';\r\nimport { MtcnnOptions } from '../mtcnn/MtcnnOptions';\r\nimport { SsdMobilenetv1Options } from '../ssdMobilenetv1/SsdMobilenetv1Options';\r\nimport { TinyFaceDetectorOptions } from '../tinyFaceDetector/TinyFaceDetectorOptions';\r\nimport { ComposableTask } from './ComposableTask';\r\nimport { DetectAllFaceLandmarksTask, DetectSingleFaceLandmarksTask } from './DetectFaceLandmarksTasks';\r\nimport { nets } from './nets';\r\nimport { PredictAllFaceExpressionsTask, PredictSingleFaceExpressionTask } from './PredictFaceExpressionsTask';\r\nvar DetectFacesTaskBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DetectFacesTaskBase, _super);\r\n    function DetectFacesTaskBase(input, options) {\r\n        if (options === void 0) { options = new SsdMobilenetv1Options(); }\r\n        var _this = _super.call(this) || this;\r\n        _this.input = input;\r\n        _this.options = options;\r\n        return _this;\r\n    }\r\n    return DetectFacesTaskBase;\r\n}(ComposableTask));\r\nexport { DetectFacesTaskBase };\r\nvar DetectAllFacesTask = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DetectAllFacesTask, _super);\r\n    function DetectAllFacesTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DetectAllFacesTask.prototype.run = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var _a, input, options, faceDetectionFunction;\r\n            return tslib_1.__generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this, input = _a.input, options = _a.options;\r\n                        if (!(options instanceof MtcnnOptions)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, nets.mtcnn.forward(input, options)];\r\n                    case 1: return [2 /*return*/, (_b.sent())\r\n                            .map(function (result) { return result.detection; })];\r\n                    case 2:\r\n                        faceDetectionFunction = options instanceof TinyFaceDetectorOptions\r\n                            ? function (input) { return nets.tinyFaceDetector.locateFaces(input, options); }\r\n                            : (options instanceof SsdMobilenetv1Options\r\n                                ? function (input) { return nets.ssdMobilenetv1.locateFaces(input, options); }\r\n                                : (options instanceof TinyYolov2Options\r\n                                    ? function (input) { return nets.tinyYolov2.locateFaces(input, options); }\r\n                                    : null));\r\n                        if (!faceDetectionFunction) {\r\n                            throw new Error('detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | MtcnnOptions | TinyYolov2Options');\r\n                        }\r\n                        return [2 /*return*/, faceDetectionFunction(input)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DetectAllFacesTask.prototype.runAndExtendWithFaceDetections = function () {\r\n        var _this = this;\r\n        return new Promise(function (res) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var detections;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.run()];\r\n                    case 1:\r\n                        detections = _a.sent();\r\n                        return [2 /*return*/, res(detections.map(function (detection) { return extendWithFaceDetection({}, detection); }))];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    DetectAllFacesTask.prototype.withFaceLandmarks = function (useTinyLandmarkNet) {\r\n        if (useTinyLandmarkNet === void 0) { useTinyLandmarkNet = false; }\r\n        return new DetectAllFaceLandmarksTask(this.runAndExtendWithFaceDetections(), this.input, useTinyLandmarkNet);\r\n    };\r\n    DetectAllFacesTask.prototype.withFaceExpressions = function () {\r\n        return new PredictAllFaceExpressionsTask(this.runAndExtendWithFaceDetections(), this.input);\r\n    };\r\n    return DetectAllFacesTask;\r\n}(DetectFacesTaskBase));\r\nexport { DetectAllFacesTask };\r\nvar DetectSingleFaceTask = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DetectSingleFaceTask, _super);\r\n    function DetectSingleFaceTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DetectSingleFaceTask.prototype.run = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var faceDetections, faceDetectionWithHighestScore;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, new DetectAllFacesTask(this.input, this.options)];\r\n                    case 1:\r\n                        faceDetections = _a.sent();\r\n                        faceDetectionWithHighestScore = faceDetections[0];\r\n                        faceDetections.forEach(function (faceDetection) {\r\n                            if (faceDetection.score > faceDetectionWithHighestScore.score) {\r\n                                faceDetectionWithHighestScore = faceDetection;\r\n                            }\r\n                        });\r\n                        return [2 /*return*/, faceDetectionWithHighestScore];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DetectSingleFaceTask.prototype.runAndExtendWithFaceDetection = function () {\r\n        var _this = this;\r\n        return new Promise(function (res) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var detection;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.run()];\r\n                    case 1:\r\n                        detection = _a.sent();\r\n                        return [2 /*return*/, res(detection ? extendWithFaceDetection({}, detection) : undefined)];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    DetectSingleFaceTask.prototype.withFaceLandmarks = function (useTinyLandmarkNet) {\r\n        if (useTinyLandmarkNet === void 0) { useTinyLandmarkNet = false; }\r\n        return new DetectSingleFaceLandmarksTask(this.runAndExtendWithFaceDetection(), this.input, useTinyLandmarkNet);\r\n    };\r\n    DetectSingleFaceTask.prototype.withFaceExpressions = function () {\r\n        return new PredictSingleFaceExpressionTask(this.runAndExtendWithFaceDetection(), this.input);\r\n    };\r\n    return DetectSingleFaceTask;\r\n}(DetectFacesTaskBase));\r\nexport { DetectSingleFaceTask };\r\n//# sourceMappingURL=DetectFacesTasks.js.map","import { SsdMobilenetv1Options } from '../ssdMobilenetv1/SsdMobilenetv1Options';\r\nimport { DetectAllFacesTask, DetectSingleFaceTask } from './DetectFacesTasks';\r\nexport function detectSingleFace(input, options) {\r\n    if (options === void 0) { options = new SsdMobilenetv1Options(); }\r\n    return new DetectSingleFaceTask(input, options);\r\n}\r\nexport function detectAllFaces(input, options) {\r\n    if (options === void 0) { options = new SsdMobilenetv1Options(); }\r\n    return new DetectAllFacesTask(input, options);\r\n}\r\n//# sourceMappingURL=detectFaces.js.map","import * as tslib_1 from \"tslib\";\r\nimport { TinyYolov2Options } from 'tfjs-tiny-yolov2';\r\nimport { MtcnnOptions } from '../mtcnn/MtcnnOptions';\r\nimport { SsdMobilenetv1Options } from '../ssdMobilenetv1';\r\nimport { detectAllFaces } from './detectFaces';\r\n// export allFaces API for backward compatibility\r\nexport function allFacesSsdMobilenetv1(input, minConfidence) {\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, detectAllFaces(input, new SsdMobilenetv1Options(minConfidence ? { minConfidence: minConfidence } : {}))\r\n                        .withFaceLandmarks()\r\n                        .withFaceDescriptors()];\r\n                case 1: return [2 /*return*/, _a.sent()];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport function allFacesTinyYolov2(input, forwardParams) {\r\n    if (forwardParams === void 0) { forwardParams = {}; }\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, detectAllFaces(input, new TinyYolov2Options(forwardParams))\r\n                        .withFaceLandmarks()\r\n                        .withFaceDescriptors()];\r\n                case 1: return [2 /*return*/, _a.sent()];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport function allFacesMtcnn(input, forwardParams) {\r\n    if (forwardParams === void 0) { forwardParams = {}; }\r\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n        return tslib_1.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, detectAllFaces(input, new MtcnnOptions(forwardParams))\r\n                        .withFaceLandmarks()\r\n                        .withFaceDescriptors()];\r\n                case 1: return [2 /*return*/, _a.sent()];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport var allFaces = allFacesSsdMobilenetv1;\r\n//# sourceMappingURL=allFaces.js.map","export function euclideanDistance(arr1, arr2) {\r\n    if (arr1.length !== arr2.length)\r\n        throw new Error('euclideanDistance: arr1.length !== arr2.length');\r\n    var desc1 = Array.from(arr1);\r\n    var desc2 = Array.from(arr2);\r\n    return Math.sqrt(desc1\r\n        .map(function (val, i) { return val - desc2[i]; })\r\n        .reduce(function (res, diff) { return res + Math.pow(diff, 2); }, 0));\r\n}\r\n//# sourceMappingURL=euclideanDistance.js.map","import { FaceMatch } from '../classes/FaceMatch';\r\nimport { LabeledFaceDescriptors } from '../classes/LabeledFaceDescriptors';\r\nimport { euclideanDistance } from '../euclideanDistance';\r\nvar FaceMatcher = /** @class */ (function () {\r\n    function FaceMatcher(inputs, distanceThreshold) {\r\n        if (distanceThreshold === void 0) { distanceThreshold = 0.6; }\r\n        this._distanceThreshold = distanceThreshold;\r\n        var inputArray = Array.isArray(inputs) ? inputs : [inputs];\r\n        if (!inputArray.length) {\r\n            throw new Error(\"FaceRecognizer.constructor - expected atleast one input\");\r\n        }\r\n        var count = 1;\r\n        var createUniqueLabel = function () { return \"person \" + count++; };\r\n        this._labeledDescriptors = inputArray.map(function (desc) {\r\n            if (desc instanceof LabeledFaceDescriptors) {\r\n                return desc;\r\n            }\r\n            if (desc instanceof Float32Array) {\r\n                return new LabeledFaceDescriptors(createUniqueLabel(), [desc]);\r\n            }\r\n            if (desc.descriptor && desc.descriptor instanceof Float32Array) {\r\n                return new LabeledFaceDescriptors(createUniqueLabel(), [desc.descriptor]);\r\n            }\r\n            throw new Error(\"FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>\");\r\n        });\r\n    }\r\n    Object.defineProperty(FaceMatcher.prototype, \"labeledDescriptors\", {\r\n        get: function () { return this._labeledDescriptors; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FaceMatcher.prototype, \"distanceThreshold\", {\r\n        get: function () { return this._distanceThreshold; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FaceMatcher.prototype.computeMeanDistance = function (queryDescriptor, descriptors) {\r\n        return descriptors\r\n            .map(function (d) { return euclideanDistance(d, queryDescriptor); })\r\n            .reduce(function (d1, d2) { return d1 + d2; }, 0)\r\n            / (descriptors.length || 1);\r\n    };\r\n    FaceMatcher.prototype.matchDescriptor = function (queryDescriptor) {\r\n        var _this = this;\r\n        return this.labeledDescriptors\r\n            .map(function (_a) {\r\n            var descriptors = _a.descriptors, label = _a.label;\r\n            return new FaceMatch(label, _this.computeMeanDistance(queryDescriptor, descriptors));\r\n        })\r\n            .reduce(function (best, curr) { return best.distance < curr.distance ? best : curr; });\r\n    };\r\n    FaceMatcher.prototype.findBestMatch = function (queryDescriptor) {\r\n        var bestMatch = this.matchDescriptor(queryDescriptor);\r\n        return bestMatch.distance < this.distanceThreshold\r\n            ? bestMatch\r\n            : new FaceMatch('unknown', bestMatch.distance);\r\n    };\r\n    return FaceMatcher;\r\n}());\r\nexport { FaceMatcher };\r\n//# sourceMappingURL=FaceMatcher.js.map","export * from './allFaces';\r\nexport * from './ComposableTask';\r\nexport * from './ComputeFaceDescriptorsTasks';\r\nexport * from './detectFaces';\r\nexport * from './DetectFacesTasks';\r\nexport * from './DetectFaceLandmarksTasks';\r\nexport * from './FaceMatcher';\r\nexport * from './nets';\r\n//# sourceMappingURL=index.js.map","import { Mtcnn } from './Mtcnn';\r\nexport * from './Mtcnn';\r\nexport * from './MtcnnOptions';\r\nexport function createMtcnn(weights) {\r\n    var net = new Mtcnn();\r\n    net.extractWeights(weights);\r\n    return net;\r\n}\r\n//# sourceMappingURL=index.js.map","import { TinyFaceDetector } from './TinyFaceDetector';\r\nexport * from './TinyFaceDetector';\r\nexport * from './TinyFaceDetectorOptions';\r\nexport function createTinyFaceDetector(weights) {\r\n    var net = new TinyFaceDetector();\r\n    net.extractWeights(weights);\r\n    return net;\r\n}\r\n//# sourceMappingURL=index.js.map","import { TinyYolov2 } from './TinyYolov2';\r\nexport * from './TinyYolov2';\r\nexport function createTinyYolov2(weights, withSeparableConvs) {\r\n    if (withSeparableConvs === void 0) { withSeparableConvs = true; }\r\n    var net = new TinyYolov2(withSeparableConvs);\r\n    net.extractWeights(weights);\r\n    return net;\r\n}\r\n//# sourceMappingURL=index.js.map","import { FaceDetection } from './classes/FaceDetection';\r\nimport { FaceLandmarks } from './classes/FaceLandmarks';\r\nimport { extendWithFaceDetection } from './factories/WithFaceDetection';\r\nimport { extendWithFaceLandmarks } from './factories/WithFaceLandmarks';\r\nexport function resizeResults(results, _a) {\r\n    var width = _a.width, height = _a.height;\r\n    if (Array.isArray(results)) {\r\n        return results.map(function (obj) { return resizeResults(obj, { width: width, height: height }); });\r\n    }\r\n    var hasLandmarks = results['unshiftedLandmarks'] && results['unshiftedLandmarks'] instanceof FaceLandmarks;\r\n    var hasDetection = results['detection'] && results['detection'] instanceof FaceDetection;\r\n    if (hasLandmarks) {\r\n        var resizedDetection = results['detection'].forSize(width, height);\r\n        var resizedLandmarks = results['unshiftedLandmarks'].forSize(resizedDetection.box.width, resizedDetection.box.height);\r\n        return extendWithFaceLandmarks(extendWithFaceDetection(results, resizedDetection), resizedLandmarks);\r\n    }\r\n    if (hasDetection) {\r\n        return extendWithFaceDetection(results, results['detection'].forSize(width, height));\r\n    }\r\n    if (results instanceof FaceLandmarks || results instanceof FaceDetection) {\r\n        return results.forSize(width, height);\r\n    }\r\n    return results;\r\n}\r\n//# sourceMappingURL=resizeResults.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport { tf };\r\nexport * from 'tfjs-image-recognition-base';\r\nexport * from './classes/index';\r\nexport * from './dom/index';\r\nexport * from './faceExpressionNet/index';\r\nexport * from './faceLandmarkNet/index';\r\nexport * from './faceRecognitionNet/index';\r\nexport * from './factories/index';\r\nexport * from './globalApi/index';\r\nexport * from './mtcnn/index';\r\nexport * from './ssdMobilenetv1/index';\r\nexport * from './tinyFaceDetector/index';\r\nexport * from './tinyYolov2/index';\r\nexport * from './euclideanDistance';\r\nexport * from './resizeResults';\r\n//# sourceMappingURL=index.js.map","export * from './components'\nexport * from './displayResults'\nexport * from './facc'\nexport * from './hoc'\nexport * from './MediaElement'\nexport * from './shallowEquals'\nexport * from './types'\n","import styled from 'styled-components';\n\nexport type CenterContentProps = {\n  alignItems?: string,\n  flexDirection?: 'row' | 'column'\n}\n\nexport const CenterContent = styled.div`\n  display: flex;\n  align-items: ${(props: CenterContentProps) => props.alignItems || 'center'};\n  justify-content: center;\n  flex-direction: ${(props: CenterContentProps) => props.flexDirection || 'row'};\n  flex-wrap: wrap;\n`","import { withPrefix } from 'gatsby-link';\n\nexport const DOCS_URI = withPrefix('/docs/globals.html')\n\nexport const EXAMPLE_IMAGES = [1, 2, 3, 4, 5]\n  .map(idx => `bbt${idx}.jpg`)\n  .map(label => ({\n    label,\n    url: withPrefix(`/images/${label}`)\n  }))\n\nexport const ALIGNED_FACE_IMAGES_BY_CLASS = ['amy', 'bernadette', 'howard', 'leonard', 'penny', 'raj', 'sheldon', 'stuart']\n  .map(\n    clazz => [1, 2, 3, 4, 5]\n      .map(idx => `${clazz}${idx}.png`)\n      .map(label => ({\n        label,\n        url: withPrefix(`/images/${clazz}/${label}`)\n      }))\n  )\n\nexport const EXAMPLE_VIDEO = withPrefix(`/media/bbt.mp4`)\n\nexport const MODELS_URI = withPrefix(`/models`)\n\nexport const ALIGNED_FACE_IMAGES = ALIGNED_FACE_IMAGES_BY_CLASS\n  .reduce((flat, arr) => flat.concat(arr), [])\n\nexport const FACE_DETECTORS = ['Tiny Face Detector', 'SSD Mobilenet V1', 'MTCNN']\n\nexport function isTinyFaceDetector(detectorName: string) {\n  return detectorName === FACE_DETECTORS[0]\n}\n\nexport function isSsdMobilenetv1(detectorName: string) {\n  return detectorName === FACE_DETECTORS[1]\n}\n\nexport function isMtcnn(detectorName: string) {\n  return detectorName === FACE_DETECTORS[2]\n}\n\nexport function getFaceDetectionModelUri(detectorName: string, modelUri: string) {\n  if (isTinyFaceDetector(detectorName)) {\n    return { tinyFaceDetectorModelUrl: modelUri }\n  }\n  if (isSsdMobilenetv1(detectorName)) {\n    return { ssdMobilenetv1ModelUrl: modelUri }\n  }\n  if (isMtcnn(detectorName)) {\n    return { mtcnnModelUrl: modelUri }\n  }\n\n  throw new Error(`getLoadModelsUriFromFaceDetector - invalid face detector: ${detectorName}`)\n}","import styled from 'styled-components';\n\nexport const SideBySide = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`","import * as React from 'react';\n\nimport { shallowEquals } from '../shallowEquals';\nimport { ReactElement } from '../types';\n\nexport interface IsBusy  {\n  isBusy: boolean\n}\n\nexport interface WithAsyncRenderingProps<T extends IsBusy> {\n  children: (injectedProps: T) => ReactElement\n  renderBusyComponent?: () => ReactElement\n}\n\nexport interface WithAsyncRenderingState<InjectedProps> extends IsBusy {\n  injectedProps: InjectedProps | null\n}\n\nexport const withAsyncRendering = <Props, InjectedProps> (\n  asyncAction: (props: Props) => Promise<InjectedProps | null>,\n  initialState?: InjectedProps\n) => {\n\n  type ExtendedComponentProps = Props & WithAsyncRenderingProps<InjectedProps & IsBusy>\n\n  return class extends React.Component<\n    Props & WithAsyncRenderingProps<InjectedProps & IsBusy>\n  > {\n    constructor(props: ExtendedComponentProps) {\n      super(props)\n      this.dispatchAsyncAction = this.dispatchAsyncAction.bind(this)\n    }\n\n    state: WithAsyncRenderingState<InjectedProps> = {\n      injectedProps: initialState,\n      isBusy: true\n    }\n\n    async dispatchAsyncAction(props: Props) {\n      this.setState({ isBusy: true })\n      this.setState({ isBusy: false, injectedProps: await asyncAction(props) })\n    }\n\n    componentWillReceiveProps(nextProps: ExtendedComponentProps) {\n      if (!shallowEquals(this.props, nextProps, ['children'])) {\n        this.dispatchAsyncAction(nextProps)\n      }\n    }\n\n    componentDidMount() {\n      this.dispatchAsyncAction(this.props as any as Props)\n    }\n\n    render() {\n      const { injectedProps, isBusy } = this.state\n      const { renderBusyComponent } = this.props\n\n      if (isBusy) {\n        return renderBusyComponent ? renderBusyComponent() : null\n      }\n\n      return injectedProps\n        ? this.props.children(Object.assign({}, injectedProps, { isBusy }))\n        // case: async action did not resolve state\n        : null\n    }\n  }\n}\n","import Link from 'gatsby-link';\nimport styled, { css } from 'styled-components';\n\nconst linkCss = css`\n  padding: 4px;\n  color: inherit;\n  text-decoration: none;\n  display: block;\n`\n\nexport const StyledLink = styled(Link)`\n  ${linkCss}\n`\n\nexport const StyledAbsLink = styled.a`\n  ${linkCss}\n`","import { Divider, Drawer, Hidden, IconButton, List, ListItem } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport * as React from 'react';\n\nimport { DOCS_URI } from '../const';\nimport { StyledAbsLink, StyledLink } from '../styled/StyledLink';\n\nexport type MenuItem = {\n  label: string\n  linkTo: string\n}\n\ntype SideMenuProps = {\n  items: MenuItem[]\n  isOpen: boolean\n  classes: any\n  onToggle: () => any\n}\n\nconst styles = (theme: any) => ({\n  paper: {\n    width: theme.sideMenuWidth\n  }\n})\n\nclass SideMenuComponent extends React.Component<SideMenuProps> {\n  renderDrawer(isSm: boolean) {\n    const menu = (\n      <div>\n        {\n          isSm &&\n            <IconButton\n              aria-label=\"open drawer\"\n              onClick={this.props.onToggle}\n            >\n              <MenuIcon />\n            </IconButton>\n        }\n        <StyledAbsLink href=\"https://github.com/justadudewhohacks/face-api.js\">\n          <h3 style={{ paddingLeft: 24 }}> face-api.js </h3>\n        </StyledAbsLink>\n        <Divider />\n        <StyledAbsLink href={DOCS_URI}>\n          <h3 style={{ paddingLeft: 24 }}> API Documentation </h3>\n        </StyledAbsLink>\n        <Divider />\n        <List>\n          {\n            this.props.items.map(\n              item =>\n                <ListItem key={item.linkTo}>\n                  <StyledLink to={item.linkTo}>\n                    { item.label }\n                  </StyledLink>\n                </ListItem>\n            )\n          }\n        </List>\n      </div>\n    )\n\n    return (\n      <Drawer\n        anchor=\"left\"\n        variant={isSm ? 'temporary' : 'permanent'}\n        open={this.props.isOpen}\n        onClose={isSm ? this.props.onToggle : () => {}}\n        ModalProps={{\n          keepMounted: true\n        }}\n        classes={{\n          paper: this.props.classes.paper\n        }}\n      >\n        { menu }\n      </Drawer>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        <Hidden mdUp>\n          { this.renderDrawer(true) }\n        </Hidden>\n        <Hidden smDown>\n          { this.renderDrawer(false) }\n        </Hidden>\n      </div>\n    )\n  }\n}\n\nexport const SideMenu = withStyles(styles)(SideMenuComponent)","import { IconButton } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nimport { CenterContent } from '../styled/CenterContent';\nimport { SideMenu } from '../components/SideMenu';\n\nconst PageHeader = styled.h3`\n  text-align: center;\n`\n\nconst MENU_ITEMS = [\n  { label: 'Face And Landmark Detection', linkTo: '/face_and_landmark_detection' },\n  { label: 'Face Recognition', linkTo: '/face_recognition' },\n  { label: 'Video Face Tracking', linkTo: '/video_face_tracking' },\n  { label: 'Webcam Face Tracking', linkTo: '/webcam_face_tracking' },\n  { label: 'BBT Face Landmark Detection', linkTo: '/bbt_face_landmark_detection' },\n  { label: 'BBT Face Similarity', linkTo: '/bbt_face_similarity' },\n  { label: 'BBT Face Recognition', linkTo: '/bbt_face_recognition' }\n]\n\nconst styles = (theme: any) => ({\n  pageContent: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    maxWidth: '800px',\n    padding: '10px',\n    marginLeft: '0px',\n    [theme.breakpoints.up('md')]: {\n      marginLeft: theme.sideMenuWidth\n    }\n  }\n})\n\ntype PageLayoutProps = {\n  classes: any\n}\n\ntype PageLayoutState = {\n  isSideMenuOpen: boolean\n}\n\nclass PageLayoutComponent extends React.Component<PageLayoutProps, PageLayoutState> {\n  state: PageLayoutState = {\n    isSideMenuOpen: false\n  }\n\n  toggleMenu = () => {\n    this.setState(state => ({ isSideMenuOpen: !state.isSideMenuOpen }))\n  }\n\n  public render() {\n    return (\n      <div>\n        <IconButton\n          aria-label=\"open drawer\"\n          onClick={this.toggleMenu}\n          style={{ zIndex: 999 }}\n        >\n          <MenuIcon />\n        </IconButton>\n        <SideMenu\n          items={MENU_ITEMS}\n          isOpen={this.state.isSideMenuOpen}\n          onToggle={this.toggleMenu}\n        />\n        <div className={this.props.classes.pageContent}>\n          <CenterContent>\n            <div>\n              <PageHeader>\n                face-api.js playground\n              </PageHeader>\n              { this.props.children }\n              </div>\n          </CenterContent>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport const PageLayout = withStyles(styles as any)(PageLayoutComponent)","import { MuiThemeProvider } from '@material-ui/core';\r\nimport * as React from 'react';\r\n\r\nimport { PageLayout } from './layouts/PageLayout';\r\n\r\nconst getPageContext = require('./getPageContext').default\r\n\r\nexport class Root extends React.Component {\r\n\r\n  pageContext: any = {}\r\n\r\n  constructor(props: any, context: any){\r\n    super(props, context)\r\n    this.pageContext = getPageContext()\r\n  }\r\n\r\n  public render() {\r\n    return(\r\n      <MuiThemeProvider\r\n        theme={this.pageContext.theme}\r\n        sheetsManager={this.pageContext.sheetsManager}\r\n      >\r\n        <PageLayout>\r\n          { this.props.children }\r\n        </PageLayout>\r\n      </MuiThemeProvider>\r\n    )\r\n  }\r\n}","import { BoxWithText, FaceDetection, FaceDetectionWithLandmarks, FaceLandmarks68 } from 'face-api.js';\nimport { MediaElement, shallowEquals } from 'face-api.js-react';\nimport * as React from 'react';\n\nimport { displayResults, DisplayResultsOptions } from '../displayResults';\nimport { ReactElement } from '../types';\n\nexport type DisplayResultsProps = {\n  input: MediaElement\n  overlay: HTMLCanvasElement\n  results?: Array<FaceDetection | FaceLandmarks68 | FaceDetectionWithLandmarks | BoxWithText>\n  displayResultsOptions?: DisplayResultsOptions\n  children?: () => ReactElement\n}\n\nexport class DisplayResults extends React.Component<DisplayResultsProps> {\n\n  static defaultProps: Partial<DisplayResultsProps> = {\n    displayResultsOptions: {\n      withScore: true,\n      drawLines: true\n    }\n  }\n\n  displayResults({ input, overlay, results, displayResultsOptions }: DisplayResultsProps) {\n    displayResults(input, overlay, results, displayResultsOptions)\n  }\n\n  componentWillReceiveProps(nextProps: DisplayResultsProps) {\n    if (!shallowEquals(this.props, nextProps, ['children'])) {\n      this.displayResults(nextProps)\n    }\n  }\n\n  componentDidMount() {\n    this.displayResults(this.props)\n  }\n\n  render(): any {\n    const { children } = this.props\n    return children ? children() : null\n  }\n}","import { BoxWithText, FaceDetection, FaceDetectionWithLandmarks, FaceLandmarks68, ObjectDetection } from 'face-api.js';\nimport * as faceapi from 'face-api.js';\n\nimport { MediaElement } from './MediaElement';\n\nexport type DisplayResultsOptions = {\n  withBoxes?: boolean\n  withScore?: boolean\n  drawLines?: boolean\n}\n\nexport function displayResults(\n  input: MediaElement,\n  overlay: HTMLCanvasElement,\n  results: Array<FaceDetection | FaceLandmarks68 | FaceDetectionWithLandmarks | BoxWithText>,\n  options: DisplayResultsOptions\n) {\n  if (!input || !overlay) {\n    return\n  }\n\n  overlay.getContext('2d').clearRect(0, 0, overlay.width, overlay.height)\n\n  const { width, height } = input.element.getBoundingClientRect()\n  overlay.width = width\n  overlay.height = height\n\n  const { withBoxes, withScore = true, drawLines = true } = options\n\n  if (!results || !results.length) {\n    return\n  }\n\n  const resizedResults = results\n    .map(res =>\n      res instanceof BoxWithText\n        ? res\n        : (\n          res instanceof FaceLandmarks68\n            ? res.forSize(overlay.width, overlay.height)\n            : res.forSize(overlay.width, overlay.height)\n        )\n    )\n\n  const detections = resizedResults\n    .filter(res => res instanceof ObjectDetection || res instanceof FaceDetectionWithLandmarks || res instanceof BoxWithText)\n    .map((res: ObjectDetection | FaceDetectionWithLandmarks | BoxWithText) =>\n      (res instanceof BoxWithText || res instanceof ObjectDetection)\n        ? res\n        : res.detection\n    )\n\n  const drawDetectionsOptions = {\n    withScore,\n    textColor: 'red',\n    fontSize: 16\n  }\n\n  const faceLandmarks = resizedResults\n    .filter(res => res instanceof FaceLandmarks68 || res instanceof FaceDetectionWithLandmarks)\n    .map((res: FaceLandmarks68 | FaceDetectionWithLandmarks) =>\n      res instanceof FaceLandmarks68\n        ? res\n        : res.landmarks\n    )\n\n\n  const drawLandmarksOptions = {\n    drawLines,\n    color: 'green',\n    lineWidth: 2\n  }\n\n  if (withBoxes || !faceLandmarks.length) {\n    faceapi.drawDetection(overlay, detections, drawDetectionsOptions)\n  }\n  faceapi.drawLandmarks(overlay, faceLandmarks, drawLandmarksOptions)\n}","export function shallowEquals(obj1: any, obj2: any, excludeKeys: string[] = []) {\n  const excludeKeysSet = new Set(excludeKeys)\n\n  const keysSet = new Set(\n    Object.keys(obj1)\n      .concat(Object.keys(obj2))\n      .filter(key => !excludeKeysSet.has(key))\n  )\n\n  return Array.from(keysSet.values())\n    .filter(key => obj1[key] !== obj2[key])\n    .length === 0\n}","import * as faceapi from 'face-api.js';\nimport { FaceLandmarks68 } from 'face-api.js';\nimport { withAsyncRendering } from '../hoc/withAsyncRendering';\nimport { MediaElement } from '../MediaElement';\n\nexport interface DetectFaceLandmarksProps {\n  input?: MediaElement\n}\n\nexport interface DetectFaceLandmarksState {\n  faceLandmarks?: FaceLandmarks68\n}\n\nasync function detectFaceLandmarks(props: DetectFaceLandmarksProps) {\n  if (!props.input) {\n    return\n  }\n\n  const faceLandmarks = (await faceapi.nets.faceLandmark68Net.detectLandmarks(props.input.element)) as FaceLandmarks68\n\n  return {\n    faceLandmarks\n  }\n}\n\nexport const DetectFaceLandmarks =\n  withAsyncRendering<DetectFaceLandmarksProps, DetectFaceLandmarksState>(detectFaceLandmarks)\n","import * as faceapi from 'face-api.js';\n\nimport { withAsyncRendering } from '../hoc/withAsyncRendering';\nimport { MediaElement } from '../MediaElement';\nimport { FaceDetectionOptions, FaceDetection } from 'face-api.js';\n\nexport interface DetectFacesProps {\n  detectionOptions: FaceDetectionOptions\n  input?: MediaElement\n}\n\nexport interface DetectFacesState {\n  faceDetections?: FaceDetection[]\n}\n\nasync function detectFaces(props: DetectFacesProps) {\n\n  if (!props.input) {\n    return null\n  }\n\n  return {\n    faceDetections: await faceapi.detectAllFaces(props.input.element, props.detectionOptions)\n  }\n}\n\nexport const DetectFaces =\n  withAsyncRendering<DetectFacesProps, DetectFacesState>(detectFaces)\n","export * from './withAsyncRendering'","import { TMediaElement } from 'face-api.js';\n\nexport class MediaElement {\n  private _element: TMediaElement\n\n  constructor(element: TMediaElement) {\n    this._element = element\n  }\n\n  public get element(): TMediaElement {\n    return this._element\n  }\n}","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as faceapi from 'face-api.js';\n\nimport { withAsyncRendering } from '../hoc/withAsyncRendering';\nimport { MediaElement } from '../MediaElement';\n\nexport interface ComputeFaceDescriptorsProps {\n  inputs: Array<MediaElement | undefined>\n}\n\nexport interface ComputeFaceDescriptorsState {\n  faceDescriptors?: Float32Array[]\n}\n\nasync function computeFaceDescriptors(props: ComputeFaceDescriptorsProps) {\n  if (!props.inputs.every(input => !!input)) {\n    return\n  }\n\n  const faceDescriptors = await Promise.all(\n    props.inputs.map(input =>\n      faceapi.nets.faceRecognitionNet.computeFaceDescriptor(input.element) as Promise<Float32Array>\n    )\n  )\n\n  return {\n    faceDescriptors\n  }\n}\n\nexport const ComputeFaceDescriptors =\n  withAsyncRendering<ComputeFaceDescriptorsProps, ComputeFaceDescriptorsState>(computeFaceDescriptors)\n\n","import { NeuralNetwork } from 'face-api.js';\nimport * as faceapi from 'face-api.js';\n\nimport { withAsyncRendering } from '../hoc/withAsyncRendering';\n\nexport interface LoadModelsProps {\n  ssdMobilenetv1ModelUrl?: string\n  tinyFaceDetectorModelUrl?: string\n  mtcnnModelUrl?: string\n  faceLandmarkModelUrl?: string\n  faceRecognitionModelUrl?: string\n}\n\nexport interface LoadModelsState {}\n\nasync function loadModels(props: LoadModelsProps) {\n  const {\n    ssdMobilenetv1ModelUrl,\n    mtcnnModelUrl,\n    tinyFaceDetectorModelUrl,\n    faceLandmarkModelUrl,\n    faceRecognitionModelUrl\n  } = props\n\n  const load = async (net: NeuralNetwork<any>, url?: string) => {\n    if (url && !net.isLoaded) {\n      await net.load(url)\n    }\n  }\n\n  await Promise.all([\n    load(faceapi.nets.tinyFaceDetector, tinyFaceDetectorModelUrl),\n    load(faceapi.nets.ssdMobilenetv1, ssdMobilenetv1ModelUrl),\n    load(faceapi.nets.mtcnn, mtcnnModelUrl),\n    load(faceapi.nets.faceLandmark68Net, faceLandmarkModelUrl),\n    load(faceapi.nets.faceRecognitionNet, faceRecognitionModelUrl)\n  ])\n\n  return {}\n}\n\nexport const LoadModels = withAsyncRendering<LoadModelsProps, LoadModelsState>(loadModels)","export * from './ComputeFaceDescriptors'\nexport * from './DetectFaceLandmarks'\nexport * from './DetectFaces'\nexport * from './LoadModels'","import * as React from 'react';\n\nimport { MediaElement } from '../';\n\nexport type ImageWithOverlayProps = {\n  imageSrc: string\n  onLoaded: (refs: { img: MediaElement, overlay: HTMLCanvasElement}) => any\n  containerStyle?: React.CSSProperties\n  imageStyle?: React.CSSProperties\n  canvasStyle?: React.CSSProperties\n}\n\nexport class ImageWithOverlay extends React.Component<ImageWithOverlayProps> {\n  img: HTMLImageElement | undefined\n  overlay: HTMLCanvasElement | undefined\n  isLoaded: boolean = false\n\n  constructor(props: ImageWithOverlayProps) {\n    super(props)\n\n    this.onImageLoaded = this.onImageLoaded.bind(this)\n    this.onImageRef = this.onImageRef.bind(this)\n    this.onCanvasRef = this.onCanvasRef.bind(this)\n    this.onChange = this.onChange.bind(this)\n  }\n\n  onChange() {\n    const { img, overlay, isLoaded } = this\n\n    if (img && overlay && isLoaded) {\n      this.overlay.height = this.img.height\n      this.overlay.width = this.img.width\n      this.props.onLoaded({ img: new MediaElement(img), overlay })\n    }\n  }\n\n  onImageLoaded() {\n    this.isLoaded = true\n    this.onChange()\n  }\n\n  onImageRef(el: HTMLImageElement) {\n    this.img = el\n    this.onChange()\n  }\n\n  onCanvasRef(el: HTMLCanvasElement) {\n    this.overlay = el\n    this.onChange()\n  }\n\n  shouldComponentUpdate(nextProps: ImageWithOverlayProps) {\n    return nextProps.imageSrc !== this.props.imageSrc\n  }\n\n  componentDidUpdate() {\n    this.onChange()\n  }\n\n  componentDidMount() {\n    this.onChange()\n  }\n\n  public render() {\n    return(\n      <div style={Object.assign({}, { position: 'relative' }, this.props.containerStyle)}>\n        <img\n          src={this.props.imageSrc}\n          ref={this.onImageRef}\n          style={Object.assign({ width: '100%' }, this.props.imageStyle)}\n          onLoad={this.onImageLoaded}\n        />\n        <canvas\n          style={Object.assign({}, { position: 'absolute', top: 0, left: 0 }, this.props.canvasStyle)}\n          ref={this.onCanvasRef}\n        />\n      </div>\n    )\n  }\n}","export * from './DisplayResults'\nexport * from './ImageWithOverlay'","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { SheetsRegistry } from 'jss';\nimport { createMuiTheme, createGenerateClassName } from '@material-ui/core/styles';\nimport cyan from '@material-ui/core/colors/cyan';\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: cyan[300],\n      main: cyan[500],\n      dark: cyan[700]\n    }\n  },\n  sideMenuWidth: '240px'\n});\n\nfunction createPageContext() {\n  return {\n    theme,\n    // This is needed in order to deduplicate the injection of CSS in the page.\n    sheetsManager: new Map(),\n    // This is needed in order to inject the critical CSS.\n    sheetsRegistry: new SheetsRegistry(),\n    // The standard class name generator.\n    generateClassName: createGenerateClassName(),\n  };\n}\n\nexport default function getPageContext() {\n  // Make sure to create a new context for every server-side request so that data\n  // isn't shared between connections (which would be bad).\n  if (!process.browser) {\n    return createPageContext();\n  }\n\n  // Reuse context on the client-side.\n  if (!global.__INIT_MATERIAL_UI__) {\n    global.__INIT_MATERIAL_UI__ = createPageContext();\n  }\n\n  return global.__INIT_MATERIAL_UI__;\n}"],"sourceRoot":""}