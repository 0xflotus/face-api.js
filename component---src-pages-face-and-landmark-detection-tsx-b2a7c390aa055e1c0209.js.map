{"version":3,"sources":["webpack:///./face-api.js-react/facc/DetectFacesWithLandmarks.tsx","webpack:///./src/components/FaceAndLandmarkDetection.tsx?7880","webpack:///./src/pages/face_and_landmark_detection.tsx"],"names":[],"mappings":";;;;;;;;kCAeK,WAAuE;AAE1E,aAAI,CAAM,MAAM,OAAE;AAChB,oBAAW;AACZ;AAED;AAC6B,0CAAE,MAAa,QAAe,eAAM,MAAM,MAAQ,SAAO,MAAkB,kBAE1G;AAHS;AAGR;;;;;;;;;;AAxBD,mCAAuC;AAEvC,gDAA+D;;AAwBlD,SAAwB,2BACnC,qBAAkB,mBAAwF,0B;;;;;;;;;;;;;;;;;;AC3B5G,+BAAyC;AAEzC,+CAA6D;AAC7D,iCAA+B;AAG/B,yCAAwD;AACxD,mCAAgE;AAChE,gDAAgE;AAChE,2CAoBA;;KAAsC;;;AAAtC;;;;;AAEE,eAAK;AACU,4BAAO;AACX,wBAmDb;AArDyC;;AAqDxC;;wCAhDc;;;AACJ,oCACJ,qBAAkB,sBACE,qBAAM,KAAM,MAAoB,qBACrB,gCAAM,KAAM,MAA+B,4CAE7D,cAAkB,kBAA6B,6BAAgC;AAA5F,wCACE,oBAAU,yBACL,QAAwB,yBAAa,cAAE,QAAW,eAClC,sBAAE,QAAU,YACb;AAAO,4BAAC,oBAAC,cAAW,eAAQ,oBAAmC;;AAE9E,wBACJ,iCACE,oBAAC,gBAAa,qBACmB,mDAC9B,gBAAa,iBAAc,eAAS,UAAW,YAAW,kCACrD,IAAiB,oBACZ,6BACD,IAAS,YACJ,SAAM,OAAM,MAAc,eACzB;AAAO,oCAAK,OAAS,SAAC,EAAe,eAAE,CAAK,OAAM,MAAiB;4BACtE,OACL,WAJF,GAMG,OACL,yBATF,uBAUI,IAAiB,oBACZ,6BACD,IAAS,YACJ,SAAE,CAAK,OAAM,MAAU,WACtB;AAAO,oCAAK,OAAS,SAAC,EAAW,WAAE,CAAK,OAAM,MAAa;4BAC9D,OACL,WAJF,GAMG,OAGK,uBAXZ,CAXF,IAuB4B,8BACxB,OAAM,MAAW,WAAK,OAAM,MAAS,SAAiB,kBAAM,OAAS,SAOrF;cAxCM;UALF;AA8CL;;;GAvDkD,MAAgD;;AAAnG,oCAuDC,yB;;;;;;;;;;;;;;;;;;ACpFD,yCAAsD;AACtD,4CAA6E;AAC7E,iCAA+B;AAE/B,yCAAuE;AACvE,sDAAiG;AACjG,sDAAiH;AACjH,6CAAgF;AAChF,mCAA0D;AAC1D,kCAIA;;KAAqB;;;AAArB;;;;;AAEE,eAAK,QAwDP;;AAAC;;yBArDc;;;AACX,aAAK,EAAC,OAAa,WAAgB,eAAU,OAAU,WAAE;AACvD,oBAAW;AACZ;AAEK,oCACH,OAAI,YACH,oBAAC,kBAAe,mBACT,OAAE,QAAc,gBACN,iBAAE,QAAc,eAAG,GAAI,KAC9B;AAAG,qBAAY,aAAP;qBAAsB;wBAAK,OAAS,SAAC,EAAO,cAAY;gBAC3D,eAAE,kBAAc,eAAK,MACxB,YAAE,EAAU,UAAO,OACxB,OACL,8BACD,2BAAwB,uCACf,KAAM,SACK,qBAAE,QAAc,eAAG,IACR,gCAAE,IAAI,cAAuB,wBAAC,EAAW,WAAQ,qBAE7D;AAAnB,iBAAkC;iBAAiB;wDAG7C,2BAAwB,4BAClB,OAAM,OAAM,MAAM,OACP,kBAAkB;AAElC,qBAAmC;wBACnC,oBAAC,iBAAc,kBACN,SAAM,OAAM,MAAQ,SACpB,SAA6B,6BACf,uBAAE,EAI5B;cAZC,CADD,uBAcE,cAAW,eACL,OAAM,OAAM,MAAM,OACP,kBAAkB;AAElC,qBAAsB;wBACtB,oBAAC,iBAAc,kBACN,SAAM,OAAM,MAAQ,SACpB,SAAgB,gBACF,uBAAE,EAQvC;cAhBY;UArBN,CATF;AA+CL;;;GA1DiC,MAAyB;;AAA3D,mBA0DC,U","file":"component---src-pages-face-and-landmark-detection-tsx-b2a7c390aa055e1c0209.js","sourcesContent":["import * as faceapi from 'face-api.js';\n\nimport { withAsyncRendering } from '../hoc/withAsyncRendering';\nimport { MediaElement } from '../MediaElement';\nimport { FaceDetectionOptions, FaceDetectionWithLandmarks } from 'face-api.js';\n\nexport interface DetectFacesWithLandmarksProps {\n  detectionOptions: FaceDetectionOptions\n  input?: MediaElement\n}\n\nexport interface DetectFacesWithLandmarksState {\n  faceDetectionsWithLandmarks?: FaceDetectionWithLandmarks[]\n}\n\nasync function detectFacesWithLandmarks(props: DetectFacesWithLandmarksProps) {\n\n  if (!props.input) {\n    return null\n  }\n\n  return {\n    faceDetectionsWithLandmarks: await faceapi.detectAllFaces(props.input.element, props.detectionOptions).withFaceLandmarks()\n  }\n}\n\nexport const DetectFacesWithLandmarks =\n  withAsyncRendering<DetectFacesWithLandmarksProps, DetectFacesWithLandmarksState>(detectFacesWithLandmarks)\n\n\n\n// WEBPACK FOOTER //\n// ./face-api.js-react/facc/DetectFacesWithLandmarks.tsx","import * as Mui from '@material-ui/core';\r\nimport { FaceDetectionOptions, TinyFaceDetectorOptions } from 'face-api.js';\r\nimport { LoadModels, MediaElement } from 'face-api.js-react';\r\nimport * as React from 'react';\r\n\r\nimport { ReactElement } from '../../face-api.js-react';\r\nimport { ModalLoader } from '../components/ModalLoader';\r\nimport { getFaceDetectionModelUri, MODELS_URI } from '../const';\r\nimport { SelectFaceDetector } from '../facc/SelectFaceDetector';\r\nimport { CenterContent } from '../styled/CenterContent';\r\n\r\nexport type FaceAndLandmarkDetectionOptions = {\r\n  withLandmarks: boolean\r\n  withBoxes: boolean\r\n}\r\n\r\nexport type FaceAndLandmarkDetectionProps = {\r\n  input?: MediaElement\r\n  overlay?: HTMLCanvasElement\r\n}\r\n\r\ntype Props = FaceAndLandmarkDetectionProps & {\r\n  initialFaceDetector: string\r\n  initialTinyFaceDetectorOptions?: TinyFaceDetectorOptions\r\n  children?: (detectionOptions: FaceDetectionOptions, options: FaceAndLandmarkDetectionOptions) => ReactElement\r\n}\r\n\r\ntype FaceAndLandmarkDetectionState = FaceAndLandmarkDetectionOptions\r\n\r\nexport class FaceAndLandmarkDetection extends React.Component<Props, FaceAndLandmarkDetectionState> {\r\n\r\n  state: FaceAndLandmarkDetectionState = {\r\n    withLandmarks: false,\r\n    withBoxes: true\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <SelectFaceDetector\r\n        initialFaceDetector={this.props.initialFaceDetector}\r\n        initialTinyFaceDetectorOptions={this.props.initialTinyFaceDetectorOptions}\r\n      >\r\n      {(detectorName, detectionOptions, renderFaceDetectorSelection, renderFaceDetectorControls) =>\r\n        <LoadModels\r\n          {...getFaceDetectionModelUri(detectorName, MODELS_URI)}\r\n          faceLandmarkModelUrl={MODELS_URI}\r\n          renderBusyComponent={() => <ModalLoader title={`Loading ${detectorName} Model`} />}\r\n        >\r\n        {() =>\r\n          <div>\r\n            <CenterContent>\r\n              { renderFaceDetectorSelection() }\r\n              <CenterContent flexDirection=\"column\" alignItems=\"baseline\">\r\n                <Mui.FormControlLabel\r\n                  control={\r\n                    <Mui.Checkbox\r\n                      checked={this.state.withLandmarks}\r\n                      onChange={() => this.setState({ withLandmarks: !this.state.withLandmarks })}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Detect Face Landmarks\"\r\n                />\r\n                <Mui.FormControlLabel\r\n                  control={\r\n                    <Mui.Checkbox\r\n                      checked={!this.state.withBoxes}\r\n                      onChange={() => this.setState({ withBoxes: !this.state.withBoxes })}\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Hide Bounding Boxes\"\r\n                />\r\n                </CenterContent>\r\n            </CenterContent>\r\n            { renderFaceDetectorControls() }\r\n            { this.props.children ? this.props.children(detectionOptions, this.state) : null }\r\n          </div>\r\n        }\r\n        </LoadModels>\r\n      }\r\n      </SelectFaceDetector>\r\n    )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FaceAndLandmarkDetection.tsx","import { TinyFaceDetectorOptions } from 'face-api.js';\nimport { DisplayResults } from 'face-api.js-react/components/DisplayResults';\nimport * as React from 'react';\n\nimport { DetectFaces } from '../../face-api.js-react/facc/DetectFaces';\nimport { DetectFacesWithLandmarks } from '../../face-api.js-react/facc/DetectFacesWithLandmarks';\nimport { FaceAndLandmarkDetection, FaceAndLandmarkDetectionProps } from '../components/FaceAndLandmarkDetection';\nimport { SelectableImage, SelectionTypes } from '../components/SelectableImage';\nimport { EXAMPLE_IMAGES, FACE_DETECTORS } from '../const';\nimport { Root } from '../Root';\n\ntype PageState = FaceAndLandmarkDetectionProps\n\nexport default class extends React.Component<{}, PageState> {\n\n  state: PageState = {\n  }\n\n  public render() {\n    if (!(typeof window !== 'undefined' && window.document) ){\n      return null\n    }\n\n    return(\n      <Root>\n        <SelectableImage\n          items={EXAMPLE_IMAGES}\n          initialImageSrc={EXAMPLE_IMAGES[0].url}\n          onLoaded={({ img: input, overlay }) => this.setState({ input, overlay })}\n          selectionType={SelectionTypes.BOTH}\n          imageStyle={{ maxWidth: 800 }}\n          imgId=\"img\"\n        />\n        <FaceAndLandmarkDetection\n          {...this.state}\n          initialFaceDetector={FACE_DETECTORS[0]}\n          initialTinyFaceDetectorOptions={new TinyFaceDetectorOptions({ inputSize: 512 })}\n        >\n        {(detectionOptions, { withLandmarks, withBoxes }) =>\n          withLandmarks\n            ?\n              <DetectFacesWithLandmarks\n                input={this.state.input}\n                detectionOptions={detectionOptions}\n              >\n              {({ faceDetectionsWithLandmarks }) =>\n                <DisplayResults\n                  overlay={this.state.overlay}\n                  results={faceDetectionsWithLandmarks}\n                  displayResultsOptions={{ withBoxes }}\n                />\n              }\n              </DetectFacesWithLandmarks>\n            :\n              <DetectFaces\n                input={this.state.input}\n                detectionOptions={detectionOptions}\n              >\n              {({ faceDetections }) =>\n                <DisplayResults\n                  overlay={this.state.overlay}\n                  results={faceDetections}\n                  displayResultsOptions={{ withBoxes }}\n                />\n              }\n              </DetectFaces>\n        }\n        </FaceAndLandmarkDetection>\n      </Root>\n    )\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/face_and_landmark_detection.tsx"],"sourceRoot":""}