{"version":3,"sources":["webpack:///./src/components/FaceSimilarity.tsx","webpack:///./src/pages/bbt_face_similarity.tsx","webpack:///./src/styled/MarginTop.tsx"],"names":[],"mappings":";;;;;;;;AAAA,kCAAmE;AACnE,iCAA+B;AAOlB,SAAc,2BAAkC;AAA/B,YAC5B,oBAAC,OAAW,mBACV,oBAAC,OAAU,cAAQ,SAAW,cAEjB,cACb,oBAAC,OAAK,SACF,IAAW,YACR,OAAO,MAAK,MACZ,OAAE,EAAiB,iBAAO,MAAU,UAAY,YAE3C;;;;;;;;;;;;;;;;;AClBhB,mCAAuC;AACvC,+CAAqF;AACrF,iCAA+B;AAE/B,4CAA8D;AAC9D,yCAAwD;AACxD,6CAAgE;AAChE,mCAA2D;AAC3D,kCAA+B;AAC/B,uCAAgD;AAChD,wCAOA;;KAAqB;;;AAArB;;;;;AAEE,eAAK,QA+DP;;AAAC;;yBA5Dc;;;AACX,aAAK,EAAC,OAAa,WAAgB,eAAU,OAAU,WAAE;AACvD,oBAAW;AACZ;AAEK,oCACH,OAAI,YACH,oBAAC,aAAU,sCACR,kBAAe,mBACT,OAAE,QAAmB,qBACX,iBAAE,QAAmB,oBAAI,IAAI,KACpC;AAAG,qBAAsB,iBAAjB;wBAAsB,OAAS,SAAC,EAAc;gBACpD,YAAE,EAAU,UAAO,OACxB,OACL,QANF,uBAOC,kBAAe,mBACT,OAAE,QAAmB,qBACX,iBAAE,QAAmB,oBAAI,IAAI,KACpC;AAAG,qBAAsB,kBAAjB;wBAAsB,OAAS,SAAC,EAAc;gBACpD,YAAE,EAAU,UAAO,OACxB,OAEI,QAPX,wBAQD,YAAS,qCACP,oBAAU,cACc,yBAAE,QAAU,YAChB;AACZ,wBAAC,oBAAC,cAAW,eAAM,OAAoC;;AAG1D,wCACH,oBAAsB,0BACf,QAAE,CAAK,OAAM,MAAU,WAAM,OAAM,MAAW,YACjC;AACZ,4BAAC,oBAAC,cAAW,eAAM,OAAgC;sBAG1D;qBAAuB;;AACvB,qBAAI,CAAgB,iBAAE;AACpB,4BAAW;AACZ;AAED,qBAAc,WAAU,QAAkB,kBACzB,gBAAG,IACH,gBAChB;AACM,wBACL,oBAAC,iBAAc,kBACP,WAAU,QAAM,MAAY,WAC3B,SAAU,WAGvB;AAOV,cA5BU;UAPF,CADF,CAjBF;AAsDL;;;GAjEiC,MAAyB;;AAA3D,mBAiEC,U;;;;;;;;;;;;;;AClFD,+CAAuC;AAE1B,SAAS,YAAG,oBAAM,QAE9B,qB","file":"component---src-pages-bbt-face-similarity-tsx-3b9bfe3491c89d1a7ac3.js","sourcesContent":["import { FormControl, Input, InputLabel } from '@material-ui/core';\nimport * as React from 'react';\n\nexport type FaceSimilarityProps = {\n  text: string\n  isMatch: boolean\n}\n\nexport const FaceSimilarity = (props: FaceSimilarityProps) =>\n  <FormControl>\n    <InputLabel htmlFor=\"distance\">\n      Distance:\n    </InputLabel>\n    <Input\n      id=\"distance\"\n      value={props.text}\n      style={{ backgroundColor: props.isMatch ? '#b2ff59' : '#ea605d' }}\n    />\n  </FormControl>\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FaceSimilarity.tsx","import * as faceapi from 'face-api.js';\nimport { ComputeFaceDescriptors, LoadModels, MediaElement } from 'face-api.js-react';\nimport * as React from 'react';\n\nimport { FaceSimilarity } from '../components/FaceSimilarity';\nimport { ModalLoader } from '../components/ModalLoader';\nimport { SelectableImage } from '../components/SelectableImage';\nimport { ALIGNED_FACE_IMAGES, MODELS_URI } from '../const';\nimport { Root } from '../Root';\nimport { MarginTop } from '../styled/MarginTop';\nimport { SideBySide } from '../styled/SideBySide';\n\ntype PageState = {\n  inputImg1?: MediaElement\n  inputImg2?: MediaElement\n}\n\nexport default class extends React.Component<{}, PageState> {\n\n  state: PageState = {\n  }\n\n  public render() {\n    if (!(typeof window !== 'undefined' && window.document) ){\n      return null\n    }\n\n    return(\n      <Root>\n        <SideBySide>\n          <SelectableImage\n            items={ALIGNED_FACE_IMAGES}\n            initialImageSrc={ALIGNED_FACE_IMAGES[30].url}\n            onLoaded={({ img: inputImg1 }) => this.setState({ inputImg1 })}\n            imageStyle={{ maxWidth: 150 }}\n            imgId=\"img1\"\n          />\n          <SelectableImage\n            items={ALIGNED_FACE_IMAGES}\n            initialImageSrc={ALIGNED_FACE_IMAGES[31].url}\n            onLoaded={({ img: inputImg2 }) => this.setState({ inputImg2 })}\n            imageStyle={{ maxWidth: 150 }}\n            imgId=\"img2\"\n          />\n        </SideBySide>\n        <MarginTop>\n          <LoadModels\n            faceRecognitionModelUrl={MODELS_URI}\n            renderBusyComponent={\n              () => <ModalLoader title=\"Loading Face Recognition Model\" />\n            }\n          >\n          {() =>\n            <ComputeFaceDescriptors\n              inputs={[this.state.inputImg1, this.state.inputImg2]}\n              renderBusyComponent={\n                () => <ModalLoader title=\"Computing Face Descriptors\" />\n              }\n            >\n            {({ faceDescriptors }) => {\n              if (!faceDescriptors) {\n                return null\n              }\n\n              const distance = faceapi.euclideanDistance(\n                faceDescriptors[0],\n                faceDescriptors[1]\n              )\n              return (\n                <FaceSimilarity\n                  text={`${faceapi.round(distance)}`}\n                  isMatch={distance < 0.6}\n                />\n              )\n            }}\n            </ComputeFaceDescriptors>\n          }\n          </LoadModels>\n        </MarginTop>\n      </Root>\n    )\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/bbt_face_similarity.tsx","import styled from 'styled-components';\n\nexport const MarginTop = styled.div`\n  margin-top: 10px;\n`\n\n\n// WEBPACK FOOTER //\n// ./src/styled/MarginTop.tsx"],"sourceRoot":""}